[1506855506] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506855506] sched.py:_updateCutoff(): 0, 1506880800
[1506855521] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506855521] sched.py:_updateCutoff(): 0, 1506880800
[1506855532] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506855532] sched.py:_updateCutoff(): 0, 1506880800
[1506855550] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506855550] sched.py:_updateCutoff(): 0, 1506880800
[1506855552] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1505873831114,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1506855552,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 46}
[1506855552] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1506855506833,
 'msg': '',
 'musn': 0,
 'scm': 1506855506831,
 'ts': 1506855552,
 'usn': 0}
[1506855552] sync.py:sync(): schema diff
[1506855554] sync.py:sync(): findChanges
[1506855555] sync.py:sync(): last local usn is 0
[1506855556] sync.py:sync(): mediaChanges resp count 622
[1506855556] sync.py:sync(): check: lsum=None rsum=22c0 ldirty=0 rusn=1 fname=latex-0dcdd5f8f5ecc9f753915b1e8fe1e3852d8fe313.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=efed ldirty=0 rusn=2 fname=latex-14236ab297fa92ad5f672f6b8a653828425d3051.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2a5f ldirty=0 rusn=3 fname=latex-18639e0d51eceddfb3931e4836b48129120af466.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b734 ldirty=0 rusn=4 fname=latex-1a8da426da4bbc046d184617c731d8f07f1ab3a7.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ed27 ldirty=0 rusn=5 fname=latex-1d796e10bdd6d0e3449d33a51bac924ec048dbb8.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=49d2 ldirty=0 rusn=6 fname=latex-3abe03475398a9965382f955c7f9747fe1029766.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=313a ldirty=0 rusn=7 fname=latex-5511fc6f78fd24de845934d97aad9628af2d6d83.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ec9f ldirty=0 rusn=8 fname=latex-558227822754a43c969c5578c3bce029d86cc75e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=48d2 ldirty=0 rusn=9 fname=latex-575103080e09ffeaf87a51f13e689b4c60ee3bd5.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=db64 ldirty=0 rusn=10 fname=latex-5793336e7f026cf1e694fcf6f4972509508a6e62.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=00c0 ldirty=0 rusn=11 fname=latex-602cfc88b79f7f172a2e974a1217569f79f8f4f4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=18ea ldirty=0 rusn=12 fname=latex-693fb9adc756956f1a6c3ea03d36a5cd55feaf53.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9f51 ldirty=0 rusn=13 fname=latex-6b994191f12d2cbcf736a932e1a6e9cebcf267a3.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cb2e ldirty=0 rusn=14 fname=latex-6ca972b964661930a3c6ca968f0c0ef481e5338f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e64f ldirty=0 rusn=15 fname=latex-6e10b603b36820159974a1e2f12cd81ebc9fd116.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a2b3 ldirty=0 rusn=16 fname=latex-752ba43fea64ceff76cb0d5ac0bd90263367e7af.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3611 ldirty=0 rusn=17 fname=latex-77e398d74adb12e5624dfdac951f758907a6a467.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b8bb ldirty=0 rusn=18 fname=latex-7d91329b4e625fa3e2a71eaaea24af5268fb2dc1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1014 ldirty=0 rusn=19 fname=latex-80914e4d1299b0a0048583470167ee88c2ae96cb.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5570 ldirty=0 rusn=20 fname=latex-9947668f567f55cfc9227f558431d0d04a10b535.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=48d2 ldirty=0 rusn=21 fname=latex-9e1745df8c25c6ad429b25fbe9a7fc34c4ef7f78.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7908 ldirty=0 rusn=22 fname=latex-a0915bed69ae91383ce3ce727fa30f7fef661eac.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0de3 ldirty=0 rusn=23 fname=latex-a189c269857216ebabcdeeee3556def9568830cf.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0fde ldirty=0 rusn=24 fname=latex-abfdf405bcdce686336c5fdcb287bafbef1d43b5.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5ba1 ldirty=0 rusn=25 fname=latex-accefe62f85096fdf44f0b7ceff0a6a3da55b37f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=21ed ldirty=0 rusn=26 fname=latex-aebe6ddf79e9a7491a40fd2a5c4a5935c8900ef9.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=63ad ldirty=0 rusn=27 fname=latex-b18501df1d4b591fcbc1cb702c8787bcd816731a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d6e1 ldirty=0 rusn=28 fname=latex-b8598381e5ec0693f798ceba856818c22bd19cc3.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f2e9 ldirty=0 rusn=29 fname=latex-cbfff1f68eb972fb515288dcbb2e03741377ae8f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b346 ldirty=0 rusn=30 fname=latex-d111fb0e28c8657d0bef09d0119be33be5d3d2fb.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=489b ldirty=0 rusn=31 fname=latex-d77ef2a93cd8305f80ece4db5593aa77bf67d2e0.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=70e3 ldirty=0 rusn=32 fname=latex-de7f941219cc422e945fd8c7004965090e1b691c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2022 ldirty=0 rusn=33 fname=latex-e88df998a69c41b1a46953a22905c28f42467468.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1e91 ldirty=0 rusn=34 fname=paste-10088878178305.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e0b1 ldirty=0 rusn=35 fname=paste-10093173145601.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c693 ldirty=0 rusn=36 fname=paste-10106058047489.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ed35 ldirty=0 rusn=37 fname=paste-10161892622337.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1114 ldirty=0 rusn=38 fname=paste-10166187589633.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9209 ldirty=0 rusn=39 fname=paste-10230612099073.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7c1f ldirty=0 rusn=40 fname=paste-10243497000961.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dc37 ldirty=0 rusn=41 fname=paste-10247791968257.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b51a ldirty=0 rusn=42 fname=paste-10277856739329.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aded ldirty=0 rusn=43 fname=paste-10320806412289.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3bb0 ldirty=0 rusn=44 fname=paste-10325101379585.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f0a7 ldirty=0 rusn=45 fname=paste-10393820856321.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b4dc ldirty=0 rusn=46 fname=paste-10462540333057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0db9 ldirty=0 rusn=47 fname=paste-10475425234945 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9cd4 ldirty=0 rusn=48 fname=paste-10475425234945.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1d7b ldirty=0 rusn=49 fname=paste-10531259809793.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=69f3 ldirty=0 rusn=50 fname=paste-10557029613569.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=492a ldirty=0 rusn=51 fname=paste-10591389351937.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=db9a ldirty=0 rusn=52 fname=paste-10604274253825.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8342 ldirty=0 rusn=53 fname=paste-10655813861377.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e4de ldirty=0 rusn=54 fname=paste-10711648436225.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a45d ldirty=0 rusn=55 fname=paste-10793252814849.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=62b6 ldirty=0 rusn=56 fname=paste-10844792422401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3aae ldirty=0 rusn=57 fname=paste-10853382356993.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fbd2 ldirty=0 rusn=58 fname=paste-10857677324289.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8abe ldirty=0 rusn=59 fname=paste-10861972291585.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0a5f ldirty=0 rusn=60 fname=paste-10909216931841.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0a5c ldirty=0 rusn=61 fname=paste-10926396801025.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dc93 ldirty=0 rusn=62 fname=paste-10965051506689.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e67d ldirty=0 rusn=63 fname=paste-10982231375873.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=976d ldirty=0 rusn=64 fname=paste-10990821310465.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f2f9 ldirty=0 rusn=65 fname=paste-11020886081537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fb6b ldirty=0 rusn=66 fname=paste-11038065950721.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5246 ldirty=0 rusn=67 fname=paste-11042360918017.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=99d2 ldirty=0 rusn=68 fname=paste-11076720656385.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ae9c ldirty=0 rusn=69 fname=paste-11089605558273.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dccf ldirty=0 rusn=70 fname=paste-11222749544449.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b2e ldirty=0 rusn=71 fname=paste-11269994184705.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=86ae ldirty=0 rusn=72 fname=paste-11274289152001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3a75 ldirty=0 rusn=73 fname=paste-11360188497921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fe2b ldirty=0 rusn=74 fname=paste-11368778432513.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0647 ldirty=0 rusn=75 fname=paste-11398843203585.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3d9a ldirty=0 rusn=76 fname=paste-11416023072769.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=911e ldirty=0 rusn=77 fname=paste-11531987189761.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d6e0 ldirty=0 rusn=78 fname=paste-11566346928129.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5e2e ldirty=0 rusn=79 fname=paste-11592116731905.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=164b ldirty=0 rusn=80 fname=paste-11596411699201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8c4e ldirty=0 rusn=81 fname=paste-11605001633793.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1837 ldirty=0 rusn=82 fname=paste-11635066404865.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dd1f ldirty=0 rusn=83 fname=paste-11656541241345.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ad3b ldirty=0 rusn=84 fname=paste-11669426143233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6fb9 ldirty=0 rusn=85 fname=paste-11682311045121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fcd5 ldirty=0 rusn=86 fname=paste-11733850652673.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f3d4 ldirty=0 rusn=87 fname=paste-11824044965889.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7447 ldirty=0 rusn=88 fname=paste-11884174508033.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b15e ldirty=0 rusn=89 fname=paste-11897059409921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4f18 ldirty=0 rusn=90 fname=paste-11905649344513.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8b02 ldirty=0 rusn=91 fname=paste-11965778886657.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c458 ldirty=0 rusn=92 fname=paste-11974368821249.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3863 ldirty=0 rusn=93 fname=paste-11987253723137.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4770 ldirty=0 rusn=94 fname=paste-12038793330689.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dbfa ldirty=0 rusn=95 fname=paste-12150462480385.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9e99 ldirty=0 rusn=96 fname=paste-12171937316865.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b66c ldirty=0 rusn=97 fname=paste-12206297055233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b57e ldirty=0 rusn=98 fname=paste-12257836662785.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c92f ldirty=0 rusn=99 fname=paste-12313671237633.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=da6f ldirty=0 rusn=100 fname=paste-12348030976001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5c1c ldirty=0 rusn=101 fname=paste-12365210845185 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7fa0 ldirty=0 rusn=102 fname=paste-12365210845185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d723 ldirty=0 rusn=103 fname=paste-12416750452737.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c961 ldirty=0 rusn=104 fname=paste-12433930321921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7cb3 ldirty=0 rusn=105 fname=paste-12489764896769.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=55b8 ldirty=0 rusn=106 fname=paste-12506944765953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0caa ldirty=0 rusn=107 fname=paste-12545599471617.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bba5 ldirty=0 rusn=108 fname=paste-12743167967233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=630b ldirty=0 rusn=109 fname=paste-12807592476673.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f2b8 ldirty=0 rusn=110 fname=paste-12824772345857.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=349c ldirty=0 rusn=111 fname=paste-12893491822593.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1ca6 ldirty=0 rusn=112 fname=paste-12923556593665.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=eda2 ldirty=0 rusn=113 fname=paste-12953621364737.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8fea ldirty=0 rusn=114 fname=paste-13065290514433.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3bb9 ldirty=0 rusn=115 fname=paste-13103945220097.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c697 ldirty=0 rusn=116 fname=paste-13155484827649.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2629 ldirty=0 rusn=117 fname=paste-13228499271681.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=edb0 ldirty=0 rusn=118 fname=paste-13262859010049.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fbf3 ldirty=0 rusn=119 fname=paste-13529146982401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b9a8 ldirty=0 rusn=120 fname=paste-13589276524545.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5c49 ldirty=0 rusn=121 fname=paste-13623636262913.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=362f ldirty=0 rusn=122 fname=paste-13666585935873.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ac34 ldirty=0 rusn=123 fname=paste-13705240641537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5ce2 ldirty=0 rusn=124 fname=paste-13769665150977.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6632 ldirty=0 rusn=125 fname=paste-13902809137153.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1937 ldirty=0 rusn=126 fname=paste-13924283973633.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b91 ldirty=0 rusn=127 fname=paste-13950053777409.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b8b ldirty=0 rusn=128 fname=paste-14027363188737.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5e1f ldirty=0 rusn=129 fname=paste-14091787698177.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1217 ldirty=0 rusn=130 fname=paste-14130442403841.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0db9 ldirty=0 rusn=131 fname=paste-14207751815169.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5aa9 ldirty=0 rusn=132 fname=paste-14280766259201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9dca ldirty=0 rusn=133 fname=paste-14315125997569.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a834 ldirty=0 rusn=134 fname=paste-14345190768641.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f9ad ldirty=0 rusn=135 fname=paste-14349485735937.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7df9 ldirty=0 rusn=136 fname=paste-14495514624001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b019 ldirty=0 rusn=137 fname=paste-14564234100737.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7418 ldirty=0 rusn=138 fname=paste-14632953577473.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=20e7 ldirty=0 rusn=139 fname=paste-14740327759873.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2e43 ldirty=0 rusn=140 fname=paste-14843406974977.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7efc ldirty=0 rusn=141 fname=paste-14890651615233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e273 ldirty=0 rusn=142 fname=paste-14967961026561.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8bbd ldirty=0 rusn=143 fname=paste-14993730830337.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=be19 ldirty=0 rusn=144 fname=paste-15019500634113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ef2f ldirty=0 rusn=145 fname=paste-15161234554881.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7842 ldirty=0 rusn=146 fname=paste-15178414424065.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e84b ldirty=0 rusn=147 fname=paste-15212774162433.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=945a ldirty=0 rusn=148 fname=paste-15238543966209.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3716 ldirty=0 rusn=149 fname=paste-15251428868097.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dbb9 ldirty=0 rusn=150 fname=paste-15264313769985.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8b39 ldirty=0 rusn=151 fname=paste-15272903704577.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1e6c ldirty=0 rusn=152 fname=paste-15294378541057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2185 ldirty=0 rusn=153 fname=paste-15324443312129.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e781 ldirty=0 rusn=154 fname=paste-15401752723457.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8b6e ldirty=0 rusn=155 fname=paste-15444702396417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=da88 ldirty=0 rusn=156 fname=paste-15582141349889.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fb6b ldirty=0 rusn=157 fname=paste-15620796055553.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1028 ldirty=0 rusn=158 fname=paste-15771119910913 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3653 ldirty=0 rusn=159 fname=paste-15771119910913.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c91c ldirty=0 rusn=160 fname=paste-15814069583873 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1522 ldirty=0 rusn=161 fname=paste-15814069583873.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7cb8 ldirty=0 rusn=162 fname=paste-15844134354945.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=82e4 ldirty=0 rusn=163 fname=paste-15878494093313.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3381 ldirty=0 rusn=164 fname=paste-15925738733569.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5995 ldirty=0 rusn=165 fname=paste-15972983373825.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4fac ldirty=0 rusn=166 fname=paste-16028817948673.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=815c ldirty=0 rusn=167 fname=paste-16110422327297.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=91eb ldirty=0 rusn=168 fname=paste-16265041149953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fbbf ldirty=0 rusn=169 fname=paste-16290810953729.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=536e ldirty=0 rusn=170 fname=paste-16432544874497.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dd75 ldirty=0 rusn=171 fname=paste-16488379449345.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=028a ldirty=0 rusn=172 fname=paste-16518444220417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0864 ldirty=0 rusn=173 fname=paste-16668768075777.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cb81 ldirty=0 rusn=174 fname=paste-16716012716033.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b9f ldirty=0 rusn=175 fname=paste-16909286244353.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7924 ldirty=0 rusn=176 fname=paste-17016660426753.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6026 ldirty=0 rusn=177 fname=paste-17321603104769.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b99e ldirty=0 rusn=178 fname=paste-17373142712321.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=55d2 ldirty=0 rusn=179 fname=paste-17416092385281.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d036 ldirty=0 rusn=180 fname=paste-17441862189057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1fe8 ldirty=0 rusn=181 fname=paste-17463337025537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6c09 ldirty=0 rusn=182 fname=paste-17506286698497.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bdbf ldirty=0 rusn=183 fname=paste-17557826306049.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=64ab ldirty=0 rusn=184 fname=paste-17703855194113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=eeef ldirty=0 rusn=185 fname=paste-17716740096001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7773 ldirty=0 rusn=186 fname=paste-17755394801665.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=17df ldirty=0 rusn=187 fname=paste-17884243820545.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f8ce ldirty=0 rusn=188 fname=paste-17888538787841.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=162f ldirty=0 rusn=189 fname=paste-18038862643201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ca5a ldirty=0 rusn=190 fname=paste-18047452577793.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8d51 ldirty=0 rusn=191 fname=paste-18146236825601.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=544c ldirty=0 rusn=192 fname=paste-18236431138817.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4e28 ldirty=0 rusn=193 fname=paste-18326625452033.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a69e ldirty=0 rusn=194 fname=paste-18399639896065.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=952e ldirty=0 rusn=195 fname=paste-18472654340097.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3f84 ldirty=0 rusn=196 fname=paste-18537078849537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a08d ldirty=0 rusn=197 fname=paste-18575733555201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=28c3 ldirty=0 rusn=198 fname=paste-18661632901121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cbf3 ldirty=0 rusn=199 fname=paste-18678812770305.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6acf ldirty=0 rusn=200 fname=paste-18721762443265.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=219e ldirty=0 rusn=201 fname=paste-18807661789185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c721 ldirty=0 rusn=202 fname=paste-18897856102401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=440f ldirty=0 rusn=203 fname=paste-18992345382913.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c491 ldirty=0 rusn=204 fname=paste-19000935317505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d0b1 ldirty=0 rusn=205 fname=paste-19069654794241.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6d17 ldirty=0 rusn=206 fname=paste-19125489369089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5153 ldirty=0 rusn=207 fname=paste-19288698126337.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=90a4 ldirty=0 rusn=208 fname=paste-19353122635777.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bb4f ldirty=0 rusn=209 fname=paste-19516331393025.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2ab8 ldirty=0 rusn=210 fname=paste-19537806229505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c05b ldirty=0 rusn=211 fname=paste-19589345837057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=38ce ldirty=0 rusn=212 fname=paste-19735374725121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ca30 ldirty=0 rusn=213 fname=paste-19765439496193.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8019 ldirty=0 rusn=214 fname=paste-19941533155329.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=26aa ldirty=0 rusn=215 fname=paste-20121921781761.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=34cc ldirty=0 rusn=216 fname=paste-20134806683649.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ac25 ldirty=0 rusn=217 fname=paste-20156281520129.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0e07 ldirty=0 rusn=218 fname=paste-20169166422017.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3617 ldirty=0 rusn=219 fname=paste-20345260081153.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=22a4 ldirty=0 rusn=220 fname=paste-20444044328961.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=754e ldirty=0 rusn=221 fname=paste-20512763805697.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5bf4 ldirty=0 rusn=222 fname=paste-2057289334785.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d19d ldirty=0 rusn=223 fname=paste-20641612824577.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=99d3 ldirty=0 rusn=224 fname=paste-20800526614529.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d1f0 ldirty=0 rusn=225 fname=paste-20929375633409.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e261 ldirty=0 rusn=226 fname=paste-21019569946625.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c483 ldirty=0 rusn=227 fname=paste-21225728376833.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2120 ldirty=0 rusn=228 fname=paste-21496311316481.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cf9c ldirty=0 rusn=229 fname=paste-21573620727809.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=671e ldirty=0 rusn=230 fname=paste-21723944583169.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a4ee ldirty=0 rusn=231 fname=paste-21887153340417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=12f4 ldirty=0 rusn=232 fname=paste-22037477195777.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=04c2 ldirty=0 rusn=233 fname=paste-22217865822209.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2bf5 ldirty=0 rusn=234 fname=paste-22527103467521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4e22 ldirty=0 rusn=235 fname=paste-2259152797697.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c3bb ldirty=0 rusn=236 fname=paste-22595822944257.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6fb0 ldirty=0 rusn=237 fname=paste-22707492093953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e211 ldirty=0 rusn=238 fname=paste-22892175687681.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a06e ldirty=0 rusn=239 fname=paste-23068269346817.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d315 ldirty=0 rusn=240 fname=paste-23081154248705.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5eb6 ldirty=0 rusn=241 fname=paste-23188528431105.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3104 ldirty=0 rusn=242 fname=paste-23278722744321.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f4a6 ldirty=0 rusn=243 fname=paste-23338852286465.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c07a ldirty=0 rusn=244 fname=paste-23471996272641.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3af0 ldirty=0 rusn=245 fname=paste-23609435226113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0155 ldirty=0 rusn=246 fname=paste-2379411881985.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b5c8 ldirty=0 rusn=247 fname=paste-23888608100353.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=661d ldirty=0 rusn=248 fname=paste-24197845745665.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6d21 ldirty=0 rusn=249 fname=paste-2422361554945.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fe3e ldirty=0 rusn=250 fname=paste-2430951489537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d54e ldirty=0 rusn=251 fname=paste-24326694764545.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=98d3 ldirty=0 rusn=252 fname=paste-24494198489089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fbc9 ldirty=0 rusn=253 fname=paste-24567212933121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d6fe ldirty=0 rusn=254 fname=paste-2465311227905.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8727 ldirty=0 rusn=255 fname=paste-24674587115521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=708d ldirty=0 rusn=256 fname=paste-24854975741953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=423f ldirty=0 rusn=257 fname=paste-24867860643841.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bfbb ldirty=0 rusn=258 fname=paste-25048249270273.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c807 ldirty=0 rusn=259 fname=paste-25189983191041.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0627 ldirty=0 rusn=260 fname=paste-25383256719361.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=721d ldirty=0 rusn=261 fname=paste-25456271163393.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=66d1 ldirty=0 rusn=262 fname=paste-25606595018753.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=769b ldirty=0 rusn=263 fname=paste-2572685410305.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=00b6 ldirty=0 rusn=264 fname=paste-26237955211265.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=34dc ldirty=0 rusn=265 fname=paste-2624225017857 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aa64 ldirty=0 rusn=266 fname=paste-2624225017857 (2).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d99f ldirty=0 rusn=267 fname=paste-2624225017857.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=10ec ldirty=0 rusn=268 fname=paste-26418343837697.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3c8f ldirty=0 rusn=269 fname=paste-26487063314433.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=005c ldirty=0 rusn=270 fname=paste-2662879723521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d72a ldirty=0 rusn=271 fname=paste-26877905338369.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=00bb ldirty=0 rusn=272 fname=paste-26950919782401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=20ed ldirty=0 rusn=273 fname=paste-2701534429185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7cb9 ldirty=0 rusn=274 fname=paste-27084063768577.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0122 ldirty=0 rusn=275 fname=paste-27234387623937.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=65c2 ldirty=0 rusn=276 fname=paste-27410481283073.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=68dd ldirty=0 rusn=277 fname=paste-27590869909505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=57a2 ldirty=0 rusn=278 fname=paste-27724013895681.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7469 ldirty=0 rusn=279 fname=paste-27792733372417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a6ac ldirty=0 rusn=280 fname=paste-2787433775105.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3785 ldirty=0 rusn=281 fname=paste-28114855919617.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=46c0 ldirty=0 rusn=282 fname=paste-28127740821505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2cf5 ldirty=0 rusn=283 fname=paste-2817498546177.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ed82 ldirty=0 rusn=284 fname=paste-2830383448065.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3a22 ldirty=0 rusn=285 fname=paste-28316719382529.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9bc3 ldirty=0 rusn=286 fname=paste-2843268349953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b79 ldirty=0 rusn=287 fname=paste-28484223107073.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fd4b ldirty=0 rusn=288 fname=paste-28673201668097.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7b97 ldirty=0 rusn=289 fname=paste-28840705392641.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0d23 ldirty=0 rusn=290 fname=paste-29033978920961.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7d3b ldirty=0 rusn=291 fname=paste-29145648070657.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3973 ldirty=0 rusn=292 fname=paste-29326036697089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c653 ldirty=0 rusn=293 fname=paste-2933462663169.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c8b7 ldirty=0 rusn=294 fname=paste-29506425323521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d210 ldirty=0 rusn=295 fname=paste-2950642532353.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=98aa ldirty=0 rusn=296 fname=paste-29588029702145.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8dcb ldirty=0 rusn=297 fname=paste-29686813949953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6287 ldirty=0 rusn=298 fname=paste-29755533426689.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=55a7 ldirty=0 rusn=299 fname=paste-29931627085825.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4aa7 ldirty=0 rusn=300 fname=paste-30172145254401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e386 ldirty=0 rusn=301 fname=paste-30193620090881.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c145 ldirty=0 rusn=302 fname=paste-3019362009089 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bb2d ldirty=0 rusn=303 fname=paste-3019362009089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d3f5 ldirty=0 rusn=304 fname=paste-3075196583937.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dd9c ldirty=0 rusn=305 fname=paste-3092376453121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d820 ldirty=0 rusn=306 fname=paste-3156800962561.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=09b9 ldirty=0 rusn=307 fname=paste-3195455668225.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3230 ldirty=0 rusn=308 fname=paste-3208340570113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3252 ldirty=0 rusn=309 fname=paste-3229815406593.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e250 ldirty=0 rusn=310 fname=paste-3246995275777.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4beb ldirty=0 rusn=311 fname=paste-3277060046849.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d3e0 ldirty=0 rusn=312 fname=paste-3302829850625.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7974 ldirty=0 rusn=313 fname=paste-3354369458177.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=620d ldirty=0 rusn=314 fname=paste-3358664425473.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=251d ldirty=0 rusn=315 fname=paste-3362959392769.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1304 ldirty=0 rusn=316 fname=paste-3388729196545.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f04d ldirty=0 rusn=317 fname=paste-3393024163841.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0766 ldirty=0 rusn=318 fname=paste-3410204033025.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e164 ldirty=0 rusn=319 fname=paste-3474628542465.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=be8f ldirty=0 rusn=320 fname=paste-3496103378945.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=98ba ldirty=0 rusn=321 fname=paste-3504693313537.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=55a2 ldirty=0 rusn=322 fname=paste-3526168150017.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8f11 ldirty=0 rusn=323 fname=paste-3551937953793.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1d8c ldirty=0 rusn=324 fname=paste-3564822855681.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=de4f ldirty=0 rusn=325 fname=paste-3603477561345.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5124 ldirty=0 rusn=326 fname=paste-3633542332417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f418 ldirty=0 rusn=327 fname=paste-3680786972673.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=af09 ldirty=0 rusn=328 fname=paste-3685081939969.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=679f ldirty=0 rusn=329 fname=paste-3745211482113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=847f ldirty=0 rusn=330 fname=paste-3749506449409.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=047b ldirty=0 rusn=331 fname=paste-3809635991553.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=34dd ldirty=0 rusn=332 fname=paste-3865470566401.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bc8b ldirty=0 rusn=333 fname=paste-3985729650689.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=73a6 ldirty=0 rusn=334 fname=paste-4037269258241.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9c60 ldirty=0 rusn=335 fname=paste-4084513898497.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2766 ldirty=0 rusn=336 fname=paste-4093103833089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=68e3 ldirty=0 rusn=337 fname=paste-4131758538753.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bcaf ldirty=0 rusn=338 fname=paste-4140348473345.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=af25 ldirty=0 rusn=339 fname=paste-4153233375233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=575d ldirty=0 rusn=340 fname=paste-4161823309825.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1600 ldirty=0 rusn=341 fname=paste-4230542786561.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4af9 ldirty=0 rusn=342 fname=paste-4234837753857.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0a7c ldirty=0 rusn=343 fname=paste-4342211936257.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0fa4 ldirty=0 rusn=344 fname=paste-4380866641921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8f96 ldirty=0 rusn=345 fname=paste-4393751543809.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=75bc ldirty=0 rusn=346 fname=paste-4475355922433.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b248 ldirty=0 rusn=347 fname=paste-4556960301057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e3bf ldirty=0 rusn=348 fname=paste-4634269712385.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0848 ldirty=0 rusn=349 fname=paste-4672924418049.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ab6a ldirty=0 rusn=350 fname=paste-4707284156417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1b70 ldirty=0 rusn=351 fname=paste-4737348927489.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0c3f ldirty=0 rusn=352 fname=paste-4758823763969.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6fd5 ldirty=0 rusn=353 fname=paste-4780298600449.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ad02 ldirty=0 rusn=354 fname=paste-4810363371521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1029 ldirty=0 rusn=355 fname=paste-4827543240705.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=be5e ldirty=0 rusn=356 fname=paste-4853313044481.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=87c8 ldirty=0 rusn=357 fname=paste-4891967750145.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=25c7 ldirty=0 rusn=358 fname=paste-4977867096065.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e426 ldirty=0 rusn=359 fname=paste-5016521801729.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c64c ldirty=0 rusn=360 fname=paste-5050881540097.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=78f4 ldirty=0 rusn=361 fname=paste-5119601016833.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9278 ldirty=0 rusn=362 fname=paste-5128190951425.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d1a4 ldirty=0 rusn=363 fname=paste-5132485918721.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7df5 ldirty=0 rusn=364 fname=paste-5184025526273.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6213 ldirty=0 rusn=365 fname=paste-5201205395457.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a345 ldirty=0 rusn=366 fname=paste-5205500362753.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b5cb ldirty=0 rusn=367 fname=paste-5222680231937.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1265 ldirty=0 rusn=368 fname=paste-5278514806785.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0fa3 ldirty=0 rusn=369 fname=paste-5291399708673.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=28cf ldirty=0 rusn=370 fname=paste-5355824218113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a2a6 ldirty=0 rusn=371 fname=paste-5373004087297.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=faad ldirty=0 rusn=372 fname=paste-5420248727553.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=faad ldirty=0 rusn=373 fname=paste-5424543694849.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=75b3 ldirty=0 rusn=374 fname=paste-5454608465921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7324 ldirty=0 rusn=375 fname=paste-5501853106177.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bc99 ldirty=0 rusn=376 fname=paste-5519032975361.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3779 ldirty=0 rusn=377 fname=paste-5527622909953.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ee25 ldirty=0 rusn=378 fname=paste-5592047419393.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8673 ldirty=0 rusn=379 fname=paste-5819680686081.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=77a5 ldirty=0 rusn=380 fname=paste-5832565587969.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fef9 ldirty=0 rusn=381 fname=paste-5892695130113.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cc5f ldirty=0 rusn=382 fname=paste-5922759901185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ac92 ldirty=0 rusn=383 fname=paste-5978594476033.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b12a ldirty=0 rusn=384 fname=paste-5995774345217.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7b94 ldirty=0 rusn=385 fname=paste-6047313952769.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a9fc ldirty=0 rusn=386 fname=paste-6103148527617.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fb26 ldirty=0 rusn=387 fname=paste-6116033429505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2b45 ldirty=0 rusn=388 fname=paste-6141803233281.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=579f ldirty=0 rusn=389 fname=paste-6167573037057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a97d ldirty=0 rusn=390 fname=paste-6214817677313.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e611 ldirty=0 rusn=391 fname=paste-6257767350273.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=242d ldirty=0 rusn=392 fname=paste-6279242186753.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a7c3 ldirty=0 rusn=393 fname=paste-6300717023233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aa8d ldirty=0 rusn=394 fname=paste-6330781794305.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2244 ldirty=0 rusn=395 fname=paste-6390911336449.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4557 ldirty=0 rusn=396 fname=paste-6438155976705.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1d15 ldirty=0 rusn=397 fname=paste-6451040878593.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d5ef ldirty=0 rusn=398 fname=paste-6459630813185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c710 ldirty=0 rusn=399 fname=paste-6472515715073.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ec45 ldirty=0 rusn=400 fname=paste-6493990551553.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e085 ldirty=0 rusn=401 fname=paste-6528350289921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5f6c ldirty=0 rusn=402 fname=paste-6545530159105.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6bcb ldirty=0 rusn=403 fname=paste-6579889897473.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=35da ldirty=0 rusn=404 fname=paste-6635724472321.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d0d5 ldirty=0 rusn=405 fname=paste-6704443949057.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2eb4 ldirty=0 rusn=406 fname=paste-6734508720129.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0e48 ldirty=0 rusn=407 fname=paste-6962141986817.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3880 ldirty=0 rusn=408 fname=paste-6975026888705.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c13d ldirty=0 rusn=409 fname=paste-7060926234625.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=09fe ldirty=0 rusn=410 fname=paste-7142530613249.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4f0b ldirty=0 rusn=411 fname=paste-7215545057281 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0cf8 ldirty=0 rusn=412 fname=paste-7215545057281.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6a27 ldirty=0 rusn=413 fname=paste-7301444403201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1b27 ldirty=0 rusn=414 fname=paste-7387343749121.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7655 ldirty=0 rusn=415 fname=paste-7391638716417 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6012 ldirty=0 rusn=416 fname=paste-7391638716417.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6229 ldirty=0 rusn=417 fname=paste-7434588389377.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=471d ldirty=0 rusn=418 fname=paste-7456063225857.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7229 ldirty=0 rusn=419 fname=paste-7460358193153.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7229 ldirty=0 rusn=420 fname=paste-7464653160449.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b6d6 ldirty=0 rusn=421 fname=paste-7516192768001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=26a1 ldirty=0 rusn=422 fname=paste-7524782702593.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e4db ldirty=0 rusn=423 fname=paste-7546257539073.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9e47 ldirty=0 rusn=424 fname=paste-7580617277441 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=14e4 ldirty=0 rusn=425 fname=paste-7580617277441.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d829 ldirty=0 rusn=426 fname=paste-7614977015809.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e449 ldirty=0 rusn=427 fname=paste-7838315315201.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=416d ldirty=0 rusn=428 fname=paste-8053063680001.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9755 ldirty=0 rusn=429 fname=paste-8413840932865.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9702 ldirty=0 rusn=430 fname=paste-8615704395777.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cf55 ldirty=0 rusn=431 fname=paste-8701603741697.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fae9 ldirty=0 rusn=432 fname=paste-8723078578177.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0a76 ldirty=0 rusn=433 fname=paste-8791798054913.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=53f1 ldirty=0 rusn=434 fname=paste-8972186681345.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0a90 ldirty=0 rusn=435 fname=paste-8985071583233.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9983 ldirty=0 rusn=436 fname=paste-9105330667521.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b824 ldirty=0 rusn=437 fname=paste-9199819948033.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b710 ldirty=0 rusn=438 fname=paste-9281424326657.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dd29 ldirty=0 rusn=439 fname=paste-9504762626049.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6b3b ldirty=0 rusn=440 fname=paste-9513352560641.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4835 ldirty=0 rusn=441 fname=paste-9526237462529.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=abc8 ldirty=0 rusn=442 fname=paste-9616431775745.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6264 ldirty=0 rusn=443 fname=paste-9680856285185.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6d64 ldirty=0 rusn=444 fname=paste-9685151252481.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=214e ldirty=0 rusn=445 fname=paste-9749575761921.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=34d8 ldirty=0 rusn=446 fname=paste-9762460663809.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9a30 ldirty=0 rusn=447 fname=paste-9831180140545.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cdb9 ldirty=0 rusn=448 fname=paste-9861244911617.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=94d4 ldirty=0 rusn=449 fname=paste-9869834846209.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=94d4 ldirty=0 rusn=450 fname=paste-9874129813505.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=82d7 ldirty=0 rusn=451 fname=paste-9887014715393.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=45a3 ldirty=0 rusn=452 fname=paste-9929964388353 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ac10 ldirty=0 rusn=453 fname=paste-9929964388353.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=03f3 ldirty=0 rusn=454 fname=paste-9938554322945.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5a80 ldirty=0 rusn=455 fname=latex-1ec8db9df89225ad3c67c2d5cfe8710a8659854a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2bbb ldirty=0 rusn=456 fname=latex-2be37dfa8ed1bac8bd1fe91e7f6fd64afc4256c8.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1b3b ldirty=0 rusn=457 fname=latex-3c3ad766159d04f12f8bf583a0d6129efc502deb.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b888 ldirty=0 rusn=458 fname=latex-409f903c3b353740a395f4d75eecdecae891c47e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7198 ldirty=0 rusn=459 fname=latex-5dc6f57c43b0d573bf2c51f1a0d6fbd83c42f55a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0b07 ldirty=0 rusn=460 fname=latex-6439bbb1921cf938ff7fb6e9474cac9ee23ed088.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fec5 ldirty=0 rusn=461 fname=latex-6efc6e44beb7287566d0b1f5c3de1b36775d66e2.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5acb ldirty=0 rusn=462 fname=latex-934074874ad692283a88827dbbf932f7f152e701.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9103 ldirty=0 rusn=463 fname=latex-b34ae6aa3f59f2e55f8db4a3f2b786e468710cc0.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b92e ldirty=0 rusn=464 fname=latex-c222d6622ac4220fd1f069ab00384dcafd8d3876.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4bce ldirty=0 rusn=465 fname=latex-d295c7a127051c4e800f16ec1a77027c5a6d272e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=de44 ldirty=0 rusn=466 fname=latex-ff498384b15766246d4565881dd7a974cb57e694.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5274 ldirty=0 rusn=467 fname=latex-099600a10a944114aac406d136b625fb416dd779.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2ab0 ldirty=0 rusn=468 fname=latex-1fa5b69751b6611715c063cdbf7099e541e67ce1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4181 ldirty=0 rusn=469 fname=latex-393e8414d0a1bc3d4d201fd770420c69e271a2c8.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b386 ldirty=0 rusn=470 fname=latex-4f43443da3cbaa0f050fd063649034bb6ef14e71.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c639 ldirty=0 rusn=471 fname=latex-5b3e9bcc50e86defcd3cb6b618c486f2ad0d5864.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=825e ldirty=0 rusn=472 fname=latex-5db6123700316aefe6a33c44a5938a9eaca7b327.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aede ldirty=0 rusn=473 fname=latex-7533ae1b3d58e869b1310c5556c4c557c197be53.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0fb5 ldirty=0 rusn=474 fname=latex-76ee5b1ace25eb48a2ebdb8eda483da65f6d4198.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4369 ldirty=0 rusn=475 fname=latex-8021312a5362cbe02b5b2e2694e8098abad43558.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=49f7 ldirty=0 rusn=476 fname=latex-809174e3e390c37eeaf6e8566559ecaddec4f848.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5d78 ldirty=0 rusn=477 fname=latex-92db37be91c12423f85b4a889aa33bac04fe641a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fbee ldirty=0 rusn=478 fname=latex-d5dbfcd6dad20722561f04bf8bebef3cc987402a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5274 ldirty=0 rusn=479 fname=latex-d6c6f3ec8da56257fdc7dfa4bff7fe28ab6db78d.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d9bb ldirty=0 rusn=480 fname=latex-e0f38ca43ca3673f4a026094496f7e0691442569.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1655 ldirty=0 rusn=481 fname=latex-ed7467a5bc75cda82e20d92607ee4b29baee9f5c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1d70 ldirty=0 rusn=482 fname=latex-efa88aebd8c7ca3172defa23e390cd3bad10036c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=55af ldirty=0 rusn=483 fname=latex-8993cb5904ea941a229dfb6aabc68b72f3b3958c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a287 ldirty=0 rusn=484 fname=latex-be982754cef6a093bdf4ccb5315449010c77c6ad.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=efeb ldirty=0 rusn=485 fname=_inline_replay_button.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=35ff ldirty=0 rusn=486 fname=latex-35aaa323451937a2e566356c9a2a7cce3d519e37.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=33b5 ldirty=0 rusn=487 fname=latex-599aae0a402cb1bfa6fc1d39db6724d1636cfe29.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d23b ldirty=0 rusn=488 fname=latex-5cae6e656d8331915d6a5893c70fb834eb64e3d3.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8ede ldirty=0 rusn=489 fname=latex-5f7f20884a606dbcdc842f6b4980549d0c9e0219.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d49a ldirty=0 rusn=490 fname=latex-613f31e2fb8907f04aff5774d0412a124e981328.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5a76 ldirty=0 rusn=491 fname=latex-a13fbecf2483d2cf1bec7e125706513c903a03f4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3d48 ldirty=0 rusn=492 fname=latex-ab1283cc5cf410703437a84f2490e138c8b01ac8.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9674 ldirty=0 rusn=493 fname=latex-b7e881fd4c6d6d7ea6418c1e8c287d0304ebdfb1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=59db ldirty=0 rusn=494 fname=latex-b91fe4b480beb3ff64e22b203a15c962f27384fe.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8596 ldirty=0 rusn=495 fname=latex-d5374d19cb64c02ba8d0b18a3d861129d6bca6f8.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8ca4 ldirty=0 rusn=496 fname=latex-d6c4efc3c5d7beb27e929af771515d0e7b626488.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aef7 ldirty=0 rusn=497 fname=latex-df0d50b0cc22212ff5bf478e99068231c2e10982.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4c13 ldirty=0 rusn=498 fname=paste-7958574399489.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=68b3 ldirty=0 rusn=499 fname=latex-c393c79c4eca2c6178c31cb5f4d8bd6bb47c943b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f2c4 ldirty=0 rusn=500 fname=latex-c9780b8827591aa0bb6a6c09e79436dc083317b1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4155 ldirty=0 rusn=501 fname=latex-26e0cfb7581f72a2553328b813b4bfbd03ecf02b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2804 ldirty=0 rusn=502 fname=latex-ac507e2c36b28c9fa23aeccc9aafbfd76b02b0cf.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ffea ldirty=0 rusn=503 fname=latex-ed2661dc2b23edfc304464aafd68726021ec4bd4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0923 ldirty=0 rusn=504 fname=latex-56453353e50dee0ffcdcde78d2292a5088048ade.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=eea8 ldirty=0 rusn=505 fname=latex-88eb7033c8880c32df4786556b352a9e32cdf676.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3d42 ldirty=0 rusn=506 fname=latex-989bd54ca0a9e3545604b6e47ed7d28a78a245db.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=fd54 ldirty=0 rusn=507 fname=latex-a893e8e22f30ebe92fd868db650c34afc941e3dc.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=10b4 ldirty=0 rusn=508 fname=latex-d7aa1c8a340a809f0603baeea9f6a800e30fbb5b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=48e5 ldirty=0 rusn=509 fname=latex-60ad93eb929c94f9bed68cf571b17760468df2ac.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0433 ldirty=0 rusn=510 fname=latex-87a08b23126d67664ecc4dc58d2b18f70a39a1ea.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6094 ldirty=0 rusn=511 fname=latex-91edb97a78d3ff95562271c13747ea709a2f513d.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=95d8 ldirty=0 rusn=512 fname=latex-fd78af27dd97592d7aa07d8f065299b360ee4129.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4d70 ldirty=0 rusn=513 fname=latex-00c6fb68e55493ebf45efd92fbe8ba9ea2a05791.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7d18 ldirty=0 rusn=514 fname=latex-023b1ddc2022288ec9bf41b1ba9fc55d79eb2098.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3b91 ldirty=0 rusn=515 fname=latex-105c0b8296d2ed6e185bd6b0614a11496ca6bf44.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ff38 ldirty=0 rusn=516 fname=latex-4e7e4598b352db489d9c6037c895f877947d536f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=101e ldirty=0 rusn=517 fname=latex-6542d054e5003e8d04c13eee9c490ffceb15e0b0.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=de61 ldirty=0 rusn=518 fname=latex-7f75f6daa48a1f0a181b0e491d1081e81a244eb5.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d926 ldirty=0 rusn=519 fname=latex-825175dc792adb5fedfc456a68837dcbdba3b3ee.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c24f ldirty=0 rusn=520 fname=latex-851f760ad0b91e467255acd9e73e92fa8d6d8ab9.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a0f4 ldirty=0 rusn=521 fname=latex-9ed3e56ca17589b2aacc34e7cd1ca2a2e871874a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=86ff ldirty=0 rusn=522 fname=latex-ce9eadd8d39775d4f34b6655450b3e0861b8e16b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3379 ldirty=0 rusn=523 fname=latex-eea4d072a250f3d523bd6eb5364d1b68d5dd3cb5.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2497 ldirty=0 rusn=524 fname=paste-30008936497153.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2497 ldirty=0 rusn=525 fname=paste-30013231464449.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3562 ldirty=0 rusn=526 fname=paste-12008728559617.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3917 ldirty=0 rusn=527 fname=paste-8456790605827.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2497 ldirty=0 rusn=528 fname=paste-9526237462529 (1).jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1275 ldirty=0 rusn=529 fname=paste-11317238824963.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=21c8 ldirty=0 rusn=530 fname=paste-11832634900483.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a464 ldirty=0 rusn=531 fname=paste-13443247636483.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c783 ldirty=0 rusn=532 fname=paste-17660905521155.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=01e5 ldirty=0 rusn=533 fname=paste-17678085390339.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6280 ldirty=0 rusn=534 fname=paste-21878563405827.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=cb16 ldirty=0 rusn=535 fname=paste-22209275887619.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a103 ldirty=0 rusn=536 fname=paste-22574348107779.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=19b6 ldirty=0 rusn=537 fname=paste-22948010262531.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1732 ldirty=0 rusn=538 fname=paste-23308787515395.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1732 ldirty=0 rusn=539 fname=paste-23313082482691.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ab81 ldirty=0 rusn=540 fname=paste-23703924506627.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5a3a ldirty=0 rusn=541 fname=paste-23746874179587.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8eb7 ldirty=0 rusn=542 fname=paste-24107651432451.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6e8f ldirty=0 rusn=543 fname=paste-26190710571011.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6093 ldirty=0 rusn=544 fname=paste-27517855465475.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c21f ldirty=0 rusn=545 fname=paste-29953101922307.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5662 ldirty=0 rusn=546 fname=paste-8392366096387.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a2c7 ldirty=0 rusn=547 fname=paste-9040906158083.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a7c6 ldirty=0 rusn=548 fname=latex-041f0c564f7a45f5e64aa86c293b5d559869497c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=45a2 ldirty=0 rusn=549 fname=latex-08a3f63a2da5c5e0a972ea3e460701aa03ddd93f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2aa3 ldirty=0 rusn=550 fname=latex-12c280e1f67faf9ade69a3853b4fc25f289231cf.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1562 ldirty=0 rusn=551 fname=latex-1569c3e23737f4e2000399f8f0f41e0188815e8e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1d68 ldirty=0 rusn=552 fname=latex-1973186f0add02fe25968b6696d9a7088a116b20.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4e01 ldirty=0 rusn=553 fname=latex-312d0b12b27f150f60528aba7189d24534e0eef3.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=f18b ldirty=0 rusn=554 fname=latex-379df1ecf477051e22f00fc55854a1d5a338ac03.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e1a5 ldirty=0 rusn=555 fname=latex-5076e87318c131381c469e164a9fa15a83ec587e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8498 ldirty=0 rusn=556 fname=latex-59d4f4fbea08233f83e0da576c10a4f5e0130665.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5a88 ldirty=0 rusn=557 fname=latex-695ad29030cb04bdf62811cad73d4b0a1f050a3f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e1a5 ldirty=0 rusn=558 fname=latex-729a8fba6ab57ad7d048a9ff65833cf1ece6ebfe.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a2b3 ldirty=0 rusn=559 fname=latex-7456bc3f2374eb8d6164405236407ad2d7d0ecbb.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8698 ldirty=0 rusn=560 fname=latex-97cffd5cb671612dec01a50881bd60fcc906eee4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2e2f ldirty=0 rusn=561 fname=latex-ba2fbb6715815a60396bfd1aa8078503d126679e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8bcb ldirty=0 rusn=562 fname=latex-bb5ec792c7e0a9018bb716abc852c50c075c7796.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=38e7 ldirty=0 rusn=563 fname=latex-c415ae25a52f6b0eff00027473f3f46a3a8b76b4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=971c ldirty=0 rusn=564 fname=latex-c93a0122bd7c9f9f976f7a39230004e438b3df1b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=1984 ldirty=0 rusn=565 fname=latex-d4933caa6253a256477e3db717771f44cce00702.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=973f ldirty=0 rusn=566 fname=latex-d610a5f2b2f113546c205c8198916702f9699b63.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=33eb ldirty=0 rusn=567 fname=latex-de07dce6d6a67f6f8338f5b2fb6372b3711df880.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=322e ldirty=0 rusn=568 fname=latex-e5bfed9ac4f12a89ea802262b20f65d06ff18537.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a7be ldirty=0 rusn=569 fname=latex-ec54004c161fe63c25d76af0d71dd7ed57a287d9.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7662 ldirty=0 rusn=570 fname=latex-f48423e484beffa99050f573b1b410fce61771cf.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=bc5c ldirty=0 rusn=571 fname=latex-fb82fab09f82d77e5ff94035b43f4f81bbc03119.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7a90 ldirty=0 rusn=572 fname=latex-7fd4ef6592141d9a7d877fb7e3cf9a6dea56dec7.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=0e9a ldirty=0 rusn=573 fname=latex-eb0b3ffe4fbe061140feeae4d8380dcf2141741b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6367 ldirty=0 rusn=574 fname=latex-fc8a91443116e879a9390399fb797c0f5295a759.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5aa0 ldirty=0 rusn=575 fname=latex-107c9d49d9885dfaf6b366dead03955715f6bb49.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ec83 ldirty=0 rusn=576 fname=latex-2237c0bdda8edf49fab124985adcd0ff311ed557.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=419f ldirty=0 rusn=577 fname=latex-3c9591e251dd13863e7a0fa5aa84d0ed0184db5a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3ef3 ldirty=0 rusn=578 fname=latex-5faeac0eb0f6daebb3c41c62f0280ab4265ea95b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d268 ldirty=0 rusn=579 fname=latex-60ef3945728bb2eca0645dd5b8f5f97f21491229.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5206 ldirty=0 rusn=580 fname=latex-674258ca58e36f4c41469c2e8681f17446190619.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8552 ldirty=0 rusn=581 fname=latex-68e22d4ec1761d960b4b2564ab87fa2e1c16454d.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5a12 ldirty=0 rusn=582 fname=latex-6f0f92955f9f0dc53b6fcabfbe5a105cd4215a1e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2ea1 ldirty=0 rusn=583 fname=latex-772ca8c201f3e42c0794023622e7304f18f851be.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9e69 ldirty=0 rusn=584 fname=latex-8bad0b4f29134a0c45aa186ef6fbee33d92640a4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=19c8 ldirty=0 rusn=585 fname=latex-99b448d67a640e124019329d56f5f9fcab383172.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b75a ldirty=0 rusn=586 fname=latex-a9068465bcc631414b0cb79e817d22dd6202567c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=de49 ldirty=0 rusn=587 fname=latex-ae851286999ea59b58734d2125b56d95101d92ad.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=08ac ldirty=0 rusn=588 fname=latex-b2202eb1fb467527104621eb122bf56121fa6f5d.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=5941 ldirty=0 rusn=589 fname=latex-b8feee08da9a9957592e775dd8e5a67c698a2a3d.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=2369 ldirty=0 rusn=590 fname=latex-cf4a9645579456d0ca2d779d77d3978ed0911a38.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=ec83 ldirty=0 rusn=591 fname=latex-dd97c0f83991b538d38ce027511b9572bec00494.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e1e9 ldirty=0 rusn=592 fname=latex-f05cf6f4a708b3317bc1265aeb98a268ace45b55.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3249 ldirty=0 rusn=593 fname=latex-f0f0c32778d22f89f3ddb1cad79fda75f8e1b83c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=10ab ldirty=0 rusn=594 fname=latex-fcdcae0658d733b98fe45cb8fae6dcae48045680.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=e78c ldirty=0 rusn=595 fname=latex-01b07ba5e2c2af9d84acff24d1e5a3ff53b77c4b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d4af ldirty=0 rusn=596 fname=latex-02ff5f247f2344bddd5b3a207461379514308ce2.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b4fa ldirty=0 rusn=597 fname=latex-2179f9b905a25254e10d9dda74fe8e51623a753b.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a3d7 ldirty=0 rusn=598 fname=latex-595fffca1249c242f681f34fc52f252993d33751.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=675d ldirty=0 rusn=599 fname=latex-5e32c3370b1abd4c7d740e41a4902b3b83cdede1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6435 ldirty=0 rusn=600 fname=latex-68a724846f8940eaad5ed7e08e49ee07f09018f7.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=d752 ldirty=0 rusn=601 fname=latex-6b2df601b0a2f209bf270ed24190897495356536.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c98e ldirty=0 rusn=602 fname=latex-8de02e80ee887ef10b8fdbcf20cedce40a44f0a1.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8ab9 ldirty=0 rusn=603 fname=latex-94d4c3dbcc24e0d598ee1d2057190555c7706edc.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=9a1d ldirty=0 rusn=604 fname=latex-bafdaa24bd2122ef3ecd05a0be9eacb3839e5072.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=021d ldirty=0 rusn=605 fname=latex-2ad17e8b638b2fb0884d9ff3458d040a118e11ba.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a658 ldirty=0 rusn=606 fname=latex-2d7be63b62a107a4589c5051f53b5e3b13a50c4a.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=dd7a ldirty=0 rusn=607 fname=latex-3ccae77f6e1af7457bcfb95ce6511e7a7f0ce29f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3e6d ldirty=0 rusn=608 fname=latex-499bf5ff0642783a2ada5f10e1a810f311eda1d0.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=b133 ldirty=0 rusn=609 fname=latex-5623ffef951ba18997169eaaf1b2d64ac4147752.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=04b1 ldirty=0 rusn=610 fname=latex-5b5209c48a4b6778554f5eac09cf6e487e93b714.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=c2da ldirty=0 rusn=611 fname=latex-5b5e0cee8f5cb696316787b34a39b37d5852bee2.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=996e ldirty=0 rusn=612 fname=latex-675008e116c2269f90b3e5fe3d5aa1837326dd62.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=a8c0 ldirty=0 rusn=613 fname=latex-789b3b27f6ff2f594486f1c4b996a973301f543e.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=8b58 ldirty=0 rusn=614 fname=latex-83dc0fc7c8502b86025cfae3f0abecbc31571b81.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=4888 ldirty=0 rusn=615 fname=latex-86e2aabaea1bef1f1ef923e1a3064a9548f2ec56.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=3e6d ldirty=0 rusn=616 fname=latex-92b1b488be06ea12a3fc190276e32137cb8536d4.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=215b ldirty=0 rusn=617 fname=latex-c8cb8b59a68ae10d9a4cdaecf9dabaa8b6c64364.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7498 ldirty=0 rusn=618 fname=paste-11931419148289.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=7498 ldirty=0 rusn=619 fname=paste-13219909337089.jpg
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=954a ldirty=0 rusn=620 fname=latex-110c65b93c2caa00ad915f2369c412dea8dfca6f.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=aef3 ldirty=0 rusn=621 fname=latex-3de55339c862dedceebdc68dc8bdd84f35e50c8c.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:sync(): check: lsum=None rsum=6625 ldirty=0 rusn=622 fname=latex-c6fd39326d85a5da10cfd2262895955404d30189.png
[1506855556] sync.py:sync(): will fetch
[1506855556] sync.py:_downloadFiles(): 622 files to fetch
[1506855556] sync.py:_downloadFiles(): fetch [u'latex-0dcdd5f8f5ecc9f753915b1e8fe1e3852d8fe313.png', u'latex-14236ab297fa92ad5f672f6b8a653828425d3051.png', u'latex-18639e0d51eceddfb3931e4836b48129120af466.png', u'latex-1a8da426da4bbc046d184617c731d8f07f1ab3a7.png', u'latex-1d796e10bdd6d0e3449d33a51bac924ec048dbb8.png', u'latex-3abe03475398a9965382f955c7f9747fe1029766.png', u'latex-5511fc6f78fd24de845934d97aad9628af2d6d83.png', u'latex-558227822754a43c969c5578c3bce029d86cc75e.png', u'latex-575103080e09ffeaf87a51f13e689b4c60ee3bd5.png', u'latex-5793336e7f026cf1e694fcf6f4972509508a6e62.png', u'latex-602cfc88b79f7f172a2e974a1217569f79f8f4f4.png', u'latex-693fb9adc756956f1a6c3ea03d36a5cd55feaf53.png', u'latex-6b994191f12d2cbcf736a932e1a6e9cebcf267a3.png', u'latex-6ca972b964661930a3c6ca968f0c0ef481e5338f.png', u'latex-6e10b603b36820159974a1e2f12cd81ebc9fd116.png', u'latex-752ba43fea64ceff76cb0d5ac0bd90263367e7af.png', u'latex-77e398d74adb12e5624dfdac951f758907a6a467.png', u'latex-7d91329b4e625fa3e2a71eaaea24af5268fb2dc1.png', u'latex-80914e4d1299b0a0048583470167ee88c2ae96cb.png', u'latex-9947668f567f55cfc9227f558431d0d04a10b535.png', u'latex-9e1745df8c25c6ad429b25fbe9a7fc34c4ef7f78.png', u'latex-a0915bed69ae91383ce3ce727fa30f7fef661eac.png', u'latex-a189c269857216ebabcdeeee3556def9568830cf.png', u'latex-abfdf405bcdce686336c5fdcb287bafbef1d43b5.png', u'latex-accefe62f85096fdf44f0b7ceff0a6a3da55b37f.png']
[1506855556] sync.py:_downloadFiles(): received 25 files
[1506855556] sync.py:_downloadFiles(): fetch [u'latex-aebe6ddf79e9a7491a40fd2a5c4a5935c8900ef9.png', u'latex-b18501df1d4b591fcbc1cb702c8787bcd816731a.png', u'latex-b8598381e5ec0693f798ceba856818c22bd19cc3.png', u'latex-cbfff1f68eb972fb515288dcbb2e03741377ae8f.png', u'latex-d111fb0e28c8657d0bef09d0119be33be5d3d2fb.png', u'latex-d77ef2a93cd8305f80ece4db5593aa77bf67d2e0.png', u'latex-de7f941219cc422e945fd8c7004965090e1b691c.png', u'latex-e88df998a69c41b1a46953a22905c28f42467468.png', u'paste-10088878178305.jpg', u'paste-10093173145601.jpg', u'paste-10106058047489.jpg', u'paste-10161892622337.jpg', u'paste-10166187589633.jpg', u'paste-10230612099073.jpg', u'paste-10243497000961.jpg', u'paste-10247791968257.jpg', u'paste-10277856739329.jpg', u'paste-10320806412289.jpg', u'paste-10325101379585.jpg', u'paste-10393820856321.jpg', u'paste-10462540333057.jpg', u'paste-10475425234945 (1).jpg', u'paste-10475425234945.jpg', u'paste-10531259809793.jpg', u'paste-10557029613569.jpg']
[1506855559] sync.py:_downloadFiles(): received 25 files
[1506855559] sync.py:_downloadFiles(): fetch [u'paste-10591389351937.jpg', u'paste-10604274253825.jpg', u'paste-10655813861377.jpg', u'paste-10711648436225.jpg', u'paste-10793252814849.jpg', u'paste-10844792422401.jpg', u'paste-10853382356993.jpg', u'paste-10857677324289.jpg', u'paste-10861972291585.jpg', u'paste-10909216931841.jpg', u'paste-10926396801025.jpg', u'paste-10965051506689.jpg', u'paste-10982231375873.jpg', u'paste-10990821310465.jpg', u'paste-11020886081537.jpg', u'paste-11038065950721.jpg', u'paste-11042360918017.jpg', u'paste-11076720656385.jpg', u'paste-11089605558273.jpg', u'paste-11222749544449.jpg', u'paste-11269994184705.jpg', u'paste-11274289152001.jpg', u'paste-11360188497921.jpg', u'paste-11368778432513.jpg', u'paste-11398843203585.jpg']
[1506855561] sync.py:_downloadFiles(): received 25 files
[1506855561] sync.py:_downloadFiles(): fetch [u'paste-11416023072769.jpg', u'paste-11531987189761.jpg', u'paste-11566346928129.jpg', u'paste-11592116731905.jpg', u'paste-11596411699201.jpg', u'paste-11605001633793.jpg', u'paste-11635066404865.jpg', u'paste-11656541241345.jpg', u'paste-11669426143233.jpg', u'paste-11682311045121.jpg', u'paste-11733850652673.jpg', u'paste-11824044965889.jpg', u'paste-11884174508033.jpg', u'paste-11897059409921.jpg', u'paste-11905649344513.jpg', u'paste-11965778886657.jpg', u'paste-11974368821249.jpg', u'paste-11987253723137.jpg', u'paste-12038793330689.jpg', u'paste-12150462480385.jpg', u'paste-12171937316865.jpg', u'paste-12206297055233.jpg', u'paste-12257836662785.jpg', u'paste-12313671237633.jpg', u'paste-12348030976001.jpg']
[1506855563] sync.py:_downloadFiles(): received 25 files
[1506855563] sync.py:_downloadFiles(): fetch [u'paste-12365210845185 (1).jpg', u'paste-12365210845185.jpg', u'paste-12416750452737.jpg', u'paste-12433930321921.jpg', u'paste-12489764896769.jpg', u'paste-12506944765953.jpg', u'paste-12545599471617.jpg', u'paste-12743167967233.jpg', u'paste-12807592476673.jpg', u'paste-12824772345857.jpg', u'paste-12893491822593.jpg', u'paste-12923556593665.jpg', u'paste-12953621364737.jpg', u'paste-13065290514433.jpg', u'paste-13103945220097.jpg', u'paste-13155484827649.jpg', u'paste-13228499271681.jpg', u'paste-13262859010049.jpg', u'paste-13529146982401.jpg', u'paste-13589276524545.jpg', u'paste-13623636262913.jpg', u'paste-13666585935873.jpg', u'paste-13705240641537.jpg', u'paste-13769665150977.jpg', u'paste-13902809137153.jpg']
[1506855566] sync.py:_downloadFiles(): received 25 files
[1506855566] sync.py:_downloadFiles(): fetch [u'paste-13924283973633.jpg', u'paste-13950053777409.jpg', u'paste-14027363188737.jpg', u'paste-14091787698177.jpg', u'paste-14130442403841.jpg', u'paste-14207751815169.jpg', u'paste-14280766259201.jpg', u'paste-14315125997569.jpg', u'paste-14345190768641.jpg', u'paste-14349485735937.jpg', u'paste-14495514624001.jpg', u'paste-14564234100737.jpg', u'paste-14632953577473.jpg', u'paste-14740327759873.jpg', u'paste-14843406974977.jpg', u'paste-14890651615233.jpg', u'paste-14967961026561.jpg', u'paste-14993730830337.jpg', u'paste-15019500634113.jpg', u'paste-15161234554881.jpg', u'paste-15178414424065.jpg', u'paste-15212774162433.jpg', u'paste-15238543966209.jpg', u'paste-15251428868097.jpg', u'paste-15264313769985.jpg']
[1506855568] sync.py:_downloadFiles(): received 25 files
[1506855568] sync.py:_downloadFiles(): fetch [u'paste-15272903704577.jpg', u'paste-15294378541057.jpg', u'paste-15324443312129.jpg', u'paste-15401752723457.jpg', u'paste-15444702396417.jpg', u'paste-15582141349889.jpg', u'paste-15620796055553.jpg', u'paste-15771119910913 (1).jpg', u'paste-15771119910913.jpg', u'paste-15814069583873 (1).jpg', u'paste-15814069583873.jpg', u'paste-15844134354945.jpg', u'paste-15878494093313.jpg', u'paste-15925738733569.jpg', u'paste-15972983373825.jpg', u'paste-16028817948673.jpg', u'paste-16110422327297.jpg', u'paste-16265041149953.jpg', u'paste-16290810953729.jpg', u'paste-16432544874497.jpg', u'paste-16488379449345.jpg', u'paste-16518444220417.jpg', u'paste-16668768075777.jpg', u'paste-16716012716033.jpg', u'paste-16909286244353.jpg']
[1506855571] sync.py:_downloadFiles(): received 25 files
[1506855571] sync.py:_downloadFiles(): fetch [u'paste-17016660426753.jpg', u'paste-17321603104769.jpg', u'paste-17373142712321.jpg', u'paste-17416092385281.jpg', u'paste-17441862189057.jpg', u'paste-17463337025537.jpg', u'paste-17506286698497.jpg', u'paste-17557826306049.jpg', u'paste-17703855194113.jpg', u'paste-17716740096001.jpg', u'paste-17755394801665.jpg', u'paste-17884243820545.jpg', u'paste-17888538787841.jpg', u'paste-18038862643201.jpg', u'paste-18047452577793.jpg', u'paste-18146236825601.jpg', u'paste-18236431138817.jpg', u'paste-18326625452033.jpg', u'paste-18399639896065.jpg', u'paste-18472654340097.jpg', u'paste-18537078849537.jpg', u'paste-18575733555201.jpg', u'paste-18661632901121.jpg', u'paste-18678812770305.jpg', u'paste-18721762443265.jpg']
[1506855574] sync.py:_downloadFiles(): received 25 files
[1506855574] sync.py:_downloadFiles(): fetch [u'paste-18807661789185.jpg', u'paste-18897856102401.jpg', u'paste-18992345382913.jpg', u'paste-19000935317505.jpg', u'paste-19069654794241.jpg', u'paste-19125489369089.jpg', u'paste-19288698126337.jpg', u'paste-19353122635777.jpg', u'paste-19516331393025.jpg', u'paste-19537806229505.jpg', u'paste-19589345837057.jpg', u'paste-19735374725121.jpg', u'paste-19765439496193.jpg', u'paste-19941533155329.jpg', u'paste-20121921781761.jpg', u'paste-20134806683649.jpg', u'paste-20156281520129.jpg', u'paste-20169166422017.jpg', u'paste-20345260081153.jpg', u'paste-20444044328961.jpg', u'paste-20512763805697.jpg', u'paste-2057289334785.jpg', u'paste-20641612824577.jpg', u'paste-20800526614529.jpg', u'paste-20929375633409.jpg']
[1506855577] sync.py:_downloadFiles(): received 25 files
[1506855577] sync.py:_downloadFiles(): fetch [u'paste-21019569946625.jpg', u'paste-21225728376833.jpg', u'paste-21496311316481.jpg', u'paste-21573620727809.jpg', u'paste-21723944583169.jpg', u'paste-21887153340417.jpg', u'paste-22037477195777.jpg', u'paste-22217865822209.jpg', u'paste-22527103467521.jpg', u'paste-2259152797697.jpg', u'paste-22595822944257.jpg', u'paste-22707492093953.jpg', u'paste-22892175687681.jpg', u'paste-23068269346817.jpg', u'paste-23081154248705.jpg', u'paste-23188528431105.jpg', u'paste-23278722744321.jpg', u'paste-23338852286465.jpg', u'paste-23471996272641.jpg', u'paste-23609435226113.jpg', u'paste-2379411881985.jpg', u'paste-23888608100353.jpg', u'paste-24197845745665.jpg', u'paste-2422361554945.jpg', u'paste-2430951489537.jpg']
[1506855578] sync.py:_downloadFiles(): received 25 files
[1506855578] sync.py:_downloadFiles(): fetch [u'paste-24326694764545.jpg', u'paste-24494198489089.jpg', u'paste-24567212933121.jpg', u'paste-2465311227905.jpg', u'paste-24674587115521.jpg', u'paste-24854975741953.jpg', u'paste-24867860643841.jpg', u'paste-25048249270273.jpg', u'paste-25189983191041.jpg', u'paste-25383256719361.jpg', u'paste-25456271163393.jpg', u'paste-25606595018753.jpg', u'paste-2572685410305.jpg', u'paste-26237955211265.jpg', u'paste-2624225017857 (1).jpg', u'paste-2624225017857 (2).jpg', u'paste-2624225017857.jpg', u'paste-26418343837697.jpg', u'paste-26487063314433.jpg', u'paste-2662879723521.jpg', u'paste-26877905338369.jpg', u'paste-26950919782401.jpg', u'paste-2701534429185.jpg', u'paste-27084063768577.jpg', u'paste-27234387623937.jpg']
[1506855580] sync.py:_downloadFiles(): received 25 files
[1506855580] sync.py:_downloadFiles(): fetch [u'paste-27410481283073.jpg', u'paste-27590869909505.jpg', u'paste-27724013895681.jpg', u'paste-27792733372417.jpg', u'paste-2787433775105.jpg', u'paste-28114855919617.jpg', u'paste-28127740821505.jpg', u'paste-2817498546177.jpg', u'paste-2830383448065.jpg', u'paste-28316719382529.jpg', u'paste-2843268349953.jpg', u'paste-28484223107073.jpg', u'paste-28673201668097.jpg', u'paste-28840705392641.jpg', u'paste-29033978920961.jpg', u'paste-29145648070657.jpg', u'paste-29326036697089.jpg', u'paste-2933462663169.jpg', u'paste-29506425323521.jpg', u'paste-2950642532353.jpg', u'paste-29588029702145.jpg', u'paste-29686813949953.jpg', u'paste-29755533426689.jpg', u'paste-29931627085825.jpg', u'paste-30172145254401.jpg']
[1506855583] sync.py:_downloadFiles(): received 25 files
[1506855583] sync.py:_downloadFiles(): fetch [u'paste-30193620090881.jpg', u'paste-3019362009089 (1).jpg', u'paste-3019362009089.jpg', u'paste-3075196583937.jpg', u'paste-3092376453121.jpg', u'paste-3156800962561.jpg', u'paste-3195455668225.jpg', u'paste-3208340570113.jpg', u'paste-3229815406593.jpg', u'paste-3246995275777.jpg', u'paste-3277060046849.jpg', u'paste-3302829850625.jpg', u'paste-3354369458177.jpg', u'paste-3358664425473.jpg', u'paste-3362959392769.jpg', u'paste-3388729196545.jpg', u'paste-3393024163841.jpg', u'paste-3410204033025.jpg', u'paste-3474628542465.jpg', u'paste-3496103378945.jpg', u'paste-3504693313537.jpg', u'paste-3526168150017.jpg', u'paste-3551937953793.jpg', u'paste-3564822855681.jpg', u'paste-3603477561345.jpg']
[1506855585] sync.py:_downloadFiles(): received 25 files
[1506855585] sync.py:_downloadFiles(): fetch [u'paste-3633542332417.jpg', u'paste-3680786972673.jpg', u'paste-3685081939969.jpg', u'paste-3745211482113.jpg', u'paste-3749506449409.jpg', u'paste-3809635991553.jpg', u'paste-3865470566401.jpg', u'paste-3985729650689.jpg', u'paste-4037269258241.jpg', u'paste-4084513898497.jpg', u'paste-4093103833089.jpg', u'paste-4131758538753.jpg', u'paste-4140348473345.jpg', u'paste-4153233375233.jpg', u'paste-4161823309825.jpg', u'paste-4230542786561.jpg', u'paste-4234837753857.jpg', u'paste-4342211936257.jpg', u'paste-4380866641921.jpg', u'paste-4393751543809.jpg', u'paste-4475355922433.jpg', u'paste-4556960301057.jpg', u'paste-4634269712385.jpg', u'paste-4672924418049.jpg', u'paste-4707284156417.jpg']
[1506855588] sync.py:_downloadFiles(): received 25 files
[1506855588] sync.py:_downloadFiles(): fetch [u'paste-4737348927489.jpg', u'paste-4758823763969.jpg', u'paste-4780298600449.jpg', u'paste-4810363371521.jpg', u'paste-4827543240705.jpg', u'paste-4853313044481.jpg', u'paste-4891967750145.jpg', u'paste-4977867096065.jpg', u'paste-5016521801729.jpg', u'paste-5050881540097.jpg', u'paste-5119601016833.jpg', u'paste-5128190951425.jpg', u'paste-5132485918721.jpg', u'paste-5184025526273.jpg', u'paste-5201205395457.jpg', u'paste-5205500362753.jpg', u'paste-5222680231937.jpg', u'paste-5278514806785.jpg', u'paste-5291399708673.jpg', u'paste-5355824218113.jpg', u'paste-5373004087297.jpg', u'paste-5420248727553.jpg', u'paste-5424543694849.jpg', u'paste-5454608465921.jpg', u'paste-5501853106177.jpg']
[1506855590] sync.py:_downloadFiles(): received 25 files
[1506855590] sync.py:_downloadFiles(): fetch [u'paste-5519032975361.jpg', u'paste-5527622909953.jpg', u'paste-5592047419393.jpg', u'paste-5819680686081.jpg', u'paste-5832565587969.jpg', u'paste-5892695130113.jpg', u'paste-5922759901185.jpg', u'paste-5978594476033.jpg', u'paste-5995774345217.jpg', u'paste-6047313952769.jpg', u'paste-6103148527617.jpg', u'paste-6116033429505.jpg', u'paste-6141803233281.jpg', u'paste-6167573037057.jpg', u'paste-6214817677313.jpg', u'paste-6257767350273.jpg', u'paste-6279242186753.jpg', u'paste-6300717023233.jpg', u'paste-6330781794305.jpg', u'paste-6390911336449.jpg', u'paste-6438155976705.jpg', u'paste-6451040878593.jpg', u'paste-6459630813185.jpg', u'paste-6472515715073.jpg', u'paste-6493990551553.jpg']
[1506855593] sync.py:_downloadFiles(): received 25 files
[1506855593] sync.py:_downloadFiles(): fetch [u'paste-6528350289921.jpg', u'paste-6545530159105.jpg', u'paste-6579889897473.jpg', u'paste-6635724472321.jpg', u'paste-6704443949057.jpg', u'paste-6734508720129.jpg', u'paste-6962141986817.jpg', u'paste-6975026888705.jpg', u'paste-7060926234625.jpg', u'paste-7142530613249.jpg', u'paste-7215545057281 (1).jpg', u'paste-7215545057281.jpg', u'paste-7301444403201.jpg', u'paste-7387343749121.jpg', u'paste-7391638716417 (1).jpg', u'paste-7391638716417.jpg', u'paste-7434588389377.jpg', u'paste-7456063225857.jpg', u'paste-7460358193153.jpg', u'paste-7464653160449.jpg', u'paste-7516192768001.jpg', u'paste-7524782702593.jpg', u'paste-7546257539073.jpg', u'paste-7580617277441 (1).jpg', u'paste-7580617277441.jpg']
[1506855596] sync.py:_downloadFiles(): received 25 files
[1506855596] sync.py:_downloadFiles(): fetch [u'paste-7614977015809.jpg', u'paste-7838315315201.jpg', u'paste-8053063680001.jpg', u'paste-8413840932865.jpg', u'paste-8615704395777.jpg', u'paste-8701603741697.jpg', u'paste-8723078578177.jpg', u'paste-8791798054913.jpg', u'paste-8972186681345.jpg', u'paste-8985071583233.jpg', u'paste-9105330667521.jpg', u'paste-9199819948033.jpg', u'paste-9281424326657.jpg', u'paste-9504762626049.jpg', u'paste-9513352560641.jpg', u'paste-9526237462529.jpg', u'paste-9616431775745.jpg', u'paste-9680856285185.jpg', u'paste-9685151252481.jpg', u'paste-9749575761921.jpg', u'paste-9762460663809.jpg', u'paste-9831180140545.jpg', u'paste-9861244911617.jpg', u'paste-9869834846209.jpg', u'paste-9874129813505.jpg']
[1506855598] sync.py:_downloadFiles(): received 25 files
[1506855598] sync.py:_downloadFiles(): fetch [u'paste-9887014715393.jpg', u'paste-9929964388353 (1).jpg', u'paste-9929964388353.jpg', u'paste-9938554322945.jpg', u'latex-1ec8db9df89225ad3c67c2d5cfe8710a8659854a.png', u'latex-2be37dfa8ed1bac8bd1fe91e7f6fd64afc4256c8.png', u'latex-3c3ad766159d04f12f8bf583a0d6129efc502deb.png', u'latex-409f903c3b353740a395f4d75eecdecae891c47e.png', u'latex-5dc6f57c43b0d573bf2c51f1a0d6fbd83c42f55a.png', u'latex-6439bbb1921cf938ff7fb6e9474cac9ee23ed088.png', u'latex-6efc6e44beb7287566d0b1f5c3de1b36775d66e2.png', u'latex-934074874ad692283a88827dbbf932f7f152e701.png', u'latex-b34ae6aa3f59f2e55f8db4a3f2b786e468710cc0.png', u'latex-c222d6622ac4220fd1f069ab00384dcafd8d3876.png', u'latex-d295c7a127051c4e800f16ec1a77027c5a6d272e.png', u'latex-ff498384b15766246d4565881dd7a974cb57e694.png', u'latex-099600a10a944114aac406d136b625fb416dd779.png', u'latex-1fa5b69751b6611715c063cdbf7099e541e67ce1.png', u'latex-393e8414d0a1bc3d4d201fd770420c69e271a2c8.png', u'latex-4f43443da3cbaa0f050fd063649034bb6ef14e71.png', u'latex-5b3e9bcc50e86defcd3cb6b618c486f2ad0d5864.png', u'latex-5db6123700316aefe6a33c44a5938a9eaca7b327.png', u'latex-7533ae1b3d58e869b1310c5556c4c557c197be53.png', u'latex-76ee5b1ace25eb48a2ebdb8eda483da65f6d4198.png', u'latex-8021312a5362cbe02b5b2e2694e8098abad43558.png']
[1506855598] sync.py:_downloadFiles(): received 25 files
[1506855598] sync.py:_downloadFiles(): fetch [u'latex-809174e3e390c37eeaf6e8566559ecaddec4f848.png', u'latex-92db37be91c12423f85b4a889aa33bac04fe641a.png', u'latex-d5dbfcd6dad20722561f04bf8bebef3cc987402a.png', u'latex-d6c6f3ec8da56257fdc7dfa4bff7fe28ab6db78d.png', u'latex-e0f38ca43ca3673f4a026094496f7e0691442569.png', u'latex-ed7467a5bc75cda82e20d92607ee4b29baee9f5c.png', u'latex-efa88aebd8c7ca3172defa23e390cd3bad10036c.png', u'latex-8993cb5904ea941a229dfb6aabc68b72f3b3958c.png', u'latex-be982754cef6a093bdf4ccb5315449010c77c6ad.png', u'_inline_replay_button.png', u'latex-35aaa323451937a2e566356c9a2a7cce3d519e37.png', u'latex-599aae0a402cb1bfa6fc1d39db6724d1636cfe29.png', u'latex-5cae6e656d8331915d6a5893c70fb834eb64e3d3.png', u'latex-5f7f20884a606dbcdc842f6b4980549d0c9e0219.png', u'latex-613f31e2fb8907f04aff5774d0412a124e981328.png', u'latex-a13fbecf2483d2cf1bec7e125706513c903a03f4.png', u'latex-ab1283cc5cf410703437a84f2490e138c8b01ac8.png', u'latex-b7e881fd4c6d6d7ea6418c1e8c287d0304ebdfb1.png', u'latex-b91fe4b480beb3ff64e22b203a15c962f27384fe.png', u'latex-d5374d19cb64c02ba8d0b18a3d861129d6bca6f8.png', u'latex-d6c4efc3c5d7beb27e929af771515d0e7b626488.png', u'latex-df0d50b0cc22212ff5bf478e99068231c2e10982.png', u'paste-7958574399489.jpg', u'latex-c393c79c4eca2c6178c31cb5f4d8bd6bb47c943b.png', u'latex-c9780b8827591aa0bb6a6c09e79436dc083317b1.png']
[1506855599] sync.py:_downloadFiles(): received 25 files
[1506855599] sync.py:_downloadFiles(): fetch [u'latex-26e0cfb7581f72a2553328b813b4bfbd03ecf02b.png', u'latex-ac507e2c36b28c9fa23aeccc9aafbfd76b02b0cf.png', u'latex-ed2661dc2b23edfc304464aafd68726021ec4bd4.png', u'latex-56453353e50dee0ffcdcde78d2292a5088048ade.png', u'latex-88eb7033c8880c32df4786556b352a9e32cdf676.png', u'latex-989bd54ca0a9e3545604b6e47ed7d28a78a245db.png', u'latex-a893e8e22f30ebe92fd868db650c34afc941e3dc.png', u'latex-d7aa1c8a340a809f0603baeea9f6a800e30fbb5b.png', u'latex-60ad93eb929c94f9bed68cf571b17760468df2ac.png', u'latex-87a08b23126d67664ecc4dc58d2b18f70a39a1ea.png', u'latex-91edb97a78d3ff95562271c13747ea709a2f513d.png', u'latex-fd78af27dd97592d7aa07d8f065299b360ee4129.png', u'latex-00c6fb68e55493ebf45efd92fbe8ba9ea2a05791.png', u'latex-023b1ddc2022288ec9bf41b1ba9fc55d79eb2098.png', u'latex-105c0b8296d2ed6e185bd6b0614a11496ca6bf44.png', u'latex-4e7e4598b352db489d9c6037c895f877947d536f.png', u'latex-6542d054e5003e8d04c13eee9c490ffceb15e0b0.png', u'latex-7f75f6daa48a1f0a181b0e491d1081e81a244eb5.png', u'latex-825175dc792adb5fedfc456a68837dcbdba3b3ee.png', u'latex-851f760ad0b91e467255acd9e73e92fa8d6d8ab9.png', u'latex-9ed3e56ca17589b2aacc34e7cd1ca2a2e871874a.png', u'latex-ce9eadd8d39775d4f34b6655450b3e0861b8e16b.png', u'latex-eea4d072a250f3d523bd6eb5364d1b68d5dd3cb5.png', u'paste-30008936497153.jpg', u'paste-30013231464449.jpg']
[1506855603] sync.py:_downloadFiles(): received 25 files
[1506855603] sync.py:_downloadFiles(): fetch [u'paste-12008728559617.jpg', u'paste-8456790605827.jpg', u'paste-9526237462529 (1).jpg', u'paste-11317238824963.jpg', u'paste-11832634900483.jpg', u'paste-13443247636483.jpg', u'paste-17660905521155.jpg', u'paste-17678085390339.jpg', u'paste-21878563405827.jpg', u'paste-22209275887619.jpg', u'paste-22574348107779.jpg', u'paste-22948010262531.jpg', u'paste-23308787515395.jpg', u'paste-23313082482691.jpg', u'paste-23703924506627.jpg', u'paste-23746874179587.jpg', u'paste-24107651432451.jpg', u'paste-26190710571011.jpg', u'paste-27517855465475.jpg', u'paste-29953101922307.jpg', u'paste-8392366096387.jpg', u'paste-9040906158083.jpg', u'latex-041f0c564f7a45f5e64aa86c293b5d559869497c.png', u'latex-08a3f63a2da5c5e0a972ea3e460701aa03ddd93f.png', u'latex-12c280e1f67faf9ade69a3853b4fc25f289231cf.png']
[1506855605] sync.py:_downloadFiles(): received 25 files
[1506855605] sync.py:_downloadFiles(): fetch [u'latex-1569c3e23737f4e2000399f8f0f41e0188815e8e.png', u'latex-1973186f0add02fe25968b6696d9a7088a116b20.png', u'latex-312d0b12b27f150f60528aba7189d24534e0eef3.png', u'latex-379df1ecf477051e22f00fc55854a1d5a338ac03.png', u'latex-5076e87318c131381c469e164a9fa15a83ec587e.png', u'latex-59d4f4fbea08233f83e0da576c10a4f5e0130665.png', u'latex-695ad29030cb04bdf62811cad73d4b0a1f050a3f.png', u'latex-729a8fba6ab57ad7d048a9ff65833cf1ece6ebfe.png', u'latex-7456bc3f2374eb8d6164405236407ad2d7d0ecbb.png', u'latex-97cffd5cb671612dec01a50881bd60fcc906eee4.png', u'latex-ba2fbb6715815a60396bfd1aa8078503d126679e.png', u'latex-bb5ec792c7e0a9018bb716abc852c50c075c7796.png', u'latex-c415ae25a52f6b0eff00027473f3f46a3a8b76b4.png', u'latex-c93a0122bd7c9f9f976f7a39230004e438b3df1b.png', u'latex-d4933caa6253a256477e3db717771f44cce00702.png', u'latex-d610a5f2b2f113546c205c8198916702f9699b63.png', u'latex-de07dce6d6a67f6f8338f5b2fb6372b3711df880.png', u'latex-e5bfed9ac4f12a89ea802262b20f65d06ff18537.png', u'latex-ec54004c161fe63c25d76af0d71dd7ed57a287d9.png', u'latex-f48423e484beffa99050f573b1b410fce61771cf.png', u'latex-fb82fab09f82d77e5ff94035b43f4f81bbc03119.png', u'latex-7fd4ef6592141d9a7d877fb7e3cf9a6dea56dec7.png', u'latex-eb0b3ffe4fbe061140feeae4d8380dcf2141741b.png', u'latex-fc8a91443116e879a9390399fb797c0f5295a759.png', u'latex-107c9d49d9885dfaf6b366dead03955715f6bb49.png']
[1506855605] sync.py:_downloadFiles(): received 25 files
[1506855605] sync.py:_downloadFiles(): fetch [u'latex-2237c0bdda8edf49fab124985adcd0ff311ed557.png', u'latex-3c9591e251dd13863e7a0fa5aa84d0ed0184db5a.png', u'latex-5faeac0eb0f6daebb3c41c62f0280ab4265ea95b.png', u'latex-60ef3945728bb2eca0645dd5b8f5f97f21491229.png', u'latex-674258ca58e36f4c41469c2e8681f17446190619.png', u'latex-68e22d4ec1761d960b4b2564ab87fa2e1c16454d.png', u'latex-6f0f92955f9f0dc53b6fcabfbe5a105cd4215a1e.png', u'latex-772ca8c201f3e42c0794023622e7304f18f851be.png', u'latex-8bad0b4f29134a0c45aa186ef6fbee33d92640a4.png', u'latex-99b448d67a640e124019329d56f5f9fcab383172.png', u'latex-a9068465bcc631414b0cb79e817d22dd6202567c.png', u'latex-ae851286999ea59b58734d2125b56d95101d92ad.png', u'latex-b2202eb1fb467527104621eb122bf56121fa6f5d.png', u'latex-b8feee08da9a9957592e775dd8e5a67c698a2a3d.png', u'latex-cf4a9645579456d0ca2d779d77d3978ed0911a38.png', u'latex-dd97c0f83991b538d38ce027511b9572bec00494.png', u'latex-f05cf6f4a708b3317bc1265aeb98a268ace45b55.png', u'latex-f0f0c32778d22f89f3ddb1cad79fda75f8e1b83c.png', u'latex-fcdcae0658d733b98fe45cb8fae6dcae48045680.png', u'latex-01b07ba5e2c2af9d84acff24d1e5a3ff53b77c4b.png', u'latex-02ff5f247f2344bddd5b3a207461379514308ce2.png', u'latex-2179f9b905a25254e10d9dda74fe8e51623a753b.png', u'latex-595fffca1249c242f681f34fc52f252993d33751.png', u'latex-5e32c3370b1abd4c7d740e41a4902b3b83cdede1.png', u'latex-68a724846f8940eaad5ed7e08e49ee07f09018f7.png']
[1506855607] sync.py:_downloadFiles(): received 25 files
[1506855607] sync.py:_downloadFiles(): fetch [u'latex-6b2df601b0a2f209bf270ed24190897495356536.png', u'latex-8de02e80ee887ef10b8fdbcf20cedce40a44f0a1.png', u'latex-94d4c3dbcc24e0d598ee1d2057190555c7706edc.png', u'latex-bafdaa24bd2122ef3ecd05a0be9eacb3839e5072.png', u'latex-2ad17e8b638b2fb0884d9ff3458d040a118e11ba.png', u'latex-2d7be63b62a107a4589c5051f53b5e3b13a50c4a.png', u'latex-3ccae77f6e1af7457bcfb95ce6511e7a7f0ce29f.png', u'latex-499bf5ff0642783a2ada5f10e1a810f311eda1d0.png', u'latex-5623ffef951ba18997169eaaf1b2d64ac4147752.png', u'latex-5b5209c48a4b6778554f5eac09cf6e487e93b714.png', u'latex-5b5e0cee8f5cb696316787b34a39b37d5852bee2.png', u'latex-675008e116c2269f90b3e5fe3d5aa1837326dd62.png', u'latex-789b3b27f6ff2f594486f1c4b996a973301f543e.png', u'latex-83dc0fc7c8502b86025cfae3f0abecbc31571b81.png', u'latex-86e2aabaea1bef1f1ef923e1a3064a9548f2ec56.png', u'latex-92b1b488be06ea12a3fc190276e32137cb8536d4.png', u'latex-c8cb8b59a68ae10d9a4cdaecf9dabaa8b6c64364.png', u'paste-11931419148289.jpg', u'paste-13219909337089.jpg', u'latex-110c65b93c2caa00ad915f2369c412dea8dfca6f.png', u'latex-3de55339c862dedceebdc68dc8bdd84f35e50c8c.png', u'latex-c6fd39326d85a5da10cfd2262895955404d30189.png']
[1506855607] sync.py:_downloadFiles(): received 22 files
[1506855607] sync.py:sync(): update last usn to 622
[1506855608] sync.py:sync(): mediaChanges resp count 0
[1506855608] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506855608] sched.py:_updateCutoff(): 177, 1506880800
[1506855993] cards.py:flush(): {'crt': 1506855993, 'data': '', 'did': 1506855793946, 'due': 1300, 'factor': 0, 'flags': 0, 'id': 1506855993487, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506855993, 'nid': 1506855781680, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506856081] cards.py:flush(): {'crt': 1506856081, 'data': '', 'did': 1506855793946, 'due': 1301, 'factor': 0, 'flags': 0, 'id': 1506856081503, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856081, 'nid': 1506855993733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506856781] cards.py:flush(): {'crt': 1506856781, 'data': '', 'did': 1506855793946, 'due': 1302, 'factor': 0, 'flags': 0, 'id': 1506856781937, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856781, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506856877] cards.py:flush(): {'crt': 1506856877, 'data': '', 'did': 1506855793946, 'due': 1303, 'factor': 0, 'flags': 0, 'id': 1506856877769, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856877, 'nid': 1506856781949, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506856995] cards.py:flush(): {'crt': 1506856995, 'data': '', 'did': 1506855793946, 'due': 1304, 'factor': 0, 'flags': 0, 'id': 1506856995678, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856995, 'nid': 1506856935096, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506857406] cards.py:flush(): {'crt': 1506857406, 'data': '', 'did': 1506857168136, 'due': 1305, 'factor': 0, 'flags': 0, 'id': 1506857406574, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506857406, 'nid': 1506857159095, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506860593] cards.py:flush(): {'crt': 1506860593, 'data': '', 'did': 1506857168136, 'due': 1306, 'factor': 0, 'flags': 0, 'id': 1506860593057, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506860593, 'nid': 1506857469851, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1506862605] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506862605] sched.py:_updateCutoff(): 177, 1506880800
[1506862607] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1506855552301,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1506862607,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 47}
[1506862607] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1506862604508,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1506862607,
 'usn': 47}
[1506862608] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1506862608] sync.py:newerRows(): cards, []
[1506862608] sync.py:newerRows(): notes, []
[1506862608] sync.py:sync(): client chunk, {'cards': [(1506855993487,
            1506855781680,
            1506855793946,
            0,
            1506855993,
            47,
            0,
            0,
            1300,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506856081503,
            1506855993733,
            1506855793946,
            0,
            1506856081,
            47,
            0,
            0,
            1301,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506856781937,
            1506856081510,
            1506855793946,
            0,
            1506856781,
            47,
            0,
            0,
            1302,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506856877769,
            1506856781949,
            1506855793946,
            0,
            1506856877,
            47,
            0,
            0,
            1303,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506856995678,
            1506856935096,
            1506855793946,
            0,
            1506856995,
            47,
            0,
            0,
            1304,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506857406574,
            1506857159095,
            1506857168136,
            0,
            1506857406,
            47,
            0,
            0,
            1305,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1506860593057,
            1506857469851,
            1506857168136,
            0,
            1506860593,
            47,
            0,
            0,
            1306,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1506855781680,
            u'gK/G64Qqcs',
            1491545041634,
            1506855993,
            47,
            u'',
            u"What does a const do and not do?\x1fRecall that a variable in javascript is like a pointer in C.<div><br /></div><div>What const does is prevents the pointer from changing the address it points to.</div><div>If that address belongs to an object though, you can still mutate that object. You just can't reassign const.</div><div><br /></div><div>ie.</div><div><br /></div><div>const PI = 3</div><div>PI = 4 // NOT OK</div><div><br /></div><div>const thing = { value: 3 }</div><div>thing.value = 4 // OK</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1506855993733,
            u'qe-Egb69+A',
            1491545041634,
            1506856081,
            47,
            u'',
            u'How does ES6 introduce block scoping to variables and functions?\x1fTo get block scoping for variables (which you always want), use <b>let</b>.<div><br /></div><div>Function block scoping is baked in.</div><div><br /></div><div>Blocks are strictly defined as regions of code that start and end with {}</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1506856081510,
            u'oH#o:bk&_8',
            1491545041634,
            1506856781,
            47,
            u'',
            u"What does the ... syntax do?\x1fIt's a 'spread'.<div><br /></div><div>It spreads in the sense that it distributes elements of an iterable.</div><div><br /></div><div>ie</div><div><br /></div><div>let x = [1, 2, 3]</div><div>let y = [4, 5, ...x]</div><div>y === [4, 5, 1, 2, 3]</div><div><br /></div><div>let x = [1, 2, 3]</div><div>let y = (a, b) =&gt; a+b</div><div>y(x) === 3</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1506856781949,
            u'nS0ru1]s^|',
            1491545041634,
            1506856877,
            47,
            u'',
            u"What does map do?\x1fIt's a method that every iterable has. It applied a function to every element of the iterable, with the parameters of that function being:<div><br /></div><div>(element, index, entireArray)</div><div><br /></div><div>ie.</div><div><br /></div><div>let x = [1, 2, 3]</div><div>let y = (value, index) =&gt; value + index</div><div>x.map(y) === [1, 3, 5]</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1506856935096,
            u'rA6@2bjjA1',
            1491545041634,
            1506856995,
            47,
            u'',
            u'What does Object.assign() do?\x1fThe Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.<div><br /></div><div>ie.</div><div><br /></div><div>let x = {a:3}</div><div>let y = {b:4}</div><div>Object.assign({}, x, y) === {a:3, b:4}</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1506857159095,
            u'u,W}%-|HXV',
            1491545041634,
            1506857467,
            47,
            u'',
            u'What is a prop?\x1fprops are the inputs to a React component.<br /><div><br /></div><div>&lt;Welcome name="Sara" /&gt;</div><div><br /></div><div>Inside the Welcome class, we can access the value passed in via props</div><div><br /></div><div><div>class Clock extends React.Component {</div><div>&nbsp; render() {</div><div>&nbsp; &nbsp; return (</div><div>&nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;Hello, world!&lt;/h1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;It is {this.props.date.toLocaleTimeString()}.&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; );</div><div>&nbsp; }</div><div>}</div></div><div><br /></div><div><div><b>All React components must act like pure functions with respect to their props.</b></div></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1506857469851,
            u'uKx7?38F^A',
            1491545041634,
            1506860593,
            47,
            u'',
            u"How do you update a component's data?\x1fYou don't use props. Props only work one way, a component should never modify the props it is given.<div><br /></div><div>You use state. State is similar to props, but it is <b>private</b> and <b>fully controlled</b> by the component.</div><div><br /></div><div>State is constructed like this:</div><div><br /></div><div><div>constructor(props) {</div><div>&nbsp; &nbsp;super(props);</div><div>&nbsp; &nbsp;this.state = {date: new Date()};</div><div>}</div></div><div><br /></div><div>Now whatever you want to change in props, should be given to state, and you can change it there.</div><div><br /></div>\x1f",
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1506862609] sync.py:sync(): findChanges
[1506862622] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506862622] sched.py:_updateCutoff(): 177, 1506880800
[1506862623] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1506862609184,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1506862624,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 48}
[1506862623] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1506862609184,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1506862623,
 'usn': 48}
[1506862623] sync.py:sync(): no changes
[1506862623] sync.py:sync(): findChanges
[1506862625] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506862625] sched.py:_updateCutoff(): 177, 1506880800
[1506862629] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1300, 'factor': 0, 'flags': 0, 'id': 1506855993487, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506855993, 'nid': 1506855781680, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862634] sched.py:answerCard(): 
[1506862634] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 1506863380, 'factor': 0, 'flags': 0, 'id': 1506855993487, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862634, 'nid': 1506855781680, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862634] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1301, 'factor': 0, 'flags': 0, 'id': 1506856081503, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856081, 'nid': 1506855993733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862642] sched.py:answerCard(): 
[1506862642] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 1506863282, 'factor': 0, 'flags': 0, 'id': 1506856081503, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862642, 'nid': 1506855993733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862642] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1302, 'factor': 0, 'flags': 0, 'id': 1506856781937, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856781, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862663] sched.py:answerCard(): 
[1506862663] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 1506863334, 'factor': 0, 'flags': 0, 'id': 1506856781937, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862663, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862663] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1303, 'factor': 0, 'flags': 0, 'id': 1506856877769, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856877, 'nid': 1506856781949, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862684] sched.py:answerCard(): 
[1506862684] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 1506863349, 'factor': 0, 'flags': 0, 'id': 1506856877769, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862684, 'nid': 1506856781949, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862684] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1304, 'factor': 0, 'flags': 0, 'id': 1506856995678, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506856995, 'nid': 1506856935096, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862692] sched.py:answerCard(): 
[1506862692] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 1506863431, 'factor': 0, 'flags': 0, 'id': 1506856995678, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862692, 'nid': 1506856935096, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862692] sched.py:getCard(): {'data': u'', 'did': 1506857168136, 'due': 1305, 'factor': 0, 'flags': 0, 'id': 1506857406574, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506857406, 'nid': 1506857159095, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862716] sched.py:answerCard(): 
[1506862716] cards.py:flushSched(): {'data': u'', 'did': 1506857168136, 'due': 1506863342, 'factor': 0, 'flags': 0, 'id': 1506857406574, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862716, 'nid': 1506857159095, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862716] sched.py:getCard(): {'data': u'', 'did': 1506857168136, 'due': 1306, 'factor': 0, 'flags': 0, 'id': 1506860593057, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1506860593, 'nid': 1506857469851, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 47}
[1506862721] sched.py:answerCard(): 
[1506862721] cards.py:flushSched(): {'data': u'', 'did': 1506857168136, 'due': 1506863441, 'factor': 0, 'flags': 0, 'id': 1506860593057, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862721, 'nid': 1506857469851, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1506862721] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1506863282, 'factor': 0, 'flags': 0, 'id': 1506856081503, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862642, 'nid': 1506855993733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1506862723] sched.py:answerCard(): 
[1506862723] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 178, 'factor': 2500, 'flags': 0, 'id': 1506856081503, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1506862723, 'nid': 1506855993733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1506862723] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1506863334, 'factor': 0, 'flags': 0, 'id': 1506856781937, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862663, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1506862725] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1506862725] sched.py:_updateCutoff(): 177, 1506880800
[1506862726] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1506862609184,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1506862727,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 48}
[1506862726] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1506862725616,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1506862726,
 'usn': 48}
[1506862727] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1506862727] sync.py:newerRows(): cards, []
[1506862727] sync.py:newerRows(): notes, []
[1506862727] sync.py:sync(): client chunk, {'cards': [(1506855993487,
            1506855781680,
            1506855793946,
            0,
            1506862634,
            48,
            1,
            1,
            1506863380,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506856081503,
            1506855993733,
            1506855793946,
            0,
            1506862723,
            48,
            2,
            2,
            178,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506856781937,
            1506856081510,
            1506855793946,
            0,
            1506862663,
            48,
            1,
            1,
            1506863334,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506856877769,
            1506856781949,
            1506855793946,
            0,
            1506862684,
            48,
            1,
            1,
            1506863349,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506856995678,
            1506856935096,
            1506855793946,
            0,
            1506862692,
            48,
            1,
            1,
            1506863431,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506857406574,
            1506857159095,
            1506857168136,
            0,
            1506862716,
            48,
            1,
            1,
            1506863342,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1506860593057,
            1506857469851,
            1506857168136,
            0,
            1506862721,
            48,
            1,
            1,
            1506863441,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [],
 'revlog': [(1506862634923, 1506855993487, 48, 2, -600, -60, 0, 5521, 0),
            (1506862642755, 1506856081503, 48, 2, -600, -60, 0, 7829, 0),
            (1506862663608, 1506856781937, 48, 2, -600, -60, 0, 20850, 0),
            (1506862684259, 1506856877769, 48, 2, -600, -60, 0, 20649, 0),
            (1506862692279, 1506856995678, 48, 2, -600, -60, 0, 8016, 0),
            (1506862716861, 1506857406574, 48, 2, -600, -60, 0, 24581, 0),
            (1506862721559, 1506860593057, 48, 2, -600, -60, 0, 4695, 0),
            (1506862723631, 1506856081503, 48, 2, 1, -600, 2500, 2069, 0)]}
[1506862728] sync.py:sync(): findChanges
[1507719001] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1507719001] sched.py:_updateCutoff(): 187, 1507744800
[1507719001] sched.py:unburyCards(): []
[1507719002] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1506919152388,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1507719003,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 50}
[1507719002] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1507719001170,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1507719002,
 'usn': 49}
[1507719003] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1507719003] sync.py:newerRows(): cards, []
[1507719003] sync.py:newerRows(): notes, []
[1507719003] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1507719004] sync.py:sync(): findChanges
[1507719005] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1507719005] sched.py:_updateCutoff(): 187, 1507744800
[1507719559] cards.py:flush(): {'crt': 1507719559, 'data': '', 'did': 1507719479617, 'due': 1307, 'factor': 0, 'flags': 0, 'id': 1507719559196, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507719559, 'nid': 1507719444065, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507719696] cards.py:flush(): {'crt': 1507719696, 'data': '', 'did': 1507719479617, 'due': 1308, 'factor': 0, 'flags': 0, 'id': 1507719696548, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507719696, 'nid': 1507719559667, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507720433] cards.py:flush(): {'crt': 1507720433, 'data': '', 'did': 1507719479617, 'due': 1309, 'factor': 0, 'flags': 0, 'id': 1507720433611, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507720433, 'nid': 1507719696555, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721114] cards.py:flush(): {'crt': 1507721114, 'data': '', 'did': 1507719479617, 'due': 1310, 'factor': 0, 'flags': 0, 'id': 1507721114583, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721114, 'nid': 1507720433618, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721230] cards.py:flush(): {'crt': 1507721230, 'data': '', 'did': 1507719479617, 'due': 1311, 'factor': 0, 'flags': 0, 'id': 1507721230064, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721230, 'nid': 1507721114591, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721337] cards.py:flush(): {'crt': 1507721337, 'data': '', 'did': 1507719479617, 'due': 1312, 'factor': 0, 'flags': 0, 'id': 1507721337473, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721337, 'nid': 1507721230068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721419] cards.py:flush(): {'crt': 1507721419, 'data': '', 'did': 1507719479617, 'due': 1313, 'factor': 0, 'flags': 0, 'id': 1507721419858, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721419, 'nid': 1507721337479, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721533] cards.py:flush(): {'crt': 1507721533, 'data': '', 'did': 1507719479617, 'due': 1314, 'factor': 0, 'flags': 0, 'id': 1507721533884, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721533, 'nid': 1507721419870, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507721997] cards.py:flush(): {'crt': 1507721997, 'data': '', 'did': 1507719479617, 'due': 1315, 'factor': 0, 'flags': 0, 'id': 1507721997136, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507721997, 'nid': 1507721533887, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507722065] cards.py:flush(): {'crt': 1507722065, 'data': '', 'did': 1507719479617, 'due': 1316, 'factor': 0, 'flags': 0, 'id': 1507722065409, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507722065, 'nid': 1507721997144, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507722209] cards.py:flush(): {'crt': 1507722209, 'data': '', 'did': 1507719479617, 'due': 1317, 'factor': 0, 'flags': 0, 'id': 1507722209720, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507722209, 'nid': 1507722065413, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507722269] cards.py:flush(): {'crt': 1507722269, 'data': '', 'did': 1507719479617, 'due': 1318, 'factor': 0, 'flags': 0, 'id': 1507722269129, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507722269, 'nid': 1507722209723, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507722320] cards.py:flush(): {'crt': 1507722320, 'data': '', 'did': 1507719479617, 'due': 1319, 'factor': 0, 'flags': 0, 'id': 1507722320778, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1507722320, 'nid': 1507722269134, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1507722515] cards.py:flush(): {'crt': 1507722515, 'data': '', 'did': 1507719479617, 'due': 132[1508221670] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508221670] sched.py:_updateCutoff(): 193, 1508263200
[1508221670] sched.py:unburyCards(): []
[1508221672] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1507719005277,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508221672,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 51}
[1508221672] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508221670967,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508221672,
 'usn': 51}
[1508221673] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508221673] sync.py:newerRows(): cards, []
[1508221673] sync.py:newerRows(): notes, []
[1508221673] sync.py:sync(): client chunk, {'cards': [(1507719559196,
            1507719444065,
            1507719479617,
            0,
            1507719559,
            51,
            0,
            0,
            1307,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507719696548,
            1507719559667,
            1507719479617,
            0,
            1507719696,
            51,
            0,
            0,
            1308,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507720433611,
            1507719696555,
            1507719479617,
            0,
            1507720433,
            51,
            0,
            0,
            1309,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721114583,
            1507720433618,
            1507719479617,
            0,
            1507721114,
            51,
            0,
            0,
            1310,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721230064,
            1507721114591,
            1507719479617,
            0,
            1507721230,
            51,
            0,
            0,
            1311,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721337473,
            1507721230068,
            1507719479617,
            0,
            1507721337,
            51,
            0,
            0,
            1312,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721419858,
            1507721337479,
            1507719479617,
            0,
            1507721419,
            51,
            0,
            0,
            1313,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721533884,
            1507721419870,
            1507719479617,
            0,
            1507721533,
            51,
            0,
            0,
            1314,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507721997136,
            1507721533887,
            1507719479617,
            0,
            1507721997,
            51,
            0,
            0,
            1315,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722065409,
            1507721997144,
            1507719479617,
            0,
            1507722065,
            51,
            0,
            0,
            1316,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722209720,
            1507722065413,
            1507719479617,
            0,
            1507722209,
            51,
            0,
            0,
            1317,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722269129,
            1507722209723,
            1507719479617,
            0,
            1507722269,
            51,
            0,
            0,
            1318,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722320778,
            1507722269134,
            1507719479617,
            0,
            1507722320,
            51,
            0,
            0,
            1319,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722515668,
            1507722320786,
            1507719479617,
            0,
            1507722515,
            51,
            0,
            0,
            1320,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722593345,
            1507722515671,
            1507719479617,
            0,
            1507722593,
            51,
            0,
            0,
            1321,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507722731526,
            1507722593350,
            1507719479617,
            0,
            1507722731,
            51,
            0,
            0,
            1322,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1507725452509,
            1507725193072,
            1507725209632,
            0,
            1507725452,
            51,
            0,
            0,
            1323,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1507719444065,
            u'hiqNJhD86<',
            1491545041634,
            1507719559,
            51,
            u'',
            u'What is the difference between a .select and a .transition?\x1f<div>- Nearly everything you can do to a selection of elements, you can also do to a transition, causing the <b>change to be animated over time</b> rather than instantaneous.</div><div><br /></div><div>- Yet looks can be deceiving because<b> selections and transitions are not perfectly equivalent</b>: transitions provide only a subset of selection functionality. These nuances are due to the <b>long-running, asynchronous nature of transitions.</b></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507719559667,
            u'C8gB7MCE8a',
            1491545041634,
            1507719696,
            51,
            u'',
            u'What type of animations are D3 transtions?\x1f- A key frame in animation and filmmaking is a drawing that <b>defines the starting and ending points</b> of any <b>smooth transition</b>.&nbsp;<div><br /></div><div>- The drawings are called "frames" because their position in time is measured in frames on a strip of film. <b>A sequence of key frames</b> defines which movement the viewer will see, whereas the position of the key frames on the film, video, or animation defines the timing of the movement.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507719696555,
            u'Cc%eE_kv<!',
            1491545041634,
            1507720433,
            51,
            u'',
            u'What are the three ways of defining a start and end frame in D3 for the transition?\x1f- Set it in the DOM before creating the transition.<div><img src="paste-3234110373890.jpg" /></div><div><br /></div><div>- Set the start-value when the transition starts and listen for a start-event (useful if the transition has a delay)</div><div><img src="paste-4264902524930.jpg" /></div><div><br /></div><div>- Use a tween like styleTween, where you provide a start and end value explicitly, as well as an interpolator. (useful if you don\'t like the start value given by the DOM or the constructed interpolator to the specified ending value)</div><div><img src="paste-5106716114946.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507720433618,
            u'b>4@%PNwaJ',
            1491545041634,
            1507721114,
            51,
            u'',
            u'What is interpolation?\x1fA D3 transition defines a start and end frame. To get from the start and end frame, we need to be able to<b> fill in all the frames in between</b>. This "filling in" process is interpolation.\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721114591,
            u'o!+q5sd2.w',
            1491545041634,
            1507721230,
            51,
            u'',
            u'What are the "types" that d3.interpolate can infer?\x1fIt first determines the appropriate "type" of value to transition from and to. It can do a bunch:<div><br /></div><div><div>numbers</div><div>colors</div><div>geometric transforms</div><div>strings with embedded numbers (e.g., "96px")</div></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721230068,
            u'fn~NMt2tUa',
            1491545041634,
            1507721337,
            51,
            u'',
            u'How does d3.interpolate work for strings?\x1f1) It finds numbers embedded within strings, pairing up numbers in the starting string with the corresponding number in the ending string.<div>2) Those numbers are interpolated separately</div><div>3) The resulting string is then reconstructed.&nbsp;</div><div><br /></div><div>Applications:</div><div>String interpolators have myriad applications, such as interpolating path data (e.g., "M0,0L20,30") and CSS font specifications (e.g., "300 12px/100% Helvetica").</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721337479,
            u'MM@4OZa$JK',
            1491545041634,
            1507721419,
            51,
            u'',
            u'How do you make your own interpolater?\x1fYou need a function that takes a single argument t ranging from <b>0 to 1</b>. For t = 0, the interpolator returns the <b>starting value</b>; for t = 1, the interpolator returns the <b>ending value</b>; and for values in-between, the interpolator returns a <b>blending value</b>.&nbsp;<div><br /></div><div>For example, to interpolate two numbers:</div><div><img src="paste-7872675053570.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721419870,
            u'E@4%2-l^(W',
            1491545041634,
            1507721533,
            51,
            u'',
            u'Can everything be interpolated?\x1fNo. Things that have discrete values like display:true and display:false cannot be interpolated.\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721533887,
            u'Bw8xvM7Qmc',
            1491545041634,
            1507721997,
            51,
            u'',
            u'What is the lifecycle of a transition?\x1f<div>The transition is scheduled.</div><div>The transition starts.</div><div>The transition runs.</div><div>The transition ends.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507721997144,
            u'DjhOY9yqz_',
            1491545041634,
            1507722065,
            51,
            u'',
            u'How is a transition sheduled?\x1f- <b>A transition is scheduled when it is created</b>: when you call selection.transition, you are scheduling a transition. This is also when you call attr, style, and other transition methods to define the ending key frame.&nbsp;<div>- Scheduling happens in your code (for example, in response to the user clicking a button), meaning that the<b> code so far is fully synchronous</b>.&nbsp;</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722065413,
            u'E#vgvJtm7B',
            1491545041634,
            1507722209,
            51,
            u'',
            u'How does the "start" phase of the transition lifecycle work?\x1f- A transition starts <b>based on its delay</b>, which was specified when the transition was scheduled. If no delay was specified, then the transition starts as soon as possible, which is typically after a few milliseconds.&nbsp;<div>- The start event is then dispatched, and the transition <b>initializes its tweens</b>, which may involve <b>retrieving starting values</b> from the DOM and constructing interpolators.&nbsp;</div><div>---Deferring the initialization of tweens to start is necessary because <b>starting values aren\u2019t known until the transition starts.</b></div><div>- If you use attrTween, styleTween and other tween methods, keep in mind that your code will be evaluated asynchronously when the transition starts <b><u>(so don\'t have them depend on each other)</u></b></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722209723,
            u'nk]0XiqXLk',
            1491545041634,
            1507722269,
            51,
            u'',
            u'How long does a transition go for?\x1fA transition ends based on the <b>sum</b> of its <b>delay</b> and <b>duration</b>. When a transition ends, the tweens are invoked a final time with t = 1, and then the end event is dispatched.\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722269134,
            u'F[g[RyF#/y',
            1491545041634,
            1507722320,
            51,
            u'',
            u'What happens during the "run" phase of the transition lifecycle?\x1f- While the transition runs, its <b>tweens are repeatedly invoked with values of t ranging from 0 to 1.&nbsp;</b><div>- In addition to delay and duration, <b>transitions have easing to control timing</b>. Easing<b> distorts time</b>, such as for slow-in and slow-out. Some easing functions may temporarily give values of t greater than 1 or less than 0; however, the ending time is always exactly 1 so that the ending value is set exactly when the transition ends</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722320786,
            u'fjW+W/6%_4',
            1491545041634,
            1507722515,
            51,
            u'',
            u'What does it mean for transitions to be "per element"?\x1fEach element transitions <b>independently</b>.&nbsp;<div>When you create a transition from a selection, think of it as a <b>set of transitions</b>, one per element, rather than a single mega-transition running on multiple elements.</div><div>Different elements can have<b> different delays and duration</b>, and even <b>different easing and tweens</b>.&nbsp;</div><div>Additionally,<b> transition events are dispatched separately for each element</b>. When you receive an end event for a given element, its transition has ended, but other transitions may still be running on other elements.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722515671,
            u'qQ]u@G-sb$',
            1491545041634,
            1507722593,
            51,
            u'',
            u'What does it mean for transitions to be exclusive?\x1f<div>- For a given element, transitions are exclusive:<b> only one transition can be running on the element at the same time.&nbsp;</b></div><div><b>- Starting</b> a <b>new transition</b> on the element <b>stops any transition</b> that is<b> already running</b>.&nbsp;</div><div>- <b>Interrupting a transition on the element has no effect on other elements</b>, and multiple transitions can run concurrently on different elements.&nbsp;</div><div>- While only one transition can be running simultaneously on the element, multiple transitions can be scheduled. For example, you can schedule <b>successive transitions using transition.transition</b>, which creates a new transition whose delay immediately follows the existing transition.</div><div><br /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507722593350,
            u'ekEVa{Vu7y',
            1491545041634,
            1507722731,
            51,
            u'',
            u'What does it mean that sequences of transitions only advanced forward in time?\x1f- Transitions are assigned a monotonically-increasing identifier (id) <b>when they are scheduled</b>; each new transition id is greater than the last.&nbsp;<div>- When a transition starts on the element, <b>it can only run if the transition is newer than whatever previously ran on the same element.&nbsp;</b></div><div>- Thus,<b><u> starting a new transition implicitly cancels any previous transitions</u></b>\u2014even if those old transitions have not yet started.</div><div><br /></div><div>ie if a transition is set where you hit "space" and something happens, then a transition is also set where you hit "x", if you run "x", you can\'t run "space" anymore</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1507725193072,
            u'C7`*O=XYYR',
            1491545041634,
            1507725452,
            51,
            u'',
            u'What is the enter-update-exit pattern?\x1fIt all has to do with when you bind data to your dom elements.<div><br /></div><div>svg.selectAll("g").data([1,2,3])</div><div><br /></div><div>&lt;selection&gt;.data() returns all the DOM elements which exist and are bindable-to and binds the values in data to them. (this is called an update)</div><div>&lt;selection&gt;.data().exit() returns all the DOM elements which exist but don\'t have corresponding data values in .data() (this is called an exit)</div><div>&lt;selection&gt;.data().enter() returns DOM elements which don\'t exist, but need to exist for each data element to have a corresponding DOM element (this is called an enter)</div>\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1508221674] sync.py:sync(): findChanges
[1508221675] sync.py:sync(): last local usn is 622
[1508221676] sync.py:sync(): mediaChanges resp count 0
[1508221676] media.py:mediaChangesZip(): +media zip, paste-7872675053570.jpg
[1508221676] media.py:mediaChangesZip(): +media zip, paste-4264902524930.jpg
[1508221676] media.py:mediaChangesZip(): +media zip, paste-5106716114946.jpg
[1508221676] media.py:mediaChangesZip(): +media zip, paste-3234110373890.jpg
[1508221677] sync.py:sync(): processed 4, serverUsn 626, clientUsn 622
[1508221677] sync.py:sync(): lastUsn in sync, updating local
[1508221677] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508221677] sched.py:_updateCutoff(): 193, 1508263200
[1508222056] cards.py:flush(): {'crt': 1508222056, 'data': '', 'did': 1508222056817, 'due': 1324, 'factor': 0, 'flags': 0, 'id': 1508222056818, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508222056, 'nid': 1508221766987, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508222394] cards.py:flush(): {'crt': 1508222394, 'data': '', 'did': 1508222056817, 'due': 1325, 'factor': 0, 'flags': 0, 'id': 1508222394913, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508222394, 'nid': 1508222057028, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508223361] cards.py:flush(): {'crt': 1508223361, 'data': '', 'did': 1508222056817, 'due': 1326, 'factor': 0, 'flags': 0, 'id': 1508223361130, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508223361, 'nid': 1508223341406, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508223513] cards.py:flush(): {'crt': 1508223513, 'data': '', 'did': 1508222056817, 'due': 1327, 'factor': 0, 'flags': 0, 'id': 1508223513453, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508223513, 'nid': 1508223361252, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508223625] cards.py:flush(): {'crt': 1508223625, 'data': '', 'did': 1508222056817, 'due': 1328, 'factor': 0, 'flags': 0, 'id': 1508223625340, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508223625, 'nid': 1508223513459, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508223703] cards.py:flush(): {'crt': 1508223703, 'data': '', 'did': 1508222056817, 'due': 1329, 'factor': 0, 'flags': 0, 'id': 1508223703777, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508223703, 'nid': 1508223625349, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508224198] cards.py:flush(): {'crt': 1508224198, 'data': '', 'did': 1508222056817, 'due': 1330, 'factor': 0, 'flags': 0, 'id': 1508224198472, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508224198, 'nid': 1508223703782, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508224491] cards.py:flush(): {'crt': 1508224491, 'data': '', 'did': 1508222056817, 'due': 1331, 'factor': 0, 'flags': 0, 'id': 1508224491114, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508224491, 'nid': 1508224198483, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244414] cards.py:flush(): {'crt': 1508244414, 'data': '', 'did': 1508222056817, 'due': 1332, 'factor': 0, 'flags': 0, 'id': 1508244414587, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244414, 'nid': 1508224491118, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244503] cards.py:flush(): {'crt': 1508244503, 'data': '', 'did': 1508222056817, 'due': 1333, 'factor': 0, 'flags': 0, 'id': 1508244503647, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244503, 'nid': 1508244414594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244582] cards.py:flush(): {'crt': 1508244582, 'data': '', 'did': 1508222056817, 'due': 1334, 'factor': 0, 'flags': 0, 'id': 1508244582158, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244582, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244662] cards.py:flush(): {'crt': 1508244662, 'data': '', 'did': 1508222056817, 'due': 1335, 'factor': 0, 'flags': 0, 'id': 1508244662201, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244662, 'nid': 1508244582161, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244725] cards.py:flush(): {'crt': 1508244725, 'data': '', 'did': 1508222056817, 'due': 1336, 'factor': 0, 'flags': 0, 'id': 1508244725000, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244725, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244739] cards.py:flush(): {'crt': 1508244739, 'data': '', 'did': 1508222056817, 'due': 1337, 'factor': 0, 'flags': 0, 'id': 1508244739772, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244739, 'nid': 1508244725010, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244760] cards.py:flush(): {'crt': 1508244760, 'data': '', 'did': 1508222056817, 'due': 1338, 'factor': 0, 'flags': 0, 'id': 1508244760697, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244760, 'nid': 1508244739776, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244840] cards.py:flush(): {'crt': 1508244840, 'data': '', 'did': 1508222056817, 'due': 1339, 'factor': 0, 'flags': 0, 'id': 1508244840306, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244840, 'nid': 1508244760699, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244922] cards.py:flush(): {'crt': 1508244922, 'data': '', 'did': 1508222056817, 'due': 1340, 'factor': 0, 'flags': 0, 'id': 1508244922301, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244922, 'nid': 1508244840309, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508244962] cards.py:flush(): {'crt': 1508244962, 'data': '', 'did': 1508222056817, 'due': 1341, 'factor': 0, 'flags': 0, 'id': 1508244962306, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508244962, 'nid': 1508244922305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508245138] cards.py:flush(): {'crt': 1508245138, 'data': '', 'did': 1508222056817, 'due': 1342, 'factor': 0, 'flags': 0, 'id': 1508245138329, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508245138, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508245805] cards.py:flush(): {'crt': 1508245805, 'data': '', 'did': 1508222056817, 'due': 1343, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508245805, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508245924] cards.py:flush(): {'crt': 1508245924, 'data': '', 'did': 1508222056817, 'due': 1344, 'factor': 0, 'flags': 0, 'id': 1508245924149, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508245924, 'nid': 1508245805023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508246087] cards.py:flush(): {'crt': 1508246087, 'data': '', 'did': 1508222056817, 'due': 1345, 'factor': 0, 'flags': 0, 'id': 1508246087549, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508246087, 'nid': 1508245924151, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508246856] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508246856] sched.py:_updateCutoff(): 193, 1508263200
[1508246857] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508221674409,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508246857,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 52}
[1508246857] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508246850363,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508246857,
 'usn': 52}
[1508246858] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508246858] sync.py:newerRows(): cards, []
[1508246858] sync.py:newerRows(): notes, []
[1508246858] sync.py:sync(): client chunk, {'cards': [(1508222056818,
            1508221766987,
            1508222056817,
            0,
            1508222056,
            52,
            0,
            0,
            1324,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508222394913,
            1508222057028,
            1508222056817,
            0,
            1508222394,
            52,
            0,
            0,
            1325,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508223361130,
            1508223341406,
            1508222056817,
            0,
            1508223361,
            52,
            0,
            0,
            1326,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508223513453,
            1508223361252,
            1508222056817,
            0,
            1508223513,
            52,
            0,
            0,
            1327,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508223625340,
            1508223513459,
            1508222056817,
            0,
            1508223625,
            52,
            0,
            0,
            1328,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508223703777,
            1508223625349,
            1508222056817,
            0,
            1508223703,
            52,
            0,
            0,
            1329,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508224198472,
            1508223703782,
            1508222056817,
            0,
            1508224198,
            52,
            0,
            0,
            1330,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508224491114,
            1508224198483,
            1508222056817,
            0,
            1508224491,
            52,
            0,
            0,
            1331,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244414587,
            1508224491118,
            1508222056817,
            0,
            1508244414,
            52,
            0,
            0,
            1332,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244503647,
            1508244414594,
            1508222056817,
            0,
            1508244503,
            52,
            0,
            0,
            1333,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244582158,
            1508244503651,
            1508222056817,
            0,
            1508244582,
            52,
            0,
            0,
            1334,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244662201,
            1508244582161,
            1508222056817,
            0,
            1508244662,
            52,
            0,
            0,
            1335,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244725000,
            1508244662211,
            1508222056817,
            0,
            1508244725,
            52,
            0,
            0,
            1336,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244739772,
            1508244725010,
            1508222056817,
            0,
            1508244739,
            52,
            0,
            0,
            1337,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244760697,
            1508244739776,
            1508222056817,
            0,
            1508244760,
            52,
            0,
            0,
            1338,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244840306,
            1508244760699,
            1508222056817,
            0,
            1508244840,
            52,
            0,
            0,
            1339,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244922301,
            1508244840309,
            1508222056817,
            0,
            1508244922,
            52,
            0,
            0,
            1340,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508244962306,
            1508244922305,
            1508222056817,
            0,
            1508244962,
            52,
            0,
            0,
            1341,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508245138329,
            1508244962308,
            1508222056817,
            0,
            1508245138,
            52,
            0,
            0,
            1342,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508245805009,
            1508245138336,
            1508222056817,
            0,
            1508245805,
            52,
            0,
            0,
            1343,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508245924149,
            1508245805023,
            1508222056817,
            0,
            1508245924,
            52,
            0,
            0,
            1344,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508246087549,
            1508245924151,
            1508222056817,
            0,
            1508246087,
            52,
            0,
            0,
            1345,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508221766987,
            u'cLfkEZCz&*',
            1491545041634,
            1508222056,
            52,
            u'',
            u'What are the properties of non-deterministic and adverserial problems?\x1f<img src="paste-4234837753858.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508222057028,
            u'p1J1Bm&Ein',
            1491545041634,
            1508223323,
            52,
            u'',
            u'What are the sources of uncertainty in problems?\x1f<img src="paste-5995774345218.jpg" /><div><img src="paste-8319351652354.jpg" /><br /><div><br /></div></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508223341406,
            u'r7/7[dY/c]',
            1491545041634,
            1508223361,
            52,
            u'',
            u'Why might we allow abstraction errors?\x1f<img src="paste-8482560409602.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508223361252,
            u'nVls}{Z}.Y',
            1491545041634,
            1508223513,
            52,
            u'',
            u'How do you make decisions with uncertainty?\x1f<img src="paste-8714488643586.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508223513459,
            u'ksG)!xQl_+',
            1491545041634,
            1508223625,
            52,
            u'',
            u'What is an AND-OR tree?\x1f<img src="paste-8851927597058.jpg" /><div><img src="paste-8864812498946.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508223625349,
            u'wX&S0+Q>#X',
            1491545041634,
            1508223703,
            52,
            u'',
            u'Represent the vacuum problem\x1f<img src="paste-8976481648642.jpg" /><div><img src="paste-9062380994562.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508223703782,
            u'EM$u-rGn(n',
            1491545041634,
            1508224198,
            52,
            u'',
            u'What is the solution to an AND-OR search tree?\x1f<img src="paste-9148280340482.jpg" /><div><img src="paste-9191230013442.jpg" /></div><div><img src="paste-9487582756866.jpg" /></div><div><img src="paste-9878424780802.jpg" /></div><div><br /><div><br /></div></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508224198483,
            u'LCrf#B_Rvq',
            1491545041634,
            1508224491,
            52,
            u'',
            u'What is a loop in an AND-OR tree?\x1f<img src="paste-10209137262594.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508224491118,
            u'AOXk_lf^)A',
            1491545041634,
            1508244414,
            52,
            u'',
            u'How do you do search on an AND-OR?\x1fDon\'t add the decisions, only add the final state<div><img src="paste-10844792422402.jpg" /></div><div><img src="paste-10939281702914.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244414594,
            u's}GflDyI3[',
            1491545041634,
            1508244503,
            52,
            u'',
            u'How do we define an adverserial problem?\x1f<img src="paste-11158325035010.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244503651,
            u'wq9{|=cPez',
            1491545041634,
            1508244582,
            52,
            u'',
            u'How does mini-max work?\x1fSo we select to maximize our heuristic, and assume opponent will minimize<br /><div><br /></div><div><img src="paste-11261404250114.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244582161,
            u'ME-X`I{%L:',
            1491545041634,
            1508244662,
            52,
            u'',
            u'How does searching a game tree work?\x1f<img src="paste-11407433138178.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244662211,
            u'v}20}0!vg{',
            1491545041634,
            1508244725,
            52,
            u'',
            u'How does minimax work?\x1f<img src="paste-11458972745730.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244725010,
            u'IJILwbt3]0',
            1491545041634,
            1508244739,
            52,
            u'',
            u'What is the evluation function?\x1f<img src="paste-11605001633794.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244739776,
            u'Ctrbg#<8]a',
            1491545041634,
            1508244760,
            52,
            u'',
            u'How do you construct an evaluation function?\x1f<img src="paste-11635066404866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244760699,
            u'qWJu6;/2?n',
            1491545041634,
            1508244840,
            52,
            u'',
            u'How do we use evluation functions in tic-tac-to?\x1f<img src="paste-11733850652674.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244840309,
            u'dHbVRs&_lV',
            1491545041634,
            1508244922,
            52,
            u'',
            u'How which is the best decision here?<div><img src="paste-11961483919362.jpg" /></div>\x1fFar right, because 1 is the worst case there, which is large\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244922305,
            u'y$o}:yE?dI',
            1491545041634,
            1508244962,
            52,
            u'',
            u'What is the minimax algorithm?\x1f<img src="paste-12171937316866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244962308,
            u'xv`nMc78%}',
            1491545041634,
            1508245138,
            52,
            u'',
            u'What is alpha-beta pruning?\x1f<img src="paste-12528419602434.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508245138336,
            u'Ob#6[hTKVO',
            1491545041634,
            1508245805,
            52,
            u'',
            u'Does ordering matter for alpha-beta pruning?\x1f<img src="paste-13099650252802.jpg" /><div><img src="paste-13176959664130.jpg" /><br /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508245805023,
            u'tAk[9wVYA{',
            1491545041634,
            1508245924,
            52,
            u'',
            u'How do you order nodes for alpha-beta?\x1f<img src="paste-13408887898114.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508245924151,
            u'n$6:nDQ0na',
            1491545041634,
            1508246087,
            52,
            u'',
            u'How do people normally come up with evaluation functions?\x1f<img src="paste-13713830576130.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1508246859] sync.py:sync(): findChanges
[1508246861] sync.py:sync(): last local usn is 626
[1508246861] sync.py:sync(): mediaChanges resp count 0
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8710193676290.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-13408887898114.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-13099650252802.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-12528419602434.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-5995774345218.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8482560409602.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-9191230013442.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-9062380994562.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-4234837753858.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8976481648642.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-11635066404866.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-13176959664130.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-13713830576130.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-10844792422402.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-10209137262594.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8478265442306.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8714488643586.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-9148280340482.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-11158325035010.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-10849087389698.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-8864812498946.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-9487582756866.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-10939281702914.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-11733850652674.jpg
[1508246861] media.py:mediaChangesZip(): +media zip, paste-9878424780802.jpg
[1508246868] sync.py:sync(): processed 25, serverUsn 651, clientUsn 626
[1508246868] sync.py:sync(): lastUsn in sync, updating local
[1508246868] media.py:mediaChangesZip(): +media zip, paste-11605001633794.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-8851927597058.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-11261404250114.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-11407433138178.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-12171937316866.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-8319351652354.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-11961483919362.jpg
[1508246868] media.py:mediaChangesZip(): +media zip, paste-11458972745730.jpg
[1508246871] sync.py:sync(): processed 8, serverUsn 659, clientUsn 651
[1508246871] sync.py:sync(): lastUsn in sync, updating local
[1508246871] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508246871] sched.py:_updateCutoff(): 193, 1508263200
[1508246921] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508246921] sched.py:_updateCutoff(): 193, 1508263200
[1508246922] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508246859473,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508246923,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 53}
[1508246922] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508246921289,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508246922,
 'usn': 53}
[1508246923] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508246923] sync.py:newerRows(): cards, []
[1508246923] sync.py:newerRows(): notes, []
[1508246923] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508246924] sync.py:sync(): findChanges
[1508246928] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508246928] sched.py:_updateCutoff(): 193, 1508263200
[1508246929] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508246924741,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508246929,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 54}
[1508246929] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508246924741,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508246929,
 'usn': 54}
[1508246929] sync.py:sync(): no changes
[1508246929] sync.py:sync(): findChanges
[1508246931] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508246931] sched.py:_updateCutoff(): 193, 1508263200
[1508246958] cards.py:flush(): {'crt': 1508246958, 'data': '', 'did': 1508246909407, 'due': 1346, 'factor': 0, 'flags': 0, 'id': 1508246958054, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508246958, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508246997] cards.py:flush(): {'crt': 1508246997, 'data': '', 'did': 1508246909407, 'due': 1347, 'factor': 0, 'flags': 0, 'id': 1508246997127, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508246997, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508247063] cards.py:flush(): {'crt': 1508247063, 'data': '', 'did': 1508246909407, 'due': 1348, 'factor': 0, 'flags': 0, 'id': 1508247063792, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508247063, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508247507] cards.py:flush(): {'crt': 1508247507, 'data': '', 'did': 1508246909407, 'due': 1349, 'factor': 0, 'flags': 0, 'id': 1508247507886, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508247507, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508247845] cards.py:flush(): {'crt': 1508247845, 'data': '', 'did': 1508246909407, 'due': 1350, 'factor': 0, 'flags': 0, 'id': 1508247845767, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508247845, 'nid': 1508247507905, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508247899] cards.py:flush(): {'crt': 1508247899, 'data': '', 'did': 1508246909407, 'due': 1351, 'factor': 0, 'flags': 0, 'id': 1508247899333, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508247899, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508248076] cards.py:flush(): {'crt': 1508248076, 'data': '', 'did': 1508246909407, 'due': 1352, 'factor': 0, 'flags': 0, 'id': 1508248076701, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508248076, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508248093] cards.py:flush(): {'crt': 1508248093, 'data': '', 'did': 1508246909407, 'due': 1353, 'factor': 0, 'flags': 0, 'id': 1508248093649, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508248093, 'nid': 1508248076704, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508248171] cards.py:flush(): {'crt': 1508248171, 'data': '', 'did': 1508246909407, 'due': 1354, 'factor': 0, 'flags': 0, 'id': 1508248171938, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508248171, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508250172] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508250172] sched.py:_updateCutoff(): 193, 1508263200
[1508250174] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508246924741,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508250174,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 54}
[1508250174] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508250171808,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508250174,
 'usn': 54}
[1508250175] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508250175] sync.py:newerRows(): cards, []
[1508250175] sync.py:newerRows(): notes, []
[1508250175] sync.py:sync(): client chunk, {'cards': [(1508246958054,
            1508246934102,
            1508246909407,
            0,
            1508246958,
            54,
            0,
            0,
            1346,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508246997127,
            1508246958238,
            1508246909407,
            0,
            1508246997,
            54,
            0,
            0,
            1347,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508247063792,
            1508246997131,
            1508246909407,
            0,
            1508247063,
            54,
            0,
            0,
            1348,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508247507886,
            1508247063795,
            1508246909407,
            0,
            1508247507,
            54,
            0,
            0,
            1349,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508247845767,
            1508247507905,
            1508246909407,
            0,
            1508247845,
            54,
            0,
            0,
            1350,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508247899333,
            1508247845777,
            1508246909407,
            0,
            1508247899,
            54,
            0,
            0,
            1351,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508248076701,
            1508247899336,
            1508246909407,
            0,
            1508248076,
            54,
            0,
            0,
            1352,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508248093649,
            1508248076704,
            1508246909407,
            0,
            1508248093,
            54,
            0,
            0,
            1353,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508248171938,
            1508248093653,
            1508246909407,
            0,
            1508248171,
            54,
            0,
            0,
            1354,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508246934102,
            u'Qas4upd/Go',
            1491545041634,
            1508246958,
            54,
            u'',
            u'What is decision theory?\x1f<img src="paste-1000727379970.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508246958238,
            u'oRTpP@f|bn',
            1491545041634,
            1508246997,
            54,
            u'',
            u'What are the 3 components of decision theory?\x1f<img src="paste-1129576398850.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508246997131,
            u'bukTw{l8ph',
            1491545041634,
            1508247063,
            54,
            u'',
            u'What is maximum expected utility?\x1f<img src="paste-1361504632834.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508247063795,
            u'o`+:3{2e:K',
            1491545041634,
            1508247507,
            54,
            u'',
            u'How do you fill in the MEU problem?\x1f<img src="paste-1791001362434.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508247507905,
            u'HsPhv3:i%u',
            1491545041634,
            1508247845,
            54,
            u'',
            u'What are the axioms of utility theory?\x1fIf you have all 6, then there will be a utility function that matches the preferences.<div><br /></div><div><img src="paste-2443836391426.jpg" /></div><div><img src="paste-2658584756226.jpg" /></div><div><img src="paste-3066606649346.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508247845777,
            u'Or3i?OdF=P',
            1491545041634,
            1508247899,
            54,
            u'',
            u'What is the main theorum of utility theory?\x1f<img src="paste-3466038607874.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508247899336,
            u'GvZ@.#0_=e',
            1491545041634,
            1508248076,
            54,
            u'',
            u'What is risk neutral?\x1f<img src="paste-3895535337474.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508248076704,
            u'x86FY|!,G*',
            1491545041634,
            1508248093,
            54,
            u'',
            u'What is risk adverse?\x1f<img src="paste-4071628996610.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508248093653,
            u'GiC5BsCM0c',
            1491545041634,
            1508248171,
            54,
            u'',
            u'Compare risk adverse to risk neutral visually?\x1f<img src="paste-4256312590338.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1508250176] sync.py:sync(): findChanges
[1508250177] sync.py:sync(): last local usn is 659
[1508250178] sync.py:sync(): mediaChanges resp count 0
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1129576398850.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1361504632834.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-3466038607874.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-4071628996610.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-3895535337474.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1000727379970.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-3066606649346.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-2443836391426.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-4256312590338.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1602022801410.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1005022347266.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-2658584756226.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1159641169922.jpg
[1508250178] media.py:mediaChangesZip(): +media zip, paste-1791001362434.jpg
[1508250182] sync.py:sync(): processed 14, serverUsn 673, clientUsn 659
[1508250182] sync.py:sync(): lastUsn in sync, updating local
[1508315208] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508315208] sched.py:_updateCutoff(): 194, 1508349600
[1508315208] sched.py:unburyCards(): []
[1508315209] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508250176236,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508315210,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 55}
[1508315209] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508315208626,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508315209,
 'usn': 55}
[1508315211] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508315211] sync.py:newerRows(): cards, []
[1508315211] sync.py:newerRows(): notes, []
[1508315211] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508315212] sync.py:sync(): findChanges
[1508315213] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508315213] sched.py:_updateCutoff(): 194, 1508349600
[1508325079] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508325079] sched.py:_updateCutoff(): 194, 1508349600
[1508325081] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508315212111,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508325081,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 56}
[1508325081] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508320147258,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508325081,
 'usn': 56}
[1508325082] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508325082] sync.py:newerRows(): cards, []
[1508325082] sync.py:newerRows(): notes, []
[1508325082] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508325083] sync.py:sync(): findChanges
[1508477195] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508477195] sched.py:_updateCutoff(): 196, 1508522400
[1508477195] sched.py:unburyCards(): []
[1508477196] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508325083231,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508477197,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 57}
[1508477196] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508477195424,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508477196,
 'usn': 57}
[1508477197] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508477197] sync.py:newerRows(): cards, []
[1508477197] sync.py:newerRows(): notes, []
[1508477197] sync.py:sync(): client chunk, {'cards': [(1508325174211,
            1508325090627,
            1508325121697,
            0,
            1508325174,
            57,
            0,
            0,
            1355,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508325240342,
            1508325174387,
            1508325121697,
            0,
            1508325240,
            57,
            0,
            0,
            1356,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508325321814,
            1508325240346,
            1508325121697,
            0,
            1508325321,
            57,
            0,
            0,
            1357,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508326419771,
            1508325321817,
            1508325121697,
            0,
            1508326419,
            57,
            0,
            0,
            1358,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508326710444,
            1508326419781,
            1508325121697,
            0,
            1508326710,
            57,
            0,
            0,
            1359,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508327432508,
            1508326710449,
            1508325121697,
            0,
            1508327432,
            57,
            0,
            0,
            1360,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508327458673,
            1508327432516,
            1508325121697,
            0,
            1508327458,
            57,
            0,
            0,
            1361,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508327535276,
            1508327458678,
            1508325121697,
            0,
            1508327535,
            57,
            0,
            0,
            1362,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508328513584,
            1508327535280,
            1508325121697,
            0,
            1508328513,
            57,
            0,
            0,
            1363,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508325090627,
            u'eKz:}lbno5',
            1491545041634,
            1508325174,
            57,
            u'',
            u'What is a Markov Decision Process used for?\x1f<img src="paste-1584842932226.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508325174387,
            u's!aU6A$a35',
            1491545041634,
            1508325240,
            57,
            u'',
            u'What is the order of an MDP normally?\x1fIt\'s normally first order markovian<div><br /></div><div><img src="paste-1795296329730.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508325240346,
            u'ECkpcm|h0D',
            1491545041634,
            1508325321,
            57,
            u'',
            u'How do you define an MDP problem?\x1f<img src="paste-1958505086978.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508325321817,
            u'IspX(nLg`P',
            1491545041634,
            1508326419,
            57,
            u'',
            u'For an agent with 4 actions, how many transition matrices do you need?\x1f1 for each action, so 4\x1f',
            u'',
            u'',
            0,
            u''),
           (1508326419781,
            u'w/H9iu(QFq',
            1491545041634,
            1508326710,
            57,
            u'',
            u'Do we nomally explcitly represent the state space?\x1fNo\x1f',
            u'',
            u'',
            0,
            u''),
           (1508326710449,
            u'G_=2f[f.@A',
            1491545041634,
            1508327432,
            57,
            u'',
            u'How do you solve an MDP?\x1f<img src="paste-3822520893442.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508327432516,
            u'esE?P!SK=9',
            1491545041634,
            1508327458,
            57,
            u'',
            u'How do you use the policy?\x1f<img src="paste-4088808865794.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508327458678,
            u'JuWwbv*R>j',
            1491545041634,
            1508327535,
            57,
            u'',
            u'What is the goal of an MDP agent?\x1f<img src="paste-4355096838146.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508327535280,
            u'iB`y+FM!Ib',
            1491545041634,
            1508328513,
            57,
            u'',
            u'What is an optimal policy?\x1f<img src="paste-5046586572802.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1508477198] sync.py:sync(): findChanges
[1508477200] sync.py:sync(): last local usn is 673
[1508477200] sync.py:sync(): mediaChanges resp count 0
[1508477200] media.py:mediaChangesZip(): +media zip, paste-5046586572802.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-1958505086978.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-4355096838146.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-1795296329730.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-1584842932226.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-4088808865794.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-5192615460866.jpg
[1508477200] media.py:mediaChangesZip(): +media zip, paste-3822520893442.jpg
[1508477202] sync.py:sync(): processed 8, serverUsn 681, clientUsn 673
[1508477202] sync.py:sync(): lastUsn in sync, updating local
[1508477202] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508477202] sched.py:_updateCutoff(): 196, 1508522400
[1508477202] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508477202] sched.py:_updateCutoff(): 196, 1508522400
[1508477203] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508477198599,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508477204,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 58}
[1508477203] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508477198599,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508477203,
 'usn': 58}
[1508477203] sync.py:sync(): no changes
[1508477203] sync.py:sync(): findChanges
[1508478367] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508478367] sched.py:_updateCutoff(): 196, 1508522400
[1508478369] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508477198599,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508478369,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 58}
[1508478369] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508477198599,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508478369,
 'usn': 58}
[1508478369] sync.py:sync(): no changes
[1508478369] sync.py:sync(): findChanges
[1508478370] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508478370] sched.py:_updateCutoff(): 196, 1508522400
[1508478371] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508478371] sched.py:_updateCutoff(): 196, 1508522400
[1508478372] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508477198599,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508478372,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 58}
[1508478372] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508477198599,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508478372,
 'usn': 58}
[1508478372] sync.py:sync(): no changes
[1508478372] sync.py:sync(): findChanges
[1508684564] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508684564] sched.py:_updateCutoff(): 198, 1508695200
[1508684564] sched.py:unburyCards(): []
[1508684566] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508477198599,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508684566,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 58}
[1508684566] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508684564767,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508684566,
 'usn': 58}
[1508684567] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508684567] sync.py:newerRows(): cards, []
[1508684567] sync.py:newerRows(): notes, []
[1508684567] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508684568] sync.py:sync(): findChanges
[1508684569] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508684569] sched.py:_updateCutoff(): 198, 1508695200
[1508684570] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508684570] sched.py:_updateCutoff(): 198, 1508695200
[1508684571] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508684568230,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508684572,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 59}
[1508684571] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508684568230,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508684571,
 'usn': 59}
[1508684571] sync.py:sync(): no changes
[1508684571] sync.py:sync(): findChanges
[1508685385] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508685385] sched.py:_updateCutoff(): 198, 1508695200
[1508685386] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508684568230,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508685386,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 59}
[1508685386] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508684568230,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508685386,
 'usn': 59}
[1508685386] sync.py:sync(): no changes
[1508685386] sync.py:sync(): findChanges
[1508820179] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508820179] sched.py:_updateCutoff(): 200, 1508868000
[1508820179] sched.py:unburyCards(): []
[1508820181] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508684568230,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508820182,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 59}
[1508820181] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508820179691,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508820181,
 'usn': 59}
[1508820183] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508820183] sync.py:newerRows(): cards, []
[1508820183] sync.py:newerRows(): notes, []
[1508820183] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508820184] sync.py:sync(): findChanges
[1508820186] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508820186] sched.py:_updateCutoff(): 200, 1508868000
[1508820265] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1355, 'factor': 0, 'flags': 0, 'id': 1508325174211, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508325174, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820271] sched.py:answerCard(): 
[1508820271] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820947, 'factor': 0, 'flags': 0, 'id': 1508325174211, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820271, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820271] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1356, 'factor': 0, 'flags': 0, 'id': 1508325240342, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508325240, 'nid': 1508325174387, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820272] sched.py:answerCard(): 
[1508820272] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820957, 'factor': 0, 'flags': 0, 'id': 1508325240342, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820272, 'nid': 1508325174387, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820272] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1357, 'factor': 0, 'flags': 0, 'id': 1508325321814, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508325321, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820293] sched.py:answerCard(): 
[1508820293] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820356, 'factor': 0, 'flags': 0, 'id': 1508325321814, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1508820293, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820293] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1358, 'factor': 0, 'flags': 0, 'id': 1508326419771, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508326419, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820298] sched.py:answerCard(): 
[1508820298] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820922, 'factor': 0, 'flags': 0, 'id': 1508326419771, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820298, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820298] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1359, 'factor': 0, 'flags': 0, 'id': 1508326710444, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508326710, 'nid': 1508326419781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820303] sched.py:answerCard(): 
[1508820303] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820989, 'factor': 0, 'flags': 0, 'id': 1508326710444, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820303, 'nid': 1508326419781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820303] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1360, 'factor': 0, 'flags': 0, 'id': 1508327432508, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508327432, 'nid': 1508326710449, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820329] sched.py:answerCard(): 
[1508820329] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508821010, 'factor': 0, 'flags': 0, 'id': 1508327432508, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820329, 'nid': 1508326710449, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820329] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1361, 'factor': 0, 'flags': 0, 'id': 1508327458673, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508327458, 'nid': 1508327432516, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820345] sched.py:answerCard(): 
[1508820345] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508820975, 'factor': 0, 'flags': 0, 'id': 1508327458673, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820345, 'nid': 1508327432516, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820345] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1362, 'factor': 0, 'flags': 0, 'id': 1508327535276, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508327535, 'nid': 1508327458678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820386] sched.py:answerCard(): 
[1508820386] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508821068, 'factor': 0, 'flags': 0, 'id': 1508327535276, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820386, 'nid': 1508327458678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820386] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820356, 'factor': 0, 'flags': 0, 'id': 1508325321814, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1508820293, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1508820392] sched.py:answerCard(): 
[1508820392] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508821110, 'factor': 0, 'flags': 0, 'id': 1508325321814, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820392, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1508820392] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1363, 'factor': 0, 'flags': 0, 'id': 1508328513584, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508328513, 'nid': 1508327535280, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 57}
[1508820425] sched.py:answerCard(): 
[1508820425] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1508821042, 'factor': 0, 'flags': 0, 'id': 1508328513584, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820425, 'nid': 1508327535280, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1508820425] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820922, 'factor': 0, 'flags': 0, 'id': 1508326419771, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820298, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1508820426] sched.py:answerCard(): 
[1508820426] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 201, 'factor': 2500, 'flags': 0, 'id': 1508326419771, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1508820426, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1508820426] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820947, 'factor': 0, 'flags': 0, 'id': 1508325174211, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820271, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1508820428] sched.py:answerCard(): 
[1508820428] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 201, 'factor': 2500, 'flags': 0, 'id': 1508325174211, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1508820428, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1508820428] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820957, 'factor': 0, 'flags': 0, 'id': 1508325240342, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820272, 'nid': 1508325174387, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1508820535] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508820535] sched.py:_updateCutoff(): 200, 1508868000
[1508820536] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508820183991,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508820536,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 60}
[1508820536] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508820535305,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508820536,
 'usn': 60}
[1508820537] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508820537] sync.py:newerRows(): cards, []
[1508820537] sync.py:newerRows(): notes, []
[1508820537] sync.py:sync(): client chunk, {'cards': [(1508325174211,
            1508325090627,
            1508325121697,
            0,
            1508820428,
            60,
            2,
            2,
            201,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508325240342,
            1508325174387,
            1508325121697,
            0,
            1508820272,
            60,
            1,
            1,
            1508820957,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508325321814,
            1508325240346,
            1508325121697,
            0,
            1508820392,
            60,
            1,
            1,
            1508821110,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508326419771,
            1508325321817,
            1508325121697,
            0,
            1508820426,
            60,
            2,
            2,
            201,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508326710444,
            1508326419781,
            1508325121697,
            0,
            1508820303,
            60,
            1,
            1,
            1508820989,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327432508,
            1508326710449,
            1508325121697,
            0,
            1508820329,
            60,
            1,
            1,
            1508821010,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327458673,
            1508327432516,
            1508325121697,
            0,
            1508820345,
            60,
            1,
            1,
            1508820975,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327535276,
            1508327458678,
            1508325121697,
            0,
            1508820386,
            60,
            1,
            1,
            1508821068,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508328513584,
            1508327535280,
            1508325121697,
            0,
            1508820425,
            60,
            1,
            1,
            1508821042,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508326710449,
            u'G_=2f[f.@A',
            1491545041634,
            1508820322,
            60,
            u'',
            u'What does it mean to solve an MDP?\x1f<img src="paste-3822520893442.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508327458678,
            u'JuWwbv*R>j',
            1491545041634,
            1508820385,
            60,
            u'',
            u'What is the goal of an MDP agent?\x1f<img src="paste-4355096838146.jpg" /><div><br /></div><div>The agent will try to maximize it\'s reward, and the way it does that is by following a policy</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508327535280,
            u'iB`y+FM!Ib',
            1491545041634,
            1508820423,
            60,
            u'',
            u'What is an optimal policy?\x1f<div>It tells us what we need to do given a particular state.</div><img src="paste-5046586572802.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1508820271201, 1508325174211, 60, 2, -600, -60, 0, 5543, 0),
            (1508820272739, 1508325240342, 60, 2, -600, -60, 0, 1533, 0),
            (1508820293182, 1508325321814, 60, 1, -60, -60, 0, 20440, 0),
            (1508820298137, 1508326419771, 60, 2, -600, -60, 0, 4952, 0),
            (1508820303434, 1508326710444, 60, 2, -600, -60, 0, 5295, 0),
            (1508820329294, 1508327432508, 60, 2, -600, -60, 0, 4333, 0),
            (1508820345274, 1508327458673, 60, 2, -600, -60, 0, 15976, 0),
            (1508820386997, 1508327535276, 60, 2, -600, -60, 0, 1220, 0),
            (1508820392718, 1508325321814, 60, 2, -600, -60, 0, 5717, 0),
            (1508820425383, 1508328513584, 60, 2, -600, -60, 0, 1494, 0),
            (1508820426583, 1508326419771, 60, 2, 1, -600, 2500, 1196, 0),
            (1508820428742, 1508325174211, 60, 2, 1, -600, 2500, 2156, 0)]}
[1508820538] sync.py:sync(): findChanges
[1508820550] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508820550] sched.py:_updateCutoff(): 200, 1508868000
[1508820551] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508820538645,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508820552,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 61}
[1508820551] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508820538645,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508820551,
 'usn': 61}
[1508820551] sync.py:sync(): no changes
[1508820551] sync.py:sync(): findChanges
[1508820553] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508820553] sched.py:_updateCutoff(): 200, 1508868000
[1508820844] cards.py:flush(): {'crt': 1508820844, 'data': '', 'did': 1508325121697, 'due': 1364, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508820844, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508822319] cards.py:flush(): {'crt': 1508822319, 'data': '', 'did': 1508325121697, 'due': 1365, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822319, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508822407] cards.py:flush(): {'crt': 1508822407, 'data': '', 'did': 1508325121697, 'due': 1366, 'factor': 0, 'flags': 0, 'id': 1508822407730, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822407, 'nid': 1508822320007, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508822455] cards.py:flush(): {'crt': 1508822455, 'data': '', 'did': 1508325121697, 'due': 1367, 'factor': 0, 'flags': 0, 'id': 1508822455386, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822455, 'nid': 1508822407735, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508822543] cards.py:flush(): {'crt': 1508822543, 'data': '', 'did': 1508325121697, 'due': 1368, 'factor': 0, 'flags': 0, 'id': 1508822543718, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822543, 'nid': 1508822455391, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508822733] cards.py:flush(): {'crt': 1508822733, 'data': '', 'did': 1508325121697, 'due': 1369, 'factor': 0, 'flags': 0, 'id': 1508822733373, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822733, 'nid': 1508822621166, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508824473] cards.py:flush(): {'crt': 1508824473, 'data': '', 'did': 1508325121697, 'due': 1370, 'factor': 0, 'flags': 0, 'id': 1508824473385, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508824473, 'nid': 1508822733485, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508824535] cards.py:flush(): {'crt': 1508824535, 'data': '', 'did': 1508325121697, 'due': 1371, 'factor': 0, 'flags': 0, 'id': 1508824535801, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508824535, 'nid': 1508824473393, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508825196] cards.py:flush(): {'crt': 1508825196, 'data': '', 'did': 1508325121697, 'due': 1372, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825196, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508825596] cards.py:flush(): {'crt': 1508825596, 'data': '', 'did': 1508325121697, 'due': 1373, 'factor': 0, 'flags': 0, 'id': 1508825596545, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825596, 'nid': 1508825196960, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508825736] cards.py:flush(): {'crt': 1508825736, 'data': '', 'did': 1508325121697, 'due': 1374, 'factor': 0, 'flags': 0, 'id': 1508825736407, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825736, 'nid': 1508825596554, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1508831095] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508831095] sched.py:_updateCutoff(): 200, 1508868000
[1508831096] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508820538645,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508831096,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 61}
[1508831096] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508831093378,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508831096,
 'usn': 61}
[1508831097] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508831097] sync.py:newerRows(): cards, []
[1508831097] sync.py:newerRows(): notes, []
[1508831097] sync.py:sync(): client chunk, {'cards': [(1508820844058,
            1508820770496,
            1508325121697,
            0,
            1508820844,
            61,
            0,
            0,
            1364,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508822319996,
            1508820844201,
            1508325121697,
            0,
            1508822319,
            61,
            0,
            0,
            1365,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508822407730,
            1508822320007,
            1508325121697,
            0,
            1508822407,
            61,
            0,
            0,
            1366,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508822455386,
            1508822407735,
            1508325121697,
            0,
            1508822455,
            61,
            0,
            0,
            1367,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508822543718,
            1508822455391,
            1508325121697,
            0,
            1508822543,
            61,
            0,
            0,
            1368,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508822733373,
            1508822621166,
            1508325121697,
            0,
            1508822733,
            61,
            0,
            0,
            1369,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508824473385,
            1508822733485,
            1508325121697,
            0,
            1508824473,
            61,
            0,
            0,
            1370,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508824535801,
            1508824473393,
            1508325121697,
            0,
            1508824535,
            61,
            0,
            0,
            1371,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508825196836,
            1508824622753,
            1508325121697,
            0,
            1508825196,
            61,
            0,
            0,
            1372,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508825596545,
            1508825196960,
            1508325121697,
            0,
            1508825596,
            61,
            0,
            0,
            1373,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1508825736407,
            1508825596554,
            1508325121697,
            0,
            1508825736,
            61,
            0,
            0,
            1374,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508820770496,
            u'B92=]/|`=H',
            1491545041634,
            1508820844,
            61,
            u'',
            u'What are the "types" of best policy?\x1f<img src="paste-4075923963906.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508820844201,
            u'A|o-.^.55s',
            1491545041634,
            1508822319,
            61,
            u'',
            u'What is the value of a policy?\x1f<img src="paste-4509715660802.jpg" /><div>Gamma is discount factor (to prevent that value from being infinity so it\'s between 0 and 1)</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508822320007,
            u'zzB,6pq?hK',
            1491545041634,
            1508822407,
            61,
            u'',
            u'What is the impact of a gamma on the reward function?\x1f<img src="paste-4952097292290.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508822407735,
            u'j/pbI9%?vD',
            1491545041634,
            1508822455,
            61,
            u'',
            u"Do we normally have different reward functions for different time steps in infinite horizon?\x1fNo, it's normally too expensive\x1f",
            u'',
            u'',
            0,
            u''),
           (1508822455391,
            u'd9I^R454%9',
            1491545041634,
            1508822614,
            61,
            u'',
            u'What is an optimal policy with respect to the value function?\x1f<img src="paste-5317169512450.jpg" /><div><img src="paste-6635724472322.jpg" /></div><div>called Bellman equatio</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508822621166,
            u'v;r-K7=m&K',
            1491545041634,
            1508822733,
            61,
            u'',
            u'How can we compute an offline solution to MDP?\x1f<img src="paste-6897717477378.jpg" /><div><br /></div><div>It\'s normally pretty slow overall, you normally need a combination of offline and online (we can\'t normally store the entire state space) or just online</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508822733485,
            u'dyNK7lwc&)',
            1491545041634,
            1508824473,
            61,
            u'',
            u'What are the offline ways of solving an MDP?\x1fValue iteration<div>Policy iteration</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508824473393,
            u'C9QR}|xB$D',
            1491545041634,
            1508824619,
            61,
            u'',
            u'What is value iteration?\x1f<img src="paste-8997956485122.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508824622753,
            u'enQ)P^(O#h',
            1491545041634,
            1508825196,
            61,
            u'',
            u'How long does it take to get an approximately optimal solution to a value iteration computation?\x1f<img src="paste-9324373999618.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508825196960,
            u'tE4TXtwS.=',
            1491545041634,
            1508825596,
            61,
            u'',
            u'What do we do for large state space VI?\x1f<img src="paste-10063108374530.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508825596554,
            u'Eo##Vs2^k<',
            1491545041634,
            1508825736,
            61,
            u'',
            u'What is policy iteration?\x1f<img src="paste-10831907520514.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1508831098] sync.py:sync(): findChanges
[1508831100] sync.py:sync(): last local usn is 681
[1508831100] sync.py:sync(): mediaChanges resp count 0
[1508831100] media.py:mediaChangesZip(): +media zip, paste-9324373999618.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-8997956485122.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-4952097292290.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-5317169512450.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-4509715660802.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-6635724472322.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-10063108374530.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-5330054414338.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-10831907520514.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-7572027342850.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-6897717477378.jpg
[1508831100] media.py:mediaChangesZip(): +media zip, paste-4075923963906.jpg
[1508831102] sync.py:sync(): processed 12, serverUsn 693, clientUsn 681
[1508831102] sync.py:sync(): lastUsn in sync, updating local
[1508836068] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508836068] sched.py:_updateCutoff(): 200, 1508868000
[1508836070] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508831098439,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508836070,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 62}
[1508836070] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508831098439,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508836070,
 'usn': 62}
[1508836070] sync.py:sync(): no changes
[1508836070] sync.py:sync(): findChanges
[1508836071] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508836071] sched.py:_updateCutoff(): 200, 1508868000
[1508836072] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508836072] sched.py:_updateCutoff(): 200, 1508868000
[1508836073] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508831098439,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508836074,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 62}
[1508836073] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508831098439,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508836073,
 'usn': 62}
[1508836073] sync.py:sync(): no changes
[1508836073] sync.py:sync(): findChanges
[1508849511] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508849511] sched.py:_updateCutoff(): 200, 1508868000
[1508849512] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508831098439,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508849513,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 62}
[1508849512] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508831098439,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508849512,
 'usn': 62}
[1508849512] sync.py:sync(): no changes
[1508849512] sync.py:sync(): findChanges
[1508849514] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508849514] sched.py:_updateCutoff(): 200, 1508868000
[1508849514] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508849514] sched.py:_updateCutoff(): 200, 1508868000
[1508849516] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508831098439,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508849516,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 62}
[1508849516] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508831098439,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508849516,
 'usn': 62}
[1508849516] sync.py:sync(): no changes
[1508849516] sync.py:sync(): findChanges
[1508916807] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1508916807] sched.py:_updateCutoff(): 201, 1508954400
[1508916807] sched.py:unburyCards(): []
[1508916808] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508831098439,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1508916808,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 62}
[1508916808] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1508916807088,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1508916808,
 'usn': 62}
[1508916809] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1508916809] sync.py:newerRows(): cards, []
[1508916809] sync.py:newerRows(): notes, []
[1508916809] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1508916810] sync.py:sync(): findChanges
[1509163667] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509163667] sched.py:_updateCutoff(): 204, 1509213600
[1509163667] sched.py:unburyCards(): []
[1509163668] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1508916810430,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509163668,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 63}
[1509163668] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509163667155,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509163668,
 'usn': 63}
[1509163669] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509163669] sync.py:newerRows(): cards, []
[1509163669] sync.py:newerRows(): notes, []
[1509163669] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1509163670] sync.py:sync(): findChanges
[1509163671] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509163671] sched.py:_updateCutoff(): 204, 1509213600
[1509163789] cards.py:flush(): {'crt': 1509163789, 'data': '', 'did': 1508325121697, 'due': 1375, 'factor': 0, 'flags': 0, 'id': 1509163789923, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509163789, 'nid': 1509163761999, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509163863] cards.py:flush(): {'crt': 1509163863, 'data': '', 'did': 1508325121697, 'due': 1376, 'factor': 0, 'flags': 0, 'id': 1509163863136, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509163863, 'nid': 1509163790114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509164137] cards.py:flush(): {'crt': 1509164137, 'data': '', 'did': 1508325121697, 'due': 1377, 'factor': 0, 'flags': 0, 'id': 1509164137933, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509164137, 'nid': 1509163863141, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509164678] cards.py:flush(): {'crt': 1509164678, 'data': '', 'did': 1508325121697, 'due': 1378, 'factor': 0, 'flags': 0, 'id': 1509164678593, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509164678, 'nid': 1509164137950, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509164792] cards.py:flush(): {'crt': 1509164792, 'data': '', 'did': 1508325121697, 'due': 1379, 'factor': 0, 'flags': 0, 'id': 1509164792016, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509164792, 'nid': 1509164678602, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509173553] cards.py:flush(): {'crt': 1509173553, 'data': '', 'did': 1508325121697, 'due': 1380, 'factor': 0, 'flags': 0, 'id': 1509173553079, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509173553, 'nid': 1509164792019, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509174627] cards.py:flush(): {'crt': 1509174627, 'data': '', 'did': 1508325121697, 'due': 1381, 'factor': 0, 'flags': 0, 'id': 1509174627339, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509174627, 'nid': 1509173553087, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509176046] cards.py:flush(): {'crt': 1509176046, 'data': '', 'did': 1508325121697, 'due': 1382, 'factor': 0, 'flags': 0, 'id': 1509176046543, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509176046, 'nid': 1509174627347, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509176274] cards.py:flush(): {'crt': 1509176274, 'data': '', 'did': 1508325121697, 'due': 1383, 'factor': 0, 'flags': 0, 'id': 1509176274407, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509176274, 'nid': 1509176086048, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509177172] cards.py:flush(): {'crt': 1509177172, 'data': '', 'did': 1508325121697, 'due': 1384, 'factor': 0, 'flags': 0, 'id': 1509177172555, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509177172, 'nid': 1509176288623, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178222] cards.py:flush(): {'crt': 1509178222, 'data': '', 'did': 1508325121697, 'due': 1385, 'factor': 0, 'flags': 0, 'id': 1509178222290, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178222, 'nid': 1509177172675, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178285] cards.py:flush(): {'crt': 1509178285, 'data': '', 'did': 1508325121697, 'due': 1386, 'factor': 0, 'flags': 0, 'id': 1509178285663, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178285, 'nid': 1509178222297, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178344] cards.py:flush(): {'crt': 1509178344, 'data': '', 'did': 1508325121697, 'due': 1387, 'factor': 0, 'flags': 0, 'id': 1509178344246, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178344, 'nid': 1509178285666, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178499] cards.py:flush(): {'crt': 1509178499, 'data': '', 'did': 1508325121697, 'due': 1388, 'factor': 0, 'flags': 0, 'id': 1509178499348, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178499, 'nid': 1509178344248, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178729] cards.py:flush(): {'crt': 1509178729, 'data': '', 'did': 1508325121697, 'due': 1389, 'factor': 0, 'flags': 0, 'id': 1509178729835, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178729, 'nid': 1509178499351, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509178968] cards.py:flush(): {'crt': 1509178968, 'data': '', 'did': 1509178930435, 'due': 1390, 'factor': 0, 'flags': 0, 'id': 1509178968303, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178968, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509179428] cards.py:flush(): {'crt': 1509179428, 'data': '', 'did': 1509178930435, 'due': 1391, 'factor': 0, 'flags': 0, 'id': 1509179428263, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509179428, 'nid': 1509178968416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509179552] cards.py:flush(): {'crt': 1509179552, 'data': '', 'did': 1509178930435, 'due': 1392, 'factor': 0, 'flags': 0, 'id': 1509179552419, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509179552, 'nid': 1509179428270, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509181352] cards.py:flush(): {'crt': 1509181352, 'data': '', 'did': 1509178930435, 'due': 1393, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509181352, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509185872] cards.py:flush(): {'crt': 1509185872, 'data': '', 'did': 1508325121697, 'due': 1394, 'factor': 0, 'flags': 0, 'id': 1509185872375, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509185872, 'nid': 1509185853560, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509185888] cards.py:flush(): {'crt': 1509185888, 'data': '', 'did': 1508325121697, 'due': 1395, 'factor': 0, 'flags': 0, 'id': 1509185888419, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509185888, 'nid': 1509185872503, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509186228] cards.py:flush(): {'crt': 1509186228, 'data': '', 'did': 1508325121697, 'due': 1396, 'factor': 0, 'flags': 0, 'id': 1509186228296, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509186228, 'nid': 1509185888424, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509186278] cards.py:flush(): {'crt': 1509186278, 'data': '', 'did': 1508325121697, 'due': 1397, 'factor': 0, 'flags': 0, 'id': 1509186278380, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509186278, 'nid': 1509186228305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509186542] cards.py:flush(): {'crt': 1509186542, 'data': '', 'did': 1508325121697, 'due': 1398, 'factor': 0, 'flags': 0, 'id': 1509186542159, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509186542, 'nid': 1509186278384, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509186857] cards.py:flush(): {'crt': 1509186857, 'data': '', 'did': 1508325121697, 'due': 1399, 'factor': 0, 'flags': 0, 'id': 1509186857138, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509186857, 'nid': 1509186832864, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509188977] cards.py:flush(): {'crt': 1509188977, 'data': '', 'did': 1508325121697, 'due': 1400, 'factor': 0, 'flags': 0, 'id': 1509188977011, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509188977, 'nid': 1509186857257, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509189107] cards.py:flush(): {'crt': 1509189107, 'data': '', 'did': 1508325121697, 'due': 1401, 'factor': 0, 'flags': 0, 'id': 1509189107197, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509189107, 'nid': 1509189041403, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509189142] cards.py:flush(): {'crt': 1509189142, 'data': '', 'did': 1508325121697, 'due': 1402, 'factor': 0, 'flags': 0, 'id': 1509189142322, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509189142, 'nid': 1509189107311, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509189369] cards.py:flush(): {'crt': 1509189369, 'data': '', 'did': 1508325121697, 'due': 1403, 'factor': 0, 'flags': 0, 'id': 1509189369947, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509189369, 'nid': 1509189142328, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509193463] cards.py:flush(): {'crt': 1509193463, 'data': '', 'did': 1508325121697, 'due': 1404, 'factor': 0, 'flags': 0, 'id': 1509193463785, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509193463, 'nid': 1509193431361, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509193488] cards.py:flush(): {'crt': 1509193488, 'data': '', 'did': 1508325121697, 'due': 1405, 'factor': 0, 'flags': 0, 'id': 1509193488590, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509193488, 'nid': 1509193463891, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509193502] cards.py:flush(): {'crt': 1509193502, 'data': '', 'did': 1508325121697, 'due': 1406, 'factor': 0, 'flags': 0, 'id': 1509193502162, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509193502, 'nid': 1509193488597, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509193678] cards.py:flush(): {'crt': 1509193678, 'data': '', 'did': 1508325121697, 'due': 1407, 'factor': 0, 'flags': 0, 'id': 1509193678442, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509193678, 'nid': 1509193502169, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509196033] cards.py:flush(): {'crt': 1509196033, 'data': '', 'did': 1508325121697, 'due': 1408, 'factor': 0, 'flags': 0, 'id': 1509196033151, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509196033, 'nid': 1509195929439, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509196301] cards.py:flush(): {'crt': 1509196301, 'data': '', 'did': 1508325121697, 'due': 1409, 'factor': 0, 'flags': 0, 'id': 1509196301076, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509196301, 'nid': 1509196033259, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509196473] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509196473] sched.py:_updateCutoff(): 204, 1509213600
[1509196474] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509163670341,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509196474,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 64}
[1509196474] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509196472956,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509196474,
 'usn': 64}
[1509196475] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509196475] sync.py:newerRows(): cards, []
[1509196475] sync.py:newerRows(): notes, []
[1509196475] sync.py:sync(): client chunk, {'cards': [(1509163789923,
            1509163761999,
            1508325121697,
            0,
            1509163789,
            64,
            0,
            0,
            1375,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509163863136,
            1509163790114,
            1508325121697,
            0,
            1509163863,
            64,
            0,
            0,
            1376,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509164137933,
            1509163863141,
            1508325121697,
            0,
            1509164137,
            64,
            0,
            0,
            1377,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509164678593,
            1509164137950,
            1508325121697,
            0,
            1509164678,
            64,
            0,
            0,
            1378,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509164792016,
            1509164678602,
            1508325121697,
            0,
            1509164792,
            64,
            0,
            0,
            1379,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509173553079,
            1509164792019,
            1508325121697,
            0,
            1509173553,
            64,
            0,
            0,
            1380,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509174627339,
            1509173553087,
            1508325121697,
            0,
            1509174627,
            64,
            0,
            0,
            1381,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509176046543,
            1509174627347,
            1508325121697,
            0,
            1509176046,
            64,
            0,
            0,
            1382,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509176274407,
            1509176086048,
            1508325121697,
            0,
            1509176274,
            64,
            0,
            0,
            1383,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509177172555,
            1509176288623,
            1508325121697,
            0,
            1509177172,
            64,
            0,
            0,
            1384,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178222290,
            1509177172675,
            1508325121697,
            0,
            1509178222,
            64,
            0,
            0,
            1385,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178285663,
            1509178222297,
            1508325121697,
            0,
            1509178285,
            64,
            0,
            0,
            1386,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178344246,
            1509178285666,
            1508325121697,
            0,
            1509178344,
            64,
            0,
            0,
            1387,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178499348,
            1509178344248,
            1508325121697,
            0,
            1509178499,
            64,
            0,
            0,
            1388,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178729835,
            1509178499351,
            1508325121697,
            0,
            1509178729,
            64,
            0,
            0,
            1389,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509178968303,
            1509178911360,
            1509178930435,
            0,
            1509178968,
            64,
            0,
            0,
            1390,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509179428263,
            1509178968416,
            1509178930435,
            0,
            1509179428,
            64,
            0,
            0,
            1391,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509179552419,
            1509179428270,
            1509178930435,
            0,
            1509179552,
            64,
            0,
            0,
            1392,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509181352017,
            1509179570873,
            1509178930435,
            0,
            1509181352,
            64,
            0,
            0,
            1393,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509185872375,
            1509185853560,
            1508325121697,
            0,
            1509185872,
            64,
            0,
            0,
            1394,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509185888419,
            1509185872503,
            1508325121697,
            0,
            1509185888,
            64,
            0,
            0,
            1395,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509186228296,
            1509185888424,
            1508325121697,
            0,
            1509186228,
            64,
            0,
            0,
            1396,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509186278380,
            1509186228305,
            1508325121697,
            0,
            1509186278,
            64,
            0,
            0,
            1397,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509186542159,
            1509186278384,
            1508325121697,
            0,
            1509186542,
            64,
            0,
            0,
            1398,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509186857138,
            1509186832864,
            1508325121697,
            0,
            1509186857,
            64,
            0,
            0,
            1399,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509188977011,
            1509186857257,
            1508325121697,
            0,
            1509188977,
            64,
            0,
            0,
            1400,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509189107197,
            1509189041403,
            1508325121697,
            0,
            1509189107,
            64,
            0,
            0,
            1401,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509189142322,
            1509189107311,
            1508325121697,
            0,
            1509189142,
            64,
            0,
            0,
            1402,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509189369947,
            1509189142328,
            1508325121697,
            0,
            1509189369,
            64,
            0,
            0,
            1403,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509193463785,
            1509193431361,
            1508325121697,
            0,
            1509193463,
            64,
            0,
            0,
            1404,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509193488590,
            1509193463891,
            1508325121697,
            0,
            1509193488,
            64,
            0,
            0,
            1405,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509193502162,
            1509193488597,
            1508325121697,
            0,
            1509193502,
            64,
            0,
            0,
            1406,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509193678442,
            1509193502169,
            1508325121697,
            0,
            1509193678,
            64,
            0,
            0,
            1407,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509196033151,
            1509195929439,
            1508325121697,
            0,
            1509196033,
            64,
            0,
            0,
            1408,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509196301076,
            1509196033259,
            1508325121697,
            0,
            1509196301,
            64,
            0,
            0,
            1409,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1509163761999,
            u's5+3ha!%87',
            1491545041634,
            1509163789,
            64,
            u'',
            u'What are the two ways of computing an online solution?\x1fReal-time Dynamic Programming (RTDP)<div>Monte Carlo Tree Search (MCTS)</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509163790114,
            u'ICTyjvBqr;',
            1491545041634,
            1509163863,
            64,
            u'',
            u'What is the difference between an offline and an online solution?\x1fAn offline solution contructs a map you just look up<div>An online solution is computed as you progress</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509163863141,
            u'mSXxGcuX<V',
            1491545041634,
            1509164137,
            64,
            u'',
            u'Does Value iteration result in optimal solutions in finite time always?\x1fNo, you end up estiamting msot of the time, which is enough.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509164137950,
            u'Jc:s}J>)[q',
            1491545041634,
            1509164678,
            64,
            u'',
            u'What are the benefits of an online computation for an MDP?\x1f<img src="paste-2864743186434.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509164678602,
            u'k3U6;tdf>q',
            1491545041634,
            1509164792,
            64,
            u'',
            u'What is Real-time Dynamic Programming (RTDP)\x1f<img src="paste-2976412336130.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509164792019,
            u'J^M,X1[UBP',
            1491545041634,
            1509173553,
            64,
            u'',
            u'What ist he drawback of RTDP?\x1fLocal minima<div><br /></div><div><img src="paste-2972117368834.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509173553087,
            u'p:LDPy[7-9',
            1491545041634,
            1509174627,
            64,
            u'',
            u'What is labelled RTDP?\x1f<img src="paste-5965709574146.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509174627347,
            u'Ghvws`z,:j',
            1491545041634,
            1509176084,
            64,
            u'',
            u'What is Monte Carlo Tree Search?\x1f<img src="paste-7713761263618.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509176086048,
            u'n/<e1mhmv8',
            1491545041634,
            1509176285,
            64,
            u'',
            u'How does Monte Carlo Tree Search work?\x1f<img src="paste-8413840932866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509176288623,
            u'iPy#l&UVw>',
            1491545041634,
            1509177172,
            64,
            u'',
            u'How can we change MCTS for MDP?\x1f<img src="paste-10028748636162.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509177172675,
            u'JD(HUrgllP',
            1491545041634,
            1509178222,
            64,
            u'',
            u'What are the components of a MCTS for MDP?\x1f<img src="paste-10750303141890.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178222297,
            u't~LSm-6ORw',
            1491545041634,
            1509178285,
            64,
            u'',
            u'How do you apply multi-arm bandit to select nodes in MCTS for MD{?\x1f<img src="paste-11003706212354.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178285666,
            u'EBH&Omw)In',
            1491545041634,
            1509178344,
            64,
            u'',
            u'What is UCT?\x1f<img src="paste-11304353923074.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178344248,
            u'kJ5g6(to,c',
            1491545041634,
            1509178499,
            64,
            u'',
            u'What is selection for MCTS for MDP?\x1f<img src="paste-11944304050178.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178499351,
            u'thxUMiIAoE',
            1491545041634,
            1509178729,
            64,
            u'',
            u'What is backpropogation?\x1f<img src="paste-12463995092994.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178911360,
            u'f9(:gEl%m#',
            1491545041634,
            1509178968,
            64,
            u'',
            u'What are the assumptions on class environment for POMDP?\x1f<img src="paste-14194866913282.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509178968416,
            u'vVd3?.v</j',
            1491545041634,
            1509179428,
            64,
            u'',
            u'What is strategy and policy in POMDP?\x1f<img src="paste-14426795147266.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509179428270,
            u'M6Cj.;./;C',
            1491545041634,
            1509179567,
            64,
            u'',
            u'What are the components of a POMDP?\x1f<img src="paste-16033112915970.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509179570873,
            u'FB>MN}SqeE',
            1491545041634,
            1509181352,
            64,
            u'',
            u'What is the value function for POMDP?\x1f<img src="paste-17149804412930.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509185853560,
            u'QkVo+D=j{I',
            1491545041634,
            1509185872,
            64,
            u'',
            u'How does grid world work?\x1f<img src="paste-20551418511362.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509185872503,
            u'JLf9Y[8di;',
            1491545041634,
            1509185888,
            64,
            u'',
            u'Draw the grid world\x1f<img src="paste-20787641712642.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509185888424,
            u'yb@~^arvW2',
            1491545041634,
            1509193269,
            64,
            u'',
            u'Define an MDP\x1f<img src="paste-31151397797890.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509186228305,
            u'D=RtK2<^JQ',
            1491545041634,
            1509186278,
            64,
            u'',
            u'What is a policy?\x1f<img src="paste-21427591839746.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509186278384,
            u'cu*8{lDtp@',
            1491545041634,
            1509186829,
            64,
            u'',
            u'Visualize an optimal policy\x1f<img src="paste-23815593656322.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509186832864,
            u'fxWwAM<h1q',
            1491545041634,
            1509186857,
            64,
            u'',
            u'Do we keep track of our current reward in MDP problems?\x1fNo, reward only matters for current and future states\x1f',
            u'',
            u'',
            0,
            u''),
           (1509186857257,
            u'H4El~^=6#,',
            1491545041634,
            1509188991,
            64,
            u'',
            u'What is a state, a q-state a transition state and a reward function?<div><img src="paste-24721831755778.jpg" /></div>\x1f<img src="paste-26113401159682.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509189041403,
            u'z{2Q%{>f-r',
            1491545041634,
            1509189107,
            64,
            u'',
            u'How should we design utilities of sequences\x1fWe want rewards early<div><br /></div><div>We do this using discounting</div><div><br /></div><div><img src="paste-27230092656642.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509189107311,
            u'Jd)N:Ji;Bu',
            1491545041634,
            1509189142,
            64,
            u'',
            u'How does discounting work?\x1f<img src="paste-27646704484354.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509189142328,
            u'w&Xj<1Q{n%',
            1491545041634,
            1509189369,
            64,
            u'',
            u'What is a stationary preference?\x1f<img src="paste-28071906246658.jpg" /><div><br /></div><div>it just means that regardless of how we start, we will always prefer a certain sequence.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509193431361,
            u'wtLAXW#Xoz',
            1491545041634,
            1509195792,
            64,
            u'',
            u'What is the value of a state?\x1f<img src="paste-33698313404418.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509193463891,
            u'FLko|{0Ur@',
            1491545041634,
            1509193488,
            64,
            u'',
            u'What is the value (utility) of a q-state (s,a)\x1fQ*(s,a) = expected utility starting out having taken action a from state s and acting optimally\x1f',
            u'',
            u'',
            0,
            u''),
           (1509193488597,
            u'D~izbUK[W?',
            1491545041634,
            1509193502,
            64,
            u'',
            u'What is the optimal policy?\x1f\\pi*(s) = optimal action from state s\x1f',
            u'',
            u'',
            0,
            u''),
           (1509193502169,
            u'e:fj_:I7Et',
            1491545041634,
            1509195927,
            64,
            u'',
            u'What are two ways of thinking about optimal policy?\x1f<img src="paste-35231616729090.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509195929439,
            u'cNKJRv,.j[',
            1491545041634,
            1509196033,
            64,
            u'',
            u'Why does VI work?\x1f<img src="paste-35570919145474.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509196033259,
            u'JreteugQ~_',
            1491545041634,
            1509196301,
            64,
            u'',
            u'How does VI algorithm work?\x1f<img src="paste-35983236005890.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1509196476] sync.py:sync(): findChanges
[1509196477] sync.py:sync(): last local usn is 693
[1509196478] sync.py:sync(): mediaChanges resp count 0
[1509196478] media.py:mediaChangesZip(): +media zip, paste-21844203667458.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-11944304050178.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-2864743186434.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-24717536788482.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-7718056230914.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-21427591839746.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-20787641712642.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-16033112915970.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-8413840932866.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-14955076124674.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-12463995092994.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-27230092656642.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-24721831755778.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-20907900796930.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-2972117368834.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-14426795147266.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-11304353923074.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-26113401159682.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-35570919145474.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-8388071129090.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-31151397797890.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-6287832121346.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-32336808771586.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-7713761263618.jpg
[1509196478] media.py:mediaChangesZip(): +media zip, paste-20551418511362.jpg
[1509196480] sync.py:sync(): processed 25, serverUsn 718, clientUsn 693
[1509196480] sync.py:sync(): lastUsn in sync, updating local
[1509196480] media.py:mediaChangesZip(): +media zip, paste-5965709574146.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-17149804412930.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-33698313404418.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-27646704484354.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-11003706212354.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-2976412336130.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-10750303141890.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-35231616729090.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-11300058955778.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-10028748636162.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-14194866913282.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-27526445400066.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-35983236005890.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-28071906246658.jpg
[1509196480] media.py:mediaChangesZip(): +media zip, paste-23815593656322.jpg
[1509196482] sync.py:sync(): processed 15, serverUsn 733, clientUsn 718
[1509196482] sync.py:sync(): lastUsn in sync, updating local
[1509350290] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509350290] sched.py:_updateCutoff(): 206, 1509386400
[1509350290] sched.py:unburyCards(): []
[1509350292] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509196476324,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509350292,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 65}
[1509350292] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509350290847,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509350292,
 'usn': 65}
[1509350293] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509350293] sync.py:newerRows(): cards, []
[1509350293] sync.py:newerRows(): notes, []
[1509350293] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1509350294] sync.py:sync(): findChanges
[1509350295] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509350295] sched.py:_updateCutoff(): 206, 1509386400
[1509350448] cards.py:flush(): {'crt': 1509350448, 'data': '', 'did': 1509350315112, 'due': 1410, 'factor': 0, 'flags': 0, 'id': 1509350448558, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509350448, 'nid': 1509350300068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509351763] cards.py:flush(): {'crt': 1509351763, 'data': '', 'did': 1509350315112, 'due': 1411, 'factor': 0, 'flags': 0, 'id': 1509351763128, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509351763, 'nid': 1509351153677, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352039] cards.py:flush(): {'crt': 1509352039, 'data': '', 'did': 1509350315112, 'due': 1412, 'factor': 0, 'flags': 0, 'id': 1509352039212, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352039, 'nid': 1509351763349, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352066] cards.py:flush(): {'crt': 1509352066, 'data': '', 'did': 1509350315112, 'due': 1413, 'factor': 0, 'flags': 0, 'id': 1509352066634, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352066, 'nid': 1509352039216, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352202] cards.py:flush(): {'crt': 1509352202, 'data': '', 'did': 1509350315112, 'due': 1414, 'factor': 0, 'flags': 0, 'id': 1509352202874, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352202, 'nid': 1509352066645, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352259] cards.py:flush(): {'crt': 1509352259, 'data': '', 'did': 1509350315112, 'due': 1415, 'factor': 0, 'flags': 0, 'id': 1509352259812, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352259, 'nid': 1509352202878, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352285] cards.py:flush(): {'crt': 1509352285, 'data': '', 'did': 1509350315112, 'due': 1416, 'factor': 0, 'flags': 0, 'id': 1509352285035, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352285, 'nid': 1509352259817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352318] cards.py:flush(): {'crt': 1509352318, 'data': '', 'did': 1509350315112, 'due': 1417, 'factor': 0, 'flags': 0, 'id': 1509352318367, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352318, 'nid': 1509352285042, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352364] cards.py:flush(): {'crt': 1509352364, 'data': '', 'did': 1509350315112, 'due': 1418, 'factor': 0, 'flags': 0, 'id': 1509352364093, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352364, 'nid': 1509352318371, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352399] cards.py:flush(): {'crt': 1509352399, 'data': '', 'did': 1509350315112, 'due': 1419, 'factor': 0, 'flags': 0, 'id': 1509352399860, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352399, 'nid': 1509352364097, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352418] cards.py:flush(): {'crt': 1509352418, 'data': '', 'did': 1509350315112, 'due': 1420, 'factor': 0, 'flags': 0, 'id': 1509352418174, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352418, 'nid': 1509352399872, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352489] cards.py:flush(): {'crt': 1509352489, 'data': '', 'did': 1509350315112, 'due': 1421, 'factor': 0, 'flags': 0, 'id': 1509352489329, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352489, 'nid': 1509352418180, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509352552] cards.py:flush(): {'crt': 1509352552, 'data': '', 'did': 1509350315112, 'due': 1422, 'factor': 0, 'flags': 0, 'id': 1509352552679, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352552, 'nid': 1509352489336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509353447] cards.py:flush(): {'crt': 1509353447, 'data': '', 'did': 1509350315112, 'due': 1423, 'factor': 0, 'flags': 0, 'id': 1509353447614, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509353447, 'nid': 1509352668295, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354183] cards.py:flush(): {'crt': 1509354183, 'data': '', 'did': 1509350315112, 'due': 1424, 'factor': 0, 'flags': 0, 'id': 1509354183250, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354183, 'nid': 1509354010447, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354244] cards.py:flush(): {'crt': 1509354244, 'data': '', 'did': 1509350315112, 'due': 1425, 'factor': 0, 'flags': 0, 'id': 1509354244677, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354244, 'nid': 1509354183463, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354299] cards.py:flush(): {'crt': 1509354299, 'data': '', 'did': 1509350315112, 'due': 1426, 'factor': 0, 'flags': 0, 'id': 1509354299760, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354299, 'nid': 1509354244682, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354404] cards.py:flush(): {'crt': 1509354404, 'data': '', 'did': 1509350315112, 'due': 1427, 'factor': 0, 'flags': 0, 'id': 1509354404469, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354404, 'nid': 1509354299764, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354455] cards.py:flush(): {'crt': 1509354455, 'data': '', 'did': 1509350315112, 'due': 1428, 'factor': 0, 'flags': 0, 'id': 1509354455668, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354455, 'nid': 1509354404529, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354553] cards.py:flush(): {'crt': 1509354553, 'data': '', 'did': 1509350315112, 'due': 1429, 'factor': 0, 'flags': 0, 'id': 1509354553868, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354553, 'nid': 1509354455678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354640] cards.py:flush(): {'crt': 1509354640, 'data': '', 'did': 1509350315112, 'due': 1430, 'factor': 0, 'flags': 0, 'id': 1509354640757, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354640, 'nid': 1509354553874, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354703] cards.py:flush(): {'crt': 1509354703, 'data': '', 'did': 1509350315112, 'due': 1431, 'factor': 0, 'flags': 0, 'id': 1509354703687, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354703, 'nid': 1509354640762, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354783] cards.py:flush(): {'crt': 1509354783, 'data': '', 'did': 1509350315112, 'due': 1432, 'factor': 0, 'flags': 0, 'id': 1509354783881, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354783, 'nid': 1509354703693, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354817] cards.py:flush(): {'crt': 1509354817, 'data': '', 'did': 1509350315112, 'due': 1433, 'factor': 0, 'flags': 0, 'id': 1509354817489, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354817, 'nid': 1509354783893, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354836] cards.py:flush(): {'crt': 1509354836, 'data': '', 'did': 1509350315112, 'due': 1434, 'factor': 0, 'flags': 0, 'id': 1509354836353, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354836, 'nid': 1509354817495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354952] cards.py:flush(): {'crt': 1509354952, 'data': '', 'did': 1509350315112, 'due': 1435, 'factor': 0, 'flags': 0, 'id': 1509354952464, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354952, 'nid': 1509354836359, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509354980] cards.py:flush(): {'crt': 1509354980, 'data': '', 'did': 1509350315112, 'due': 1436, 'factor': 0, 'flags': 0, 'id': 1509354980422, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354980, 'nid': 1509354952469, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509359342] cards.py:flush(): {'crt': 1509359342, 'data': '', 'did': 1509350315112, 'due': 1437, 'factor': 0, 'flags': 0, 'id': 1509359342718, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509359342, 'nid': 1509354980433, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509361246] cards.py:flush(): {'crt': 1509361246, 'data': '', 'did': 1509350315112, 'due': 1438, 'factor': 0, 'flags': 0, 'id': 1509361246611, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509361246, 'nid': 1509359342733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509362034] cards.py:flush(): {'crt': 1509362034, 'data': '', 'did': 1509350315112, 'due': 1439, 'factor': 0, 'flags': 0, 'id': 1509362034159, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509362034, 'nid': 1509361246630, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509366170] cards.py:flush(): {'crt': 1509366170, 'data': '', 'did': 1509350315112, 'due': 1440, 'factor': 0, 'flags': 0, 'id': 1509366170746, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509366170, 'nid': 1509362034170, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509367027] cards.py:flush(): {'crt': 1509367027, 'data': '', 'did': 1509350315112, 'due': 1441, 'factor': 0, 'flags': 0, 'id': 1509367027559, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509367027, 'nid': 1509366170757, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509367058] cards.py:flush(): {'crt': 1509367058, 'data': '', 'did': 1509350315112, 'due': 1442, 'factor': 0, 'flags': 0, 'id': 1509367058171, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509367058, 'nid': 1509367027566, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369220] cards.py:flush(): {'crt': 1509369220, 'data': '', 'did': 1509350315112, 'due': 1443, 'factor': 0, 'flags': 0, 'id': 1509369220696, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369220, 'nid': 1509368635281, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369257] cards.py:flush(): {'crt': 1509369257, 'data': '', 'did': 1509350315112, 'due': 1444, 'factor': 0, 'flags': 0, 'id': 1509369257013, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369257, 'nid': 1509369221048, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369309] cards.py:flush(): {'crt': 1509369309, 'data': '', 'did': 1509350315112, 'due': 1445, 'factor': 0, 'flags': 0, 'id': 1509369309166, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369309, 'nid': 1509369257018, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369463] cards.py:flush(): {'crt': 1509369463, 'data': '', 'did': 1509350315112, 'due': 1446, 'factor': 0, 'flags': 0, 'id': 1509369463643, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369463, 'nid': 1509369309172, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369473] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1410, 'factor': 0, 'flags': 0, 'id': 1509350448558, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509350448, 'nid': 1509350300068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369481] sched.py:answerCard(): 
[1509369481] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369553, 'factor': 0, 'flags': 0, 'id': 1509350448558, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369481, 'nid': 1509350300068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369481] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1411, 'factor': 0, 'flags': 0, 'id': 1509351763128, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509351763, 'nid': 1509351153677, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369489] sched.py:answerCard(): 
[1509369489] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369552, 'factor': 0, 'flags': 0, 'id': 1509351763128, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369489, 'nid': 1509351153677, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369489] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1412, 'factor': 0, 'flags': 0, 'id': 1509352039212, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352039, 'nid': 1509351763349, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369500] sched.py:answerCard(): 
[1509369500] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370242, 'factor': 0, 'flags': 0, 'id': 1509352039212, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369500, 'nid': 1509351763349, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369500] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1413, 'factor': 0, 'flags': 0, 'id': 1509352066634, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352066, 'nid': 1509352039216, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369513] sched.py:answerCard(): 
[1509369513] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369586, 'factor': 0, 'flags': 0, 'id': 1509352066634, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369513, 'nid': 1509352039216, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369513] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1414, 'factor': 0, 'flags': 0, 'id': 1509352202874, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352202, 'nid': 1509352066645, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369533] sched.py:answerCard(): 
[1509369533] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369599, 'factor': 0, 'flags': 0, 'id': 1509352202874, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369533, 'nid': 1509352066645, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369533] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1415, 'factor': 0, 'flags': 0, 'id': 1509352259812, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352259, 'nid': 1509352202878, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369537] sched.py:answerCard(): 
[1509369537] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370176, 'factor': 0, 'flags': 0, 'id': 1509352259812, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369537, 'nid': 1509352202878, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369537] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1416, 'factor': 0, 'flags': 0, 'id': 1509352285035, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352285, 'nid': 1509352259817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369541] sched.py:answerCard(): 
[1509369541] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370191, 'factor': 0, 'flags': 0, 'id': 1509352285035, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369541, 'nid': 1509352259817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369541] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1417, 'factor': 0, 'flags': 0, 'id': 1509352318367, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352318, 'nid': 1509352285042, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369547] sched.py:answerCard(): 
[1509369547] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370221, 'factor': 0, 'flags': 0, 'id': 1509352318367, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369547, 'nid': 1509352285042, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369547] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1418, 'factor': 0, 'flags': 0, 'id': 1509352364093, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352364, 'nid': 1509352318371, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369552] sched.py:answerCard(): 
[1509369552] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369626, 'factor': 0, 'flags': 0, 'id': 1509352364093, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369552, 'nid': 1509352318371, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369552] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369552, 'factor': 0, 'flags': 0, 'id': 1509351763128, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369489, 'nid': 1509351153677, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369566] sched.py:answerCard(): 
[1509369566] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370242, 'factor': 0, 'flags': 0, 'id': 1509351763128, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369566, 'nid': 1509351153677, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369566] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369553, 'factor': 0, 'flags': 0, 'id': 1509350448558, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369481, 'nid': 1509350300068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369569] sched.py:answerCard(): 
[1509369569] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370301, 'factor': 0, 'flags': 0, 'id': 1509350448558, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369569, 'nid': 1509350300068, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369569] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1419, 'factor': 0, 'flags': 0, 'id': 1509352399860, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352399, 'nid': 1509352364097, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369574] sched.py:answerCard(): 
[1509369574] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370283, 'factor': 0, 'flags': 0, 'id': 1509352399860, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369574, 'nid': 1509352364097, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369574] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1420, 'factor': 0, 'flags': 0, 'id': 1509352418174, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352418, 'nid': 1509352399872, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369582] sched.py:answerCard(): 
[1509369582] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369650, 'factor': 0, 'flags': 0, 'id': 1509352418174, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369582, 'nid': 1509352399872, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369582] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1421, 'factor': 0, 'flags': 0, 'id': 1509352489329, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352489, 'nid': 1509352418180, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369590] sched.py:answerCard(): 
[1509369590] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370317, 'factor': 0, 'flags': 0, 'id': 1509352489329, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369590, 'nid': 1509352418180, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369590] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369586, 'factor': 0, 'flags': 0, 'id': 1509352066634, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369513, 'nid': 1509352039216, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369594] sched.py:answerCard(): 
[1509369594] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370326, 'factor': 0, 'flags': 0, 'id': 1509352066634, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369594, 'nid': 1509352039216, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369594] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1422, 'factor': 0, 'flags': 0, 'id': 1509352552679, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509352552, 'nid': 1509352489336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369598] sched.py:answerCard(): 
[1509369598] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370313, 'factor': 0, 'flags': 0, 'id': 1509352552679, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369598, 'nid': 1509352489336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369598] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1423, 'factor': 0, 'flags': 0, 'id': 1509353447614, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509353447, 'nid': 1509352668295, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369623] sched.py:answerCard(): 
[1509369623] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369688, 'factor': 0, 'flags': 0, 'id': 1509353447614, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369623, 'nid': 1509352668295, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369623] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369599, 'factor': 0, 'flags': 0, 'id': 1509352202874, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369533, 'nid': 1509352066645, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369628] sched.py:answerCard(): 
[1509369628] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370271, 'factor': 0, 'flags': 0, 'id': 1509352202874, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369628, 'nid': 1509352066645, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369628] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369626, 'factor': 0, 'flags': 0, 'id': 1509352364093, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369552, 'nid': 1509352318371, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369634] sched.py:answerCard(): 
[1509369634] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370362, 'factor': 0, 'flags': 0, 'id': 1509352364093, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369634, 'nid': 1509352318371, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369634] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1424, 'factor': 0, 'flags': 0, 'id': 1509354183250, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354183, 'nid': 1509354010447, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369683] sched.py:answerCard(): 
[1509369683] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370400, 'factor': 0, 'flags': 0, 'id': 1509354183250, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369683, 'nid': 1509354010447, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369683] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369650, 'factor': 0, 'flags': 0, 'id': 1509352418174, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369582, 'nid': 1509352399872, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369693] sched.py:answerCard(): 
[1509369693] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370432, 'factor': 0, 'flags': 0, 'id': 1509352418174, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369693, 'nid': 1509352399872, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369693] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369688, 'factor': 0, 'flags': 0, 'id': 1509353447614, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369623, 'nid': 1509352668295, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369702] sched.py:answerCard(): 
[1509369702] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370331, 'factor': 0, 'flags': 0, 'id': 1509353447614, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369702, 'nid': 1509352668295, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369702] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1425, 'factor': 0, 'flags': 0, 'id': 1509354244677, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354244, 'nid': 1509354183463, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369734] sched.py:answerCard(): 
[1509369734] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369808, 'factor': 0, 'flags': 0, 'id': 1509354244677, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369734, 'nid': 1509354183463, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369734] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1426, 'factor': 0, 'flags': 0, 'id': 1509354299760, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354299, 'nid': 1509354244682, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369746] sched.py:answerCard(): 
[1509369746] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370444, 'factor': 0, 'flags': 0, 'id': 1509354299760, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369746, 'nid': 1509354244682, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369746] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1427, 'factor': 0, 'flags': 0, 'id': 1509354404469, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354404, 'nid': 1509354299764, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369754] sched.py:answerCard(): 
[1509369754] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370375, 'factor': 0, 'flags': 0, 'id': 1509354404469, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369754, 'nid': 1509354299764, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369754] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1428, 'factor': 0, 'flags': 0, 'id': 1509354455668, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354455, 'nid': 1509354404529, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369764] sched.py:answerCard(): 
[1509369764] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370475, 'factor': 0, 'flags': 0, 'id': 1509354455668, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369764, 'nid': 1509354404529, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369764] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1429, 'factor': 0, 'flags': 0, 'id': 1509354553868, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354553, 'nid': 1509354455678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369776] sched.py:answerCard(): 
[1509369776] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370408, 'factor': 0, 'flags': 0, 'id': 1509354553868, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369776, 'nid': 1509354455678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369776] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1430, 'factor': 0, 'flags': 0, 'id': 1509354640757, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354640, 'nid': 1509354553874, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369785] sched.py:answerCard(): 
[1509369785] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370495, 'factor': 0, 'flags': 0, 'id': 1509354640757, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369785, 'nid': 1509354553874, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369785] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1431, 'factor': 0, 'flags': 0, 'id': 1509354703687, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354703, 'nid': 1509354640762, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369799] sched.py:answerCard(): 
[1509369799] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369865, 'factor': 0, 'flags': 0, 'id': 1509354703687, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369799, 'nid': 1509354640762, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369799] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1432, 'factor': 0, 'flags': 0, 'id': 1509354783881, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354783, 'nid': 1509354703693, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369833] sched.py:answerCard(): 
[1509369833] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369893, 'factor': 0, 'flags': 0, 'id': 1509354783881, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369833, 'nid': 1509354703693, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369833] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369808, 'factor': 0, 'flags': 0, 'id': 1509354244677, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369734, 'nid': 1509354183463, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369849] sched.py:answerCard(): 
[1509369849] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370512, 'factor': 0, 'flags': 0, 'id': 1509354244677, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369849, 'nid': 1509354183463, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369849] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1433, 'factor': 0, 'flags': 0, 'id': 1509354817489, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354817, 'nid': 1509354783893, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369874] sched.py:answerCard(): 
[1509369874] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370555, 'factor': 0, 'flags': 0, 'id': 1509354817489, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369874, 'nid': 1509354783893, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369874] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369865, 'factor': 0, 'flags': 0, 'id': 1509354703687, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369799, 'nid': 1509354640762, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369883] sched.py:answerCard(): 
[1509369883] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370625, 'factor': 0, 'flags': 0, 'id': 1509354703687, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369883, 'nid': 1509354640762, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369883] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1434, 'factor': 0, 'flags': 0, 'id': 1509354836353, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354836, 'nid': 1509354817495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369896] sched.py:answerCard(): 
[1509369896] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509369970, 'factor': 0, 'flags': 0, 'id': 1509354836353, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369896, 'nid': 1509354817495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369896] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369893, 'factor': 0, 'flags': 0, 'id': 1509354783881, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369833, 'nid': 1509354703693, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369922] sched.py:answerCard(): 
[1509369922] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370604, 'factor': 0, 'flags': 0, 'id': 1509354783881, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369922, 'nid': 1509354703693, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369922] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1435, 'factor': 0, 'flags': 0, 'id': 1509354952464, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354952, 'nid': 1509354836359, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369949] sched.py:answerCard(): 
[1509369949] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370589, 'factor': 0, 'flags': 0, 'id': 1509354952464, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369949, 'nid': 1509354836359, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369949] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1436, 'factor': 0, 'flags': 0, 'id': 1509354980422, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509354980, 'nid': 1509354952469, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509369980] sched.py:answerCard(): 
[1509369980] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370044, 'factor': 0, 'flags': 0, 'id': 1509354980422, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369980, 'nid': 1509354952469, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509369980] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509369970, 'factor': 0, 'flags': 0, 'id': 1509354836353, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369896, 'nid': 1509354817495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509369998] sched.py:answerCard(): 
[1509369998] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370704, 'factor': 0, 'flags': 0, 'id': 1509354836353, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509369998, 'nid': 1509354817495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509369998] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1437, 'factor': 0, 'flags': 0, 'id': 1509359342718, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509359342, 'nid': 1509354980433, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370006] sched.py:answerCard(): 
[1509370006] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370737, 'factor': 0, 'flags': 0, 'id': 1509359342718, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370006, 'nid': 1509354980433, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370006] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1438, 'factor': 0, 'flags': 0, 'id': 1509361246611, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509361246, 'nid': 1509359342733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370015] sched.py:answerCard(): 
[1509370015] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370082, 'factor': 0, 'flags': 0, 'id': 1509361246611, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509370015, 'nid': 1509359342733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370015] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1439, 'factor': 0, 'flags': 0, 'id': 1509362034159, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509362034, 'nid': 1509361246630, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370018] sched.py:answerCard(): 
[1509370018] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370735, 'factor': 0, 'flags': 0, 'id': 1509362034159, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370018, 'nid': 1509361246630, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370018] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1440, 'factor': 0, 'flags': 0, 'id': 1509366170746, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509366170, 'nid': 1509362034170, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370046] sched.py:answerCard(): 
[1509370046] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370661, 'factor': 0, 'flags': 0, 'id': 1509366170746, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370046, 'nid': 1509362034170, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370046] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509370044, 'factor': 0, 'flags': 0, 'id': 1509354980422, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509369980, 'nid': 1509354952469, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509370052] sched.py:answerCard(): 
[1509370052] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370775, 'factor': 0, 'flags': 0, 'id': 1509354980422, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370052, 'nid': 1509354952469, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509370052] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1441, 'factor': 0, 'flags': 0, 'id': 1509367027559, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509367027, 'nid': 1509366170757, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370070] sched.py:answerCard(): 
[1509370070] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370137, 'factor': 0, 'flags': 0, 'id': 1509367027559, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509370070, 'nid': 1509366170757, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370070] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1442, 'factor': 0, 'flags': 0, 'id': 1509367058171, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509367058, 'nid': 1509367027566, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370087] sched.py:answerCard(): 
[1509370087] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370155, 'factor': 0, 'flags': 0, 'id': 1509367058171, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509370087, 'nid': 1509367027566, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370087] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509370082, 'factor': 0, 'flags': 0, 'id': 1509361246611, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509370015, 'nid': 1509359342733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509370089] sched.py:answerCard(): 
[1509370089] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370746, 'factor': 0, 'flags': 0, 'id': 1509361246611, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370089, 'nid': 1509359342733, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509370089] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1443, 'factor': 0, 'flags': 0, 'id': 1509369220696, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369220, 'nid': 1509368635281, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370103] sched.py:answerCard(): 
[1509370103] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370727, 'factor': 0, 'flags': 0, 'id': 1509369220696, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370103, 'nid': 1509368635281, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370103] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1444, 'factor': 0, 'flags': 0, 'id': 1509369257013, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369257, 'nid': 1509369221048, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370104] sched.py:answerCard(): 
[1509370104] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370799, 'factor': 0, 'flags': 0, 'id': 1509369257013, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370104, 'nid': 1509369221048, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370104] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1445, 'factor': 0, 'flags': 0, 'id': 1509369309166, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369309, 'nid': 1509369257018, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370110] sched.py:answerCard(): 
[1509370110] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370821, 'factor': 0, 'flags': 0, 'id': 1509369309166, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370110, 'nid': 1509369257018, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370110] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1446, 'factor': 0, 'flags': 0, 'id': 1509369463643, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509369463, 'nid': 1509369309172, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509370113] sched.py:answerCard(): 
[1509370113] cards.py:flushSched(): {'data': u'', 'did': 1509350315112, 'due': 1509370848, 'factor': 0, 'flags': 0, 'id': 1509369463643, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509370113, 'nid': 1509369309172, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509370113] sched.py:getCard(): {'data': u'', 'did': 1509350315112, 'due': 1509370137, 'factor': 0, 'flags': 0, 'id': 1509367027559, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509370070, 'nid': 1509366170757, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509370128] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509370128] sched.py:_updateCutoff(): 206, 1509386400
[1509370129] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509350294035,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509370130,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 66}
[1509370129] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509370128117,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509370129,
 'usn': 66}
[1509370130] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509370130] sync.py:newerRows(): cards, []
[1509370130] sync.py:newerRows(): notes, []
[1509370130] sync.py:sync(): client chunk, {'cards': [(1509350448558,
            1509350300068,
            1509350315112,
            0,
            1509369569,
            66,
            1,
            1,
            1509370301,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509351763128,
            1509351153677,
            1509350315112,
            0,
            1509369566,
            66,
            1,
            1,
            1509370242,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352039212,
            1509351763349,
            1509350315112,
            0,
            1509369500,
            66,
            1,
            1,
            1509370242,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352066634,
            1509352039216,
            1509350315112,
            0,
            1509369594,
            66,
            1,
            1,
            1509370326,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352202874,
            1509352066645,
            1509350315112,
            0,
            1509369628,
            66,
            1,
            1,
            1509370271,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352259812,
            1509352202878,
            1509350315112,
            0,
            1509369537,
            66,
            1,
            1,
            1509370176,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352285035,
            1509352259817,
            1509350315112,
            0,
            1509369541,
            66,
            1,
            1,
            1509370191,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352318367,
            1509352285042,
            1509350315112,
            0,
            1509369547,
            66,
            1,
            1,
            1509370221,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352364093,
            1509352318371,
            1509350315112,
            0,
            1509369634,
            66,
            1,
            1,
            1509370362,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352399860,
            1509352364097,
            1509350315112,
            0,
            1509369574,
            66,
            1,
            1,
            1509370283,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352418174,
            1509352399872,
            1509350315112,
            0,
            1509369693,
            66,
            1,
            1,
            1509370432,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352489329,
            1509352418180,
            1509350315112,
            0,
            1509369590,
            66,
            1,
            1,
            1509370317,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509352552679,
            1509352489336,
            1509350315112,
            0,
            1509369598,
            66,
            1,
            1,
            1509370313,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509353447614,
            1509352668295,
            1509350315112,
            0,
            1509369702,
            66,
            1,
            1,
            1509370331,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354183250,
            1509354010447,
            1509350315112,
            0,
            1509369683,
            66,
            1,
            1,
            1509370400,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354244677,
            1509354183463,
            1509350315112,
            0,
            1509369849,
            66,
            1,
            1,
            1509370512,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354299760,
            1509354244682,
            1509350315112,
            0,
            1509369746,
            66,
            1,
            1,
            1509370444,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354404469,
            1509354299764,
            1509350315112,
            0,
            1509369754,
            66,
            1,
            1,
            1509370375,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354455668,
            1509354404529,
            1509350315112,
            0,
            1509369764,
            66,
            1,
            1,
            1509370475,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354553868,
            1509354455678,
            1509350315112,
            0,
            1509369776,
            66,
            1,
            1,
            1509370408,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354640757,
            1509354553874,
            1509350315112,
            0,
            1509369785,
            66,
            1,
            1,
            1509370495,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354703687,
            1509354640762,
            1509350315112,
            0,
            1509369883,
            66,
            1,
            1,
            1509370625,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354783881,
            1509354703693,
            1509350315112,
            0,
            1509369922,
            66,
            1,
            1,
            1509370604,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354817489,
            1509354783893,
            1509350315112,
            0,
            1509369874,
            66,
            1,
            1,
            1509370555,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354836353,
            1509354817495,
            1509350315112,
            0,
            1509369998,
            66,
            1,
            1,
            1509370704,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354952464,
            1509354836359,
            1509350315112,
            0,
            1509369949,
            66,
            1,
            1,
            1509370589,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509354980422,
            1509354952469,
            1509350315112,
            0,
            1509370052,
            66,
            1,
            1,
            1509370775,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509359342718,
            1509354980433,
            1509350315112,
            0,
            1509370006,
            66,
            1,
            1,
            1509370737,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509361246611,
            1509359342733,
            1509350315112,
            0,
            1509370089,
            66,
            1,
            1,
            1509370746,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509362034159,
            1509361246630,
            1509350315112,
            0,
            1509370018,
            66,
            1,
            1,
            1509370735,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509366170746,
            1509362034170,
            1509350315112,
            0,
            1509370046,
            66,
            1,
            1,
            1509370661,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509367027559,
            1509366170757,
            1509350315112,
            0,
            1509370070,
            66,
            1,
            1,
            1509370137,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509367058171,
            1509367027566,
            1509350315112,
            0,
            1509370087,
            66,
            1,
            1,
            1509370155,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509369220696,
            1509368635281,
            1509350315112,
            0,
            1509370103,
            66,
            1,
            1,
            1509370727,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509369257013,
            1509369221048,
            1509350315112,
            0,
            1509370104,
            66,
            1,
            1,
            1509370799,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509369309166,
            1509369257018,
            1509350315112,
            0,
            1509370110,
            66,
            1,
            1,
            1509370821,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509369463643,
            1509369309172,
            1509350315112,
            0,
            1509370113,
            66,
            1,
            1,
            1509370848,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1509350300068,
            u'r(2}6,]2qk',
            1491545041634,
            1509351152,
            66,
            u'',
            u'Why is logic good for?\x1fIt can provide a notion of "closeness", ie it lets us say "Given this stuff is true, what else can be true?"<div><br /></div><div>It lets us ensure things can never happen "Regardless of the input, we won\'t crash"</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509351153677,
            u's]i#Gdd~z)',
            1491545041634,
            1509351763,
            66,
            u'',
            u'What are the two types of logic problems?\x1fValidity<div><br /></div><div>Satisfiability</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509351763349,
            u'mCSm^MsBek',
            1491545041634,
            1509352039,
            66,
            u'',
            u'What is a formal language?\x1fDefined by:<div><br /></div><div>Syntax: What expressions are legal?</div><div><br /></div><div>Semantics: What is the meaning of a legal expression?</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352039216,
            u'v=3/cvP;$!',
            1491545041634,
            1509352066,
            66,
            u'',
            u'What are the types of logic?\x1fPropositional logic<div><br /></div><div>Predicate / first order logic</div><div><br /></div><div>High order logic</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352066645,
            u'z[KmKNDd!N',
            1491545041634,
            1509352202,
            66,
            u'',
            u'What are the two types of sentances in propositional logic and what do they mean?\x1fAtomic sentence: An expression that is either true or false<div><br /></div><div>Complex sentences: ~ AND OR IMPLIES IFF made of atomic sentences</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352202878,
            u'Ez#+@k4s|f',
            1491545041634,
            1509352259,
            66,
            u'',
            u'What are the semantics of prop. logic?\x1fMeaning is either True or False<div>Truth depends on the truth of the atomic sentences and their logical connectives.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352259817,
            u'O:z=Y3(/Sz',
            1491545041634,
            1509352285,
            66,
            u'',
            u'What does a valid sentence mean?\x1fIf the sentence is always true regardless of the truth of the atomic sentences.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352285042,
            u'bas@rRHsij',
            1491545041634,
            1509352318,
            66,
            u'',
            u"What does a satisfiable sentence mean?\x1fIt is possible to assign truth values to the atomic statements to make the whole sentence true.<div><br /></div><div>If this is not possible, it's unsatisfiable.</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1509352318371,
            u'fUht[sLz3W',
            1491545041634,
            1509352364,
            66,
            u'',
            u'Can we always classify a sentence in propositional logic, what is the word for this?\x1fYes we can, the word is decideable.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352364097,
            u'uNI;b[),A7',
            1491545041634,
            1509352399,
            66,
            u'',
            u'What does it mean to interperate a sentence in logic?\x1fIt means to assign T/F to the propositional variables (atomic statements)\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352399872,
            u'JJ%g$-PoGc',
            1491545041634,
            1509352418,
            66,
            u'',
            u'What does it mean to model a sentence in prop. logic?\x1fA way of interpretating a sentence so that the whole sentence is true.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352418180,
            u'ol7/yWw%dq',
            1491545041634,
            1509352489,
            66,
            u'',
            u'What does it mean for a sentence to entail another?\x1fA |= B means A entails B.<div><br /></div><div>ie if A-&gt;B then A |=B</div><div><br /></div><div><img src="paste-7567732375554.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352489336,
            u'z]@t2@fjt8',
            1491545041634,
            1509352667,
            66,
            u'',
            u'How do you work out whether another statement entails another?\x1fUse truth table, add column A-&gt;B and if that entire column is true then it does, otherwise it does not.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509352668295,
            u'b<)+O<}_Q9',
            1491545041634,
            1509354008,
            66,
            u'',
            u'Define the knowledge base for this problem:<div><img src="paste-10020158701570.jpg" /></div>\x1f<img src="paste-10161892622338.jpg" /><div><img src="paste-12094627905538.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354010447,
            u'em3%!Th0_P',
            1491545041634,
            1509369662,
            66,
            u'',
            u'How do we use a knowledge base?\x1f1) Combine observation (that is assign a true value somewhere) and use the KB to work out what is and isn\'t true for sure.<div><br /></div><div><img src="paste-12395275616258.jpg" /></div><div>2) Use that to deduce whether somethign else is true, by anding all the statements you know to be true</div><div><br /></div><div><br /></div><div><img src="paste-12618613915650.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354183463,
            u'B*t)+Xv@~/',
            1491545041634,
            1509354244,
            66,
            u'',
            u'How do you check the validity of a statement?\x1f<img src="paste-12816182411266.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354244682,
            u'xs;,8@hD:H',
            1491545041634,
            1509354299,
            66,
            u'',
            u'How do you do model checking?\x1f<img src="paste-12945031430146.jpg" /><div><img src="paste-12957916332034.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354299764,
            u'c(x]>XSu/4',
            1491545041634,
            1509354404,
            66,
            u'',
            u'Is model checking sound, complete and complex?\x1f<img src="paste-13262859010050.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354404529,
            u'wsBZh^#Y&i',
            1491545041634,
            1509354455,
            66,
            u'',
            u'What is theorum prooving?\x1f<img src="paste-13400297963522.jpg" /><div><br /></div><div>Use logical rules to combine statements</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354455678,
            u'lZRABSKfO+',
            1491545041634,
            1509354553,
            66,
            u'',
            u'Use theorum prooving with a KB\x1f<img src="paste-13494787244034.jpg" /><div><br /></div><div>Assume they are all true and then infer what else must be true</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354553874,
            u'B3$D>[M#K>',
            1491545041634,
            1509354640,
            66,
            u'',
            u'How is using theorum proving like search?\x1fYou take a node, you expand using the rules, check if we are there, if we aren\'t expand more.<div><br /></div><div><img src="paste-14164802142210.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354640762,
            u'K*E%DbThy:',
            1491545041634,
            1509354703,
            66,
            u'',
            u'Is theorum proving sound, complete?\x1f<img src="paste-14319420964866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354703693,
            u'kO9m@}cmD0',
            1491545041634,
            1509354783,
            66,
            u'',
            u'How does resolution work for theorum proving?\x1fUse only a single inference rule:<div><br /></div><div><img src="paste-14564234100738.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354783893,
            u'e+x^fF$H`v',
            1491545041634,
            1509354817,
            66,
            u'',
            u'What is conjunctive normal form?\x1f<img src="paste-14740327759874.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354817495,
            u'hB]ilf~-5H',
            1491545041634,
            1509354836,
            66,
            u'',
            u'How do you convert sentences to CNF?\x1f<img src="paste-14778982465538.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354836359,
            u'vPK#si!70t',
            1491545041634,
            1509354952,
            66,
            u'',
            u'CNF this:<div><br /></div><div><img src="paste-14830522073090.jpg" /></div>\x1f<img src="paste-15212774162434.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354952469,
            u'n.X{8w[o(P',
            1491545041634,
            1509369966,
            66,
            u'',
            u'How does resolution refutation work?\x1f<img src="paste-15393162788866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509354980433,
            u'OPM&B=)h2Y',
            1491545041634,
            1509359342,
            66,
            u'',
            u'What is p-&gt;q equivilent to?\x1f~(p and ~q)\x1f',
            u'',
            u'',
            0,
            u''),
           (1509359342733,
            u'F8@-.#$dH;',
            1491545041634,
            1509361246,
            66,
            u'',
            u'Do resolution on this:<br /><br /><div><img src="paste-16119012261890.jpg" /></div>\x1f<img src="paste-16642998272002.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509361246630,
            u'i+`,BfQnn`',
            1491545041634,
            1509362034,
            66,
            u'',
            u"What is satisfiability problems for?\x1fYou write a bunch of constraints, and then a constraint you don't want, and check if there is any interperatation which results in the sentence being true.<div><br /></div><div>Air traffic control for example</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1509362034170,
            u'`(E+fU}JF',
            1491545041634,
            1509370034,
            66,
            u'',
            u'What is a Constraint Satisfaction Problem?\x1f<img src="paste-18318035517442.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509366170757,
            u'v`:u[wdZ(/',
            1491545041634,
            1509367027,
            66,
            u'',
            u'What is the David Putnam Logeman Loveland Algorithm\x1f<img src="paste-19202798780418.jpg" /><div><br /></div><div><br /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509367027566,
            u'M.<zunh%e~',
            1491545041634,
            1509367058,
            66,
            u'',
            u'What is a SAT solver?\x1f<img src="paste-19902878449666.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509368635281,
            u'K7xQ=;.-{s',
            1491545041634,
            1509369220,
            66,
            u'',
            u'Is DPLL sound and complete and fast?\x1f<img src="paste-22020297326594.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509369221048,
            u'duh=%)rAA.',
            1491545041634,
            1509369257,
            66,
            u'',
            u'What is the GSAT algorithm?\x1f<img src="paste-22230750724098.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509369257018,
            u'qC0KU.A>K%',
            1491545041634,
            1509369309,
            66,
            u'',
            u'Is GSAT complete and sound?\x1f<img src="paste-22282290331650.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509369309172,
            u'foF~WvRJCo',
            1491545041634,
            1509369463,
            66,
            u'',
            u'Compare DPLL and GSAT\x1f<img src="paste-22604412878850.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1509369481790, 1509350448558, 66, 1, -60, -60, 0, 8712, 0),
            (1509369489004, 1509351763128, 66, 1, -60, -60, 0, 7210, 0),
            (1509369500360, 1509352039212, 66, 2, -600, -60, 0, 11352, 0),
            (1509369513332, 1509352066634, 66, 1, -60, -60, 0, 12969, 0),
            (1509369533187, 1509352202874, 66, 1, -60, -60, 0, 19850, 0),
            (1509369537850, 1509352259812, 66, 2, -600, -60, 0, 4655, 0),
            (1509369541969, 1509352285035, 66, 2, -600, -60, 0, 4116, 0),
            (1509369547164, 1509352318367, 66, 2, -600, -60, 0, 5191, 0),
            (1509369552421, 1509352364093, 66, 1, -60, -60, 0, 5254, 0),
            (1509369566513, 1509351763128, 66, 2, -600, -60, 0, 14089, 0),
            (1509369569126, 1509350448558, 66, 2, -600, -60, 0, 2609, 0),
            (1509369574281, 1509352399860, 66, 2, -600, -60, 0, 5150, 0),
            (1509369582883, 1509352418174, 66, 1, -60, -60, 0, 8600, 0),
            (1509369590948, 1509352489329, 66, 2, -600, -60, 0, 8061, 0),
            (1509369594182, 1509352066634, 66, 2, -600, -60, 0, 3231, 0),
            (1509369598132, 1509352552679, 66, 2, -600, -60, 0, 3946, 0),
            (1509369623566, 1509353447614, 66, 1, -60, -60, 0, 25430, 0),
            (1509369628349, 1509352202874, 66, 2, -600, -60, 0, 4781, 0),
            (1509369634986, 1509352364093, 66, 2, -600, -60, 0, 6634, 0),
            (1509369683654, 1509354183250, 66, 2, -600, -60, 0, 20165, 0),
            (1509369693626, 1509352418174, 66, 2, -600, -60, 0, 9967, 0),
            (1509369702712, 1509353447614, 66, 2, -600, -60, 0, 9080, 0),
            (1509369734294, 1509354244677, 66, 1, -60, -60, 0, 31578, 0),
            (1509369746095, 1509354299760, 66, 2, -600, -60, 0, 11797, 0),
            (1509369754279, 1509354404469, 66, 2, -600, -60, 0, 8176, 0),
            (1509369764317, 1509354455668, 66, 2, -600, -60, 0, 10034, 0),
            (1509369776571, 1509354553868, 66, 2, -600, -60, 0, 12250, 0),
            (1509369785644, 1509354640757, 66, 2, -600, -60, 0, 9068, 0),
            (1509369799257, 1509354703687, 66, 1, -60, -60, 0, 13610, 0),
            (1509369833610, 1509354783881, 66, 1, -60, -60, 0, 34350, 0),
            (1509369849687, 1509354244677, 66, 2, -600, -60, 0, 16066, 0),
            (1509369874798, 1509354817489, 66, 2, -600, -60, 0, 25107, 0),
            (1509369883172, 1509354703687, 66, 2, -600, -60, 0, 8371, 0),
            (1509369896577, 1509354836353, 66, 1, -60, -60, 0, 13402, 0),
            (1509369922853, 1509354783881, 66, 2, -600, -60, 0, 26273, 0),
            (1509369949214, 1509354952464, 66, 2, -600, -60, 0, 26357, 0),
            (1509369980531, 1509354980422, 66, 1, -60, -60, 0, 7037, 0),
            (1509369998854, 1509354836353, 66, 2, -600, -60, 0, 18318, 0),
            (1509370006342, 1509359342718, 66, 2, -600, -60, 0, 7483, 0),
            (1509370015561, 1509361246611, 66, 1, -60, -60, 0, 9215, 0),
            (1509370018843, 1509362034159, 66, 2, -600, -60, 0, 3279, 0),
            (1509370046836, 1509366170746, 66, 2, -600, -60, 0, 4703, 0),
            (1509370052738, 1509354980422, 66, 2, -600, -60, 0, 5897, 0),
            (1509370070890, 1509367027559, 66, 1, -60, -60, 0, 18149, 0),
            (1509370087949, 1509367058171, 66, 1, -60, -60, 0, 17054, 0),
            (1509370089865, 1509361246611, 66, 2, -600, -60, 0, 1913, 0),
            (1509370103071, 1509369220696, 66, 2, -600, -60, 0, 13202, 0),
            (1509370104772, 1509369257013, 66, 2, -600, -60, 0, 1698, 0),
            (1509370110597, 1509369309166, 66, 2, -600, -60, 0, 5823, 0),
            (1509370113087, 1509369463643, 66, 2, -600, -60, 0, 2486, 0)]}
[1509370131] sync.py:sync(): findChanges
[1509370133] sync.py:sync(): last local usn is 733
[1509370133] sync.py:sync(): mediaChanges resp count 0
[1509370133] media.py:mediaChangesZip(): +media zip, paste-13262859010050.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-13400297963522.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-14778982465538.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-13494787244034.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-14740327759874.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-12945031430146.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-12618613915650.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-18318035517442.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-19202798780418.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-22230750724098.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-22604412878850.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-10020158701570.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-22020297326594.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-10161892622338.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-7567732375554.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-15393162788866.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-14319420964866.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-14564234100738.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-14164802142210.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-12395275616258.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-16642998272002.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-12094627905538.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-19902878449666.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-12957916332034.jpg
[1509370133] media.py:mediaChangesZip(): +media zip, paste-16119012261890.jpg
[1509370137] sync.py:sync(): processed 25, serverUsn 758, clientUsn 733
[1509370137] sync.py:sync(): lastUsn in sync, updating local
[1509370137] media.py:mediaChangesZip(): +media zip, paste-12816182411266.jpg
[1509370137] media.py:mediaChangesZip(): +media zip, paste-14830522073090.jpg
[1509370137] media.py:mediaChangesZip(): +media zip, paste-22282290331650.jpg
[1509370137] media.py:mediaChangesZip(): +media zip, paste-12545599471618.jpg
[1509370137] media.py:mediaChangesZip(): +media zip, paste-12708808228866.jpg
[1509370137] media.py:mediaChangesZip(): +media zip, paste-15212774162434.jpg
[1509370138] sync.py:sync(): processed 6, serverUsn 764, clientUsn 758
[1509370138] sync.py:sync(): lastUsn in sync, updating local
[1509451545] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509451545] sched.py:_updateCutoff(): 207, 1509472800
[1509451545] sched.py:unburyCards(): []
[1509451547] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509374993071,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509451547,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 69}
[1509451547] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509451545809,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509451547,
 'usn': 67}
[1509451549] sync.py:sync(): server chunk, {u'cards': [[1509350448558,
             1509350300068,
             1509350315112,
             0,
             1509373114,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509351763128,
             1509351153677,
             1509350315112,
             0,
             1509373099,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352039212,
             1509351763349,
             1509350315112,
             0,
             1509373102,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352066634,
             1509352039216,
             1509350315112,
             0,
             1509373132,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352202874,
             1509352066645,
             1509350315112,
             0,
             1509373106,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352259812,
             1509352202878,
             1509350315112,
             0,
             1509373049,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352285035,
             1509352259817,
             1509350315112,
             0,
             1509373052,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352318367,
             1509352285042,
             1509350315112,
             0,
             1509373070,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352364093,
             1509352318371,
             1509350315112,
             0,
             1509373144,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352399860,
             1509352364097,
             1509350315112,
             0,
             1509373109,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352418174,
             1509352399872,
             1509350315112,
             0,
             1509373174,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352489329,
             1509352418180,
             1509350315112,
             0,
             1509373120,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352552679,
             1509352489336,
             1509350315112,
             0,
             1509373117,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509353447614,
             1509352668295,
             1509350315112,
             0,
             1509373137,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354183250,
             1509354010447,
             1509350315112,
             0,
             1509373157,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354244677,
             1509354183463,
             1509350315112,
             0,
             1509374423,
             69,
             2,
             2,
             207,
             1,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354299760,
             1509354244682,
             1509350315112,
             0,
             1509373176,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354404469,
             1509354299764,
             1509350315112,
             0,
             1509373147,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354455668,
             1509354404529,
             1509350315112,
             0,
             1509373187,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354553868,
             1509354455678,
             1509350315112,
             0,
             1509373165,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354640757,
             1509354553874,
             1509350315112,
             0,
             1509374409,
             69,
             2,
             2,
             207,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354703687,
             1509354640762,
             1509350315112,
             0,
             1509373489,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354783881,
             1509354703693,
             1509350315112,
             0,
             1509374418,
             69,
             2,
             2,
             207,
             1,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354817489,
             1509354783893,
             1509350315112,
             0,
             1509373244,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354836353,
             1509354817495,
             1509350315112,
             0,
             1509373527,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354952464,
             1509354836359,
             1509350315112,
             0,
             1509374476,
             69,
             2,
             2,
             207,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354980422,
             1509354952469,
             1509350315112,
             0,
             1509374473,
             69,
             2,
             2,
             207,
             1,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509359342718,
             1509354980433,
             1509350315112,
             0,
             1509373547,
             69,
             2,
             2,
             210,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509361246611,
             1509359342733,
             1509350315112,
             0,
             1509374208,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509362034159,
             1509361246630,
             1509350315112,
             0,
             1509373541,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509366170746,
             1509362034170,
             1509350315112,
             0,
             1509373509,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509367027559,
             1509366170757,
             1509350315112,
             0,
             1509374367,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509367058171,
             1509367027566,
             1509350315112,
             0,
             1509374353,
             69,
             2,
             2,
             207,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369220696,
             1509368635281,
             1509350315112,
             0,
             1509373534,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369257013,
             1509369221048,
             1509350315112,
             0,
             1509374481,
             69,
             2,
             2,
             207,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369309166,
             1509369257018,
             1509350315112,
             0,
             1509374474,
             69,
             2,
             2,
             207,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369463643,
             1509369309172,
             1509350315112,
             0,
             1509374302,
             69,
             2,
             2,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u'']],
 u'done': True,
 u'notes': [],
 u'revlog': [[1509373034007, 1509367027559, 69, 2, -600, -60, 0, 8546, 0],
             [1509373046757, 1509367058171, 69, 2, -600, -60, 0, 12740, 0],
             [1509373049232, 1509352259812, 69, 2, 1, -600, 2500, 2465, 0],
             [1509373052811, 1509352285035, 69, 2, 1, -600, 2500, 3571, 0],
             [1509373070061, 1509352318367, 69, 2, 1, -600, 2500, 17240, 0],
             [1509373099789, 1509351763128, 69, 2, 1, -600, 2500, 6049, 0],
             [1509373102428, 1509352039212, 69, 2, 1, -600, 2500, 2629, 0],
             [1509373106250, 1509352202874, 69, 2, 1, -600, 2500, 3811, 0],
             [1509373109920, 1509352399860, 69, 2, 1, -600, 2500, 3662, 0],
             [1509373114300, 1509350448558, 69, 2, 1, -600, 2500, 4368, 0],
             [1509373117509, 1509352552679, 69, 2, 1, -600, 2500, 3197, 0],
             [1509373120595, 1509352489329, 69, 2, 1, -600, 2500, 3075, 0],
             [1509373132434, 1509352066634, 69, 2, 1, -600, 2500, 11831, 0],
             [1509373137717, 1509353447614, 69, 2, 1, -600, 2500, 5276, 0],
             [1509373144053, 1509352364093, 69, 2, 1, -600, 2500, 6326, 0],
             [1509373147567, 1509354404469, 69, 2, 1, -600, 2500, 3496, 0],
             [1509373157578, 1509354183250, 69, 2, 1, -600, 2500, 10002, 0],
             [1509373165968, 1509354553868, 69, 2, 1, -600, 2500, 8382, 0],
             [1509373174948, 1509352418174, 69, 2, 1, -600, 2500, 8973, 0],
             [1509373176599, 1509354299760, 69, 2, 1, -600, 2500, 1644, 0],
             [1509373187540, 1509354455668, 69, 2, 1, -600, 2500, 10931, 0],
             [1509373216957, 1509354640757, 69, 1, -60, -600, 0, 29407, 0],
             [1509373228489, 1509354244677, 69, 1, -60, -600, 0, 11523, 0],
             [1509373244881, 1509354817489, 69, 2, 1, -600, 2500, 16383, 0],
             [1509373338073, 1509354952464, 69, 1, -60, -600, 0, 60000, 0],
             [1509373484166, 1509354783881, 69, 1, -60, -600, 0, 60000, 0],
             [1509373489400, 1509354703687, 69, 2, 1, -600, 2500, 5226, 0],
             [1509373509421, 1509366170746, 69, 2, 1, -600, 2500, 20013, 0],
             [1509373527091, 1509354836353, 69, 2, 1, -600, 2500, 17664, 0],
             [1509373534294, 1509369220696, 69, 2, 1, -600, 2500, 7197, 0],
             [1509373541207, 1509362034159, 69, 2, 1, -600, 2500, 6904, 0],
             [1509373547895, 1509359342718, 69, 3, 4, -600, 2500, 6681, 0],
             [1509374208891, 1509361246611, 69, 2, 1, -600, 2500, 60000, 0],
             [1509374247322, 1509354980422, 69, 1, -60, -600, 0, 37502, 0],
             [1509374283775, 1509369257013, 69, 1, -60, -600, 0, 36447, 0],
             [1509374300312, 1509369309166, 69, 1, -60, -600, 0, 16529, 0],
             [1509374302467, 1509369463643, 69, 2, 1, -600, 2500, 2151, 0],
             [1509374311159, 1509354640757, 69, 2, -600, -60, 0, 8680, 0],
             [1509374322265, 1509354244677, 69, 2, -600, -60, 0, 11094, 0],
             [1509374326653, 1509354952464, 69, 2, -600, -60, 0, 4379, 0],
             [1509374345690, 1509354783881, 69, 2, -600, -60, 0, 19026, 0],
             [1509374353701, 1509367058171, 69, 2, 1, -600, 2500, 8000, 0],
             [1509374367498, 1509367027559, 69, 2, 1, -600, 2500, 13787, 0],
             [1509374379866, 1509354980422, 69, 2, -600, -60, 0, 12362, 0],
             [1509374404298, 1509369257013, 69, 2, -600, -60, 0, 24423, 0],
             [1509374407073, 1509369309166, 69, 2, -600, -60, 0, 2764, 0],
             [1509374409832, 1509354640757, 69, 2, 1, -600, 2500, 2747, 0],
             [1509374418482, 1509354783881, 69, 2, 1, -600, 2500, 8636, 0],
             [1509374423665, 1509354244677, 69, 2, 1, -600, 2500, 5177, 0],
             [1509374473387, 1509354980422, 69, 2, 1, -600, 2500, 49713, 0],
             [1509374474971, 1509369309166, 69, 2, 1, -600, 2500, 1576, 0],
             [1509374476273, 1509354952464, 69, 2, 1, -600, 2500, 1292, 0],
             [1509374481107, 1509369257013, 69, 2, 1, -600, 2500, 4825, 0]]}
[1509451549] sync.py:newerRows(): cards, [[1509350448558,
  1509350300068,
  1509350315112,
  0,
  1509373114,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509351763128,
  1509351153677,
  1509350315112,
  0,
  1509373099,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352039212,
  1509351763349,
  1509350315112,
  0,
  1509373102,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352066634,
  1509352039216,
  1509350315112,
  0,
  1509373132,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352202874,
  1509352066645,
  1509350315112,
  0,
  1509373106,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352259812,
  1509352202878,
  1509350315112,
  0,
  1509373049,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352285035,
  1509352259817,
  1509350315112,
  0,
  1509373052,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352318367,
  1509352285042,
  1509350315112,
  0,
  1509373070,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352364093,
  1509352318371,
  1509350315112,
  0,
  1509373144,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352399860,
  1509352364097,
  1509350315112,
  0,
  1509373109,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352418174,
  1509352399872,
  1509350315112,
  0,
  1509373174,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352489329,
  1509352418180,
  1509350315112,
  0,
  1509373120,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352552679,
  1509352489336,
  1509350315112,
  0,
  1509373117,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509353447614,
  1509352668295,
  1509350315112,
  0,
  1509373137,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354183250,
  1509354010447,
  1509350315112,
  0,
  1509373157,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354244677,
  1509354183463,
  1509350315112,
  0,
  1509374423,
  69,
  2,
  2,
  207,
  1,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354299760,
  1509354244682,
  1509350315112,
  0,
  1509373176,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354404469,
  1509354299764,
  1509350315112,
  0,
  1509373147,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354455668,
  1509354404529,
  1509350315112,
  0,
  1509373187,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354553868,
  1509354455678,
  1509350315112,
  0,
  1509373165,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354640757,
  1509354553874,
  1509350315112,
  0,
  1509374409,
  69,
  2,
  2,
  207,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354703687,
  1509354640762,
  1509350315112,
  0,
  1509373489,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354783881,
  1509354703693,
  1509350315112,
  0,
  1509374418,
  69,
  2,
  2,
  207,
  1,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354817489,
  1509354783893,
  1509350315112,
  0,
  1509373244,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354836353,
  1509354817495,
  1509350315112,
  0,
  1509373527,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354952464,
  1509354836359,
  1509350315112,
  0,
  1509374476,
  69,
  2,
  2,
  207,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354980422,
  1509354952469,
  1509350315112,
  0,
  1509374473,
  69,
  2,
  2,
  207,
  1,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509359342718,
  1509354980433,
  1509350315112,
  0,
  1509373547,
  69,
  2,
  2,
  210,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509361246611,
  1509359342733,
  1509350315112,
  0,
  1509374208,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509362034159,
  1509361246630,
  1509350315112,
  0,
  1509373541,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509366170746,
  1509362034170,
  1509350315112,
  0,
  1509373509,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509367027559,
  1509366170757,
  1509350315112,
  0,
  1509374367,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509367058171,
  1509367027566,
  1509350315112,
  0,
  1509374353,
  69,
  2,
  2,
  207,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369220696,
  1509368635281,
  1509350315112,
  0,
  1509373534,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369257013,
  1509369221048,
  1509350315112,
  0,
  1509374481,
  69,
  2,
  2,
  207,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369309166,
  1509369257018,
  1509350315112,
  0,
  1509374474,
  69,
  2,
  2,
  207,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369463643,
  1509369309172,
  1509350315112,
  0,
  1509374302,
  69,
  2,
  2,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u'']]
[1509451549] sync.py:newerRows(): notes, []
[1509451549] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1509451550] sync.py:sync(): findChanges
[1509451551] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509451551] sched.py:_updateCutoff(): 207, 1509472800
[1509451880] cards.py:flush(): {'crt': 1509451880, 'data': '', 'did': 1509451817255, 'due': 1447, 'factor': 0, 'flags': 0, 'id': 1509451880204, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509451880, 'nid': 1509451801910, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509452069] cards.py:flush(): {'crt': 1509452069, 'data': '', 'did': 1509451817255, 'due': 1448, 'factor': 0, 'flags': 0, 'id': 1509452069149, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509452069, 'nid': 1509452018727, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509452250] cards.py:flush(): {'crt': 1509452250, 'data': '', 'did': 1509451817255, 'due': 1449, 'factor': 0, 'flags': 0, 'id': 1509452250809, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509452250, 'nid': 1509452069443, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509452388] cards.py:flush(): {'crt': 1509452388, 'data': '', 'did': 1509451817255, 'due': 1450, 'factor': 0, 'flags': 0, 'id': 1509452388623, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509452388, 'nid': 1509452273532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509452440] cards.py:flush(): {'crt': 1509452440, 'data': '', 'did': 1509451817255, 'due': 1451, 'factor': 0, 'flags': 0, 'id': 1509452440049, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509452440, 'nid': 1509452388899, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509452607] cards.py:flush(): {'crt': 1509452607, 'data': '', 'did': 1509451817255, 'due': 1452, 'factor': 0, 'flags': 0, 'id': 1509452607645, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509452607, 'nid': 1509452440055, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509454465] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454465] sched.py:_updateCutoff(): 207, 1509472800
[1509454467] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509451550183,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509454467,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 70}
[1509454467] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509454465569,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509454467,
 'usn': 70}
[1509454468] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509454468] sync.py:newerRows(): cards, []
[1509454468] sync.py:newerRows(): notes, []
[1509454468] sync.py:sync(): client chunk, {'cards': [(1509451880204,
            1509451801910,
            1509451817255,
            0,
            1509451880,
            70,
            0,
            0,
            1447,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509452069149,
            1509452018727,
            1509451817255,
            0,
            1509452069,
            70,
            0,
            0,
            1448,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509452250809,
            1509452069443,
            1509451817255,
            0,
            1509452250,
            70,
            0,
            0,
            1449,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509452388623,
            1509452273532,
            1509451817255,
            0,
            1509452388,
            70,
            0,
            0,
            1450,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509452440049,
            1509452388899,
            1509451817255,
            0,
            1509452440,
            70,
            0,
            0,
            1451,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509452607645,
            1509452440055,
            1509451817255,
            0,
            1509452607,
            70,
            0,
            0,
            1452,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1509451801910,
            u'rPDv}bJH(r',
            1491545041634,
            1509451880,
            70,
            u'',
            u'What is a Python decorator?\x1fA Python decorator is a specific change to the Python syntax that allows us to more<b> conveniently alter functions and methods</b> (and possibly classes in a future version).\x1f',
            u'',
            u'',
            0,
            u''),
           (1509452018727,
            u'n`$W7Hl&xt',
            1491545041634,
            1509452069,
            70,
            u' General, Language, Objects Python, ',
            u'What does it mean for functions to be first-class objects in Python?\x1fThis means that functions can be passed around, and used as arguments, just like any other value (e.g, string, int, float).\x1f',
            u'',
            u'',
            0,
            u''),
           (1509452069443,
            u'GB:1M}#G^<',
            1491545041634,
            1509452273,
            70,
            u' Decorator, Language, Objects, Python ',
            u'What does a decorator do in Python?\x1fIt wraps a function in another one, so you can execute some stuff before and after the function with the decorator.\x1f',
            u'',
            u'',
            0,
            u''),
           (1509452273532,
            u'c*5M-LykwZ',
            1491545041634,
            1509452388,
            70,
            u' General, Language, Objects Python, ',
            u'What are the parameters and outputs of a decorator?\x1fA decorator takes a function and returns a function like so:<div><br /></div><div><img src="paste-9590661971970.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509452388899,
            u'o[@=z/_VBi',
            1491545041634,
            1509452440,
            70,
            u' Decorator, Language, Python ',
            u'What does @my_decorator do?\x1f<div>@my_decorator is just an easier way of saying just_some_function = my_decorator(just_some_function).&nbsp;</div><div><br /></div><div>It\u2019s how you apply a decorator to a function.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509452440055,
            u'JFEt1$74Tp',
            1491545041634,
            1509452607,
            70,
            u' Decorator, Language, Python ',
            u'How do you use decorators to make getters and setters for Python?\x1f<img src="paste-10290741641218.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1509454469] sync.py:sync(): findChanges
[1509454470] sync.py:sync(): last local usn is 764
[1509454470] sync.py:sync(): mediaChanges resp count 0
[1509454470] media.py:mediaChangesZip(): +media zip, paste-9590661971970.jpg
[1509454470] media.py:mediaChangesZip(): +media zip, paste-10290741641218.jpg
[1509454471] sync.py:sync(): processed 2, serverUsn 766, clientUsn 764
[1509454471] sync.py:sync(): lastUsn in sync, updating local
[1509454471] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454471] sched.py:_updateCutoff(): 207, 1509472800
[1509454511] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454511] sched.py:_updateCutoff(): 207, 1509472800
[1509454517] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509454496964,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509454518,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 72}
[1509454517] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509454468990,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509454517,
 'usn': 71}
[1509454519] sync.py:sync(): server chunk, {u'cards': [[1498286840220,
             1498286655322,
             1498286783448,
             0,
             1509450090,
             72,
             2,
             2,
             518,
             311,
             2650,
             7,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1498286994780,
             1498286935055,
             1498286783448,
             0,
             1509450018,
             72,
             2,
             1,
             1509450723,
             1,
             2300,
             6,
             1,
             1001,
             116,
             0,
             0,
             u''],
            [1498287013395,
             1498286994867,
             1498286783448,
             0,
             1509450070,
             72,
             2,
             2,
             498,
             291,
             2650,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1498287714175,
             1498287540322,
             1498286783448,
             0,
             1509450083,
             72,
             2,
             1,
             1509450683,
             1,
             1900,
             10,
             3,
             1001,
             208,
             0,
             0,
             u''],
            [1498287769643,
             1498287714186,
             1498286783448,
             0,
             1509450063,
             72,
             2,
             1,
             1509450663,
             1,
             2300,
             6,
             1,
             1001,
             208,
             0,
             0,
             u''],
            [1498287807022,
             1498287769699,
             1498286783448,
             0,
             1509450037,
             72,
             2,
             1,
             1509450769,
             1,
             2300,
             6,
             1,
             1001,
             116,
             0,
             0,
             u''],
            [1498288091694,
             1498287864061,
             1498286783448,
             0,
             1509450043,
             72,
             2,
             2,
             517,
             310,
             2650,
             8,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1498288273155,
             1498288254390,
             1498286783448,
             0,
             1509450058,
             72,
             2,
             1,
             1509450658,
             1,
             2100,
             8,
             2,
             1001,
             208,
             0,
             0,
             u''],
            [1508222056818,
             1508221766987,
             1508222056817,
             0,
             1509427289,
             72,
             2,
             2,
             210,
             3,
             2500,
             4,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508222394913,
             1508222057028,
             1508222056817,
             0,
             1509427182,
             72,
             2,
             2,
             212,
             5,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223361130,
             1508223341406,
             1508222056817,
             0,
             1509427191,
             72,
             2,
             2,
             212,
             5,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223513453,
             1508223361252,
             1508222056817,
             0,
             1509426376,
             72,
             2,
             2,
             212,
             5,
             2500,
             3,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508223625340,
             1508223513459,
             1508222056817,
             0,
             1509426360,
             72,
             2,
             2,
             211,
             4,
             2500,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508223703777,
             1508223625349,
             1508222056817,
             0,
             1509427208,
             72,
             2,
             2,
             208,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508224198472,
             1508223703782,
             1508222056817,
             0,
             1509428962,
             72,
             2,
             2,
             211,
             4,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508224491114,
             1508224198483,
             1508222056817,
             0,
             1509427265,
             72,
             2,
             2,
             210,
             3,
             2500,
             4,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244414587,
             1508224491118,
             1508222056817,
             0,
             1509427147,
             72,
             2,
             2,
             212,
             5,
             2500,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244503647,
             1508244414594,
             1508222056817,
             0,
             1509429292,
             72,
             1,
             1,
             1509429963,
             0,
             0,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244582158,
             1508244503651,
             1508222056817,
             0,
             1509429644,
             72,
             1,
             1,
             1509429710,
             0,
             0,
             3,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244662201,
             1508244582161,
             1508222056817,
             0,
             1509428968,
             72,
             2,
             2,
             211,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244725000,
             1508244662211,
             1508222056817,
             0,
             1509429637,
             72,
             1,
             1,
             1509429703,
             0,
             0,
             4,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244739772,
             1508244725010,
             1508222056817,
             0,
             1509429638,
             72,
             1,
             1,
             1509429709,
             0,
             0,
             3,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244760697,
             1508244739776,
             1508222056817,
             0,
             1509429639,
             72,
             1,
             1,
             1509429712,
             0,
             0,
             3,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244840306,
             1508244760699,
             1508222056817,
             0,
             1509429643,
             72,
             1,
             1,
             1509429714,
             0,
             0,
             3,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244922301,
             1508244840309,
             1508222056817,
             0,
             1509429510,
             72,
             2,
             2,
             211,
             4,
             2500,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244962306,
             1508244922305,
             1508222056817,
             0,
             1509429640,
             72,
             1,
             1,
             1509429713,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508245138329,
             1508244962308,
             1508222056817,
             0,
             1509429642,
             72,
             1,
             1,
             1509429714,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508245805009,
             1508245138336,
             1508222056817,
             0,
             1509429662,
             72,
             1,
             1,
             1509429726,
             0,
             0,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508246958054,
             1508246934102,
             1508246909407,
             0,
             1509440972,
             72,
             1,
             1,
             1509441040,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508246997127,
             1508246958238,
             1508246909407,
             0,
             1509440983,
             72,
             1,
             1,
             1509441046,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508247063792,
             1508246997131,
             1508246909407,
             0,
             1509441011,
             72,
             1,
             1,
             1509441084,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508247507886,
             1508247063795,
             1508246909407,
             0,
             1509441021,
             72,
             1,
             1,
             1509441086,
             0,
             0,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508247845767,
             1508247507905,
             1508246909407,
             0,
             1509441028,
             72,
             1,
             1,
             1509441636,
             0,
             0,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508247899333,
             1508247845777,
             1508246909407,
             0,
             1509440957,
             72,
             1,
             1,
             1509441027,
             0,
             0,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508248076701,
             1508247899336,
             1508246909407,
             0,
             1509440969,
             72,
             1,
             1,
             1509441030,
             0,
             0,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508248093649,
             1508248076704,
             1508246909407,
             0,
             1509440998,
             72,
             2,
             2,
             211,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509350448558,
             1509350300068,
             1509350315112,
             0,
             1509424199,
             72,
             2,
             2,
             212,
             5,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509351763128,
             1509351153677,
             1509350315112,
             0,
             1509425909,
             72,
             2,
             2,
             211,
             4,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352039212,
             1509351763349,
             1509350315112,
             0,
             1509423874,
             72,
             2,
             2,
             210,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352066634,
             1509352039216,
             1509350315112,
             0,
             1509424182,
             72,
             2,
             2,
             211,
             4,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352202874,
             1509352066645,
             1509350315112,
             0,
             1509424120,
             72,
             2,
             2,
             211,
             4,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352259812,
             1509352202878,
             1509350315112,
             0,
             1509425858,
             72,
             2,
             2,
             209,
             2,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352285035,
             1509352259817,
             1509350315112,
             0,
             1509423682,
             72,
             2,
             2,
             210,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352318367,
             1509352285042,
             1509350315112,
             0,
             1509425786,
             72,
             2,
             2,
             210,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352364093,
             1509352318371,
             1509350315112,
             0,
             1509424126,
             72,
             2,
             2,
             211,
             4,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352399860,
             1509352364097,
             1509350315112,
             0,
             1509424135,
             72,
             2,
             2,
             212,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352418174,
             1509352399872,
             1509350315112,
             0,
             1509424239,
             72,
             2,
             2,
             210,
             3,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352489329,
             1509352418180,
             1509350315112,
             0,
             1509423689,
             72,
             2,
             2,
             211,
             4,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509352552679,
             1509352489336,
             1509350315112,
             0,
             1509423706,
             72,
             2,
             2,
             209,
             2,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509353447614,
             1509352668295,
             1509350315112,
             0,
             1509424197,
             72,
             2,
             2,
             212,
             5,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354183250,
             1509354010447,
             1509350315112,
             0,
             1509424151,
             72,
             2,
             2,
             210,
             3,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354244677,
             1509354183463,
             1509350315112,
             0,
             1509424109,
             72,
             2,
             2,
             209,
             2,
             2350,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354299760,
             1509354244682,
             1509350315112,
             0,
             1509423698,
             72,
             2,
             -1,
             207,
             1,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354404469,
             1509354299764,
             1509350315112,
             0,
             1509423869,
             72,
             2,
             2,
             210,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354455668,
             1509354404529,
             1509350315112,
             0,
             1509426016,
             72,
             2,
             2,
             212,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354553868,
             1509354455678,
             1509350315112,
             0,
             1509424190,
             72,
             2,
             2,
             208,
             1,
             2300,
             4,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509354640757,
             1509354553874,
             1509350315112,
             0,
             1509424224,
             72,
             2,
             2,
             212,
             5,
             2650,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354703687,
             1509354640762,
             1509350315112,
             0,
             1509423917,
             72,
             2,
             2,
             211,
             4,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354783881,
             1509354703693,
             1509350315112,
             0,
             1509424169,
             72,
             2,
             2,
             209,
             2,
             2500,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354817489,
             1509354783893,
             1509350315112,
             0,
             1509425894,
             72,
             2,
             2,
             210,
             3,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354836353,
             1509354817495,
             1509350315112,
             0,
             1509425812,
             72,
             2,
             2,
             211,
             4,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354952464,
             1509354836359,
             1509350315112,
             0,
             1509425963,
             72,
             2,
             2,
             212,
             5,
             2650,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354980422,
             1509354952469,
             1509350315112,
             0,
             1509425995,
             72,
             2,
             2,
             210,
             3,
             2500,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509361246611,
             1509359342733,
             1509350315112,
             0,
             1509425658,
             72,
             2,
             2,
             212,
             5,
             2650,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509362034159,
             1509361246630,
             1509350315112,
             0,
             1509426005,
             72,
             2,
             2,
             211,
             4,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509366170746,
             1509362034170,
             1509350315112,
             0,
             1509423985,
             72,
             2,
             2,
             209,
             2,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509367027559,
             1509366170757,
             1509350315112,
             0,
             1509423961,
             72,
             2,
             2,
             211,
             4,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509367058171,
             1509367027566,
             1509350315112,
             0,
             1509423541,
             72,
             2,
             2,
             210,
             3,
             2350,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369220696,
             1509368635281,
             1509350315112,
             0,
             1509424234,
             72,
             2,
             2,
             211,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369257013,
             1509369221048,
             1509350315112,
             0,
             1509425844,
             72,
             2,
             2,
             210,
             3,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509369309166,
             1509369257018,
             1509350315112,
             0,
             1509425766,
             72,
             2,
             2,
             208,
             1,
             2300,
             6,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509369463643,
             1509369309172,
             1509350315112,
             0,
             1509425877,
             72,
             2,
             2,
             210,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u'']],
 u'done': True,
 u'notes': [[1508244662211,
             u'v}20}0!vg{',
             1491545041634,
             1509429322,
             72,
             u'',
             u'How do you choose an action for minimax\x1f<img src="paste-11458972745730.jpg" />\x1f',
             u'',
             u'',
             0,
             u'']],
 u'revlog': [[1509423541515, 1509367058171, 72, 2, 3, 1, 2350, 34626, 1],
             [1509423571091, 1509354553868, 72, 1, -600, 1, 2300, 29572, 1],
             [1509423643423, 1509369309166, 72, 1, -600, 1, 2300, 60000, 1],
             [1509423682765, 1509352285035, 72, 3, 3, 1, 2500, 39333, 1],
             [1509423689134, 1509352489329, 72, 3, 4, 1, 2500, 6358, 1],
             [1509423706677, 1509352552679, 72, 3, 2, 1, 2500, 7762, 1],
             [1509423869867, 1509354404469, 72, 3, 3, 1, 2500, 60000, 1],
             [1509423874670, 1509352039212, 72, 3, 3, 1, 2500, 4795, 1],
             [1509423917028, 1509354703687, 72, 3, 4, 1, 2500, 42350, 1],
             [1509423961275, 1509367027559, 72, 3, 4, 1, 2500, 44240, 1],
             [1509423985093, 1509366170746, 72, 3, 2, 1, 2500, 23812, 1],
             [1509424109295, 1509354244677, 72, 2, 2, 1, 2350, 60000, 1],
             [1509424120169, 1509352202874, 72, 4, 4, 1, 2650, 10869, 1],
             [1509424126546, 1509352364093, 72, 4, 4, 1, 2650, 6368, 1],
             [1509424135473, 1509352399860, 72, 4, 5, 1, 2650, 8916, 1],
             [1509424151384, 1509354183250, 72, 4, 3, 1, 2650, 15894, 1],
             [1509424169696, 1509354783881, 72, 3, 2, 1, 2500, 18298, 1],
             [1509424182110, 1509352066634, 72, 4, 4, 1, 2650, 12404, 1],
             [1509424190544, 1509354553868, 72, 2, 1, -600, 2300, 8422, 2],
             [1509424197339, 1509353447614, 72, 4, 5, 1, 2650, 6786, 1],
             [1509424199463, 1509350448558, 72, 4, 5, 1, 2650, 2116, 1],
             [1509424224809, 1509354640757, 72, 4, 5, 1, 2650, 25332, 1],
             [1509424234751, 1509369220696, 72, 4, 4, 1, 2650, 9932, 1],
             [1509424239354, 1509352418174, 72, 4, 3, 1, 2650, 4593, 1],
             [1509425658467, 1509361246611, 72, 4, 5, 1, 2650, 60000, 1],
             [1509425766771, 1509369309166, 72, 2, 1, -600, 2300, 60000, 2],
             [1509425786024, 1509352318367, 72, 3, 3, 1, 2500, 19243, 1],
             [1509425812047, 1509354836353, 72, 3, 4, 1, 2500, 26011, 1],
             [1509425844364, 1509369257013, 72, 3, 3, 1, 2500, 32309, 1],
             [1509425858505, 1509352259812, 72, 3, 2, 1, 2500, 14132, 1],
             [1509425877266, 1509369463643, 72, 3, 3, 1, 2500, 18753, 1],
             [1509425894984, 1509354817489, 72, 4, 3, 1, 2650, 17707, 1],
             [1509425909212, 1509351763128, 72, 4, 4, 1, 2650, 14219, 1],
             [1509425963305, 1509354952464, 72, 4, 5, 1, 2650, 54085, 1],
             [1509425995098, 1509354980422, 72, 3, 3, 1, 2500, 31782, 1],
             [1509426005331, 1509362034159, 72, 3, 4, 1, 2500, 10225, 1],
             [1509426016515, 1509354455668, 72, 4, 5, 1, 2650, 11175, 1],
             [1509426050996, 1508222056818, 72, 1, -60, -60, 0, 25790, 0],
             [1509426074658, 1508222394913, 72, 2, -600, -60, 0, 23660, 0],
             [1509426106400, 1508223361130, 72, 1, -60, -60, 0, 31739, 0],
             [1509426130878, 1508223513453, 72, 1, -60, -60, 0, 24476, 0],
             [1509426159394, 1508222056818, 72, 2, -600, -60, 0, 28513, 0],
             [1509426199996, 1508223625340, 72, 1, -60, -60, 0, 40598, 0],
             [1509426218136, 1508223361130, 72, 2, -600, -60, 0, 18135, 0],
             [1509426239770, 1508223513453, 72, 1, -60, -60, 0, 21629, 0],
             [1509426325068, 1508223703777, 72, 1, -60, -60, 0, 60000, 0],
             [1509426360649, 1508223625340, 72, 3, 4, -60, 2500, 35573, 0],
             [1509426376947, 1508223513453, 72, 3, 5, -60, 2500, 16289, 0],
             [1509426486212, 1508224198472, 72, 1, -60, -60, 0, 60000, 0],
             [1509426548284, 1508223703777, 72, 2, -600, -60, 0, 60000, 0],
             [1509426578890, 1508224491114, 72, 1, -60, -60, 0, 30596, 0],
             [1509426629816, 1508224198472, 72, 1, -60, -60, 0, 50921, 0],
             [1509426687770, 1508244414587, 72, 1, -60, -60, 0, 57950, 0],
             [1509426700054, 1508224491114, 72, 1, -60, -60, 0, 12276, 0],
             [1509427134939, 1508224198472, 72, 1, -60, -60, 0, 41444, 0],
             [1509427147430, 1508244414587, 72, 3, 5, -60, 2500, 12488, 0],
             [1509427170751, 1508224491114, 72, 1, -60, -60, 0, 23315, 0],
             [1509427182632, 1508222394913, 72, 3, 5, -600, 2500, 11868, 0],
             [1509427184802, 1508222056818, 72, 1, -60, -600, 0, 2164, 0],
             [1509427191902, 1508223361130, 72, 3, 5, -600, 2500, 7092, 0],
             [1509427208377, 1508223703777, 72, 2, 1, -600, 2500, 16467, 0],
             [1509427221402, 1508224198472, 72, 2, -600, -60, 0, 13016, 0],
             [1509427257951, 1508244503647, 72, 1, -60, -60, 0, 36539, 0],
             [1509427265470, 1508224491114, 72, 3, 3, -60, 2500, 7513, 0],
             [1509427289705, 1508222056818, 72, 3, 3, -60, 2500, 24227, 0],
             [1509428911932, 1508244582158, 72, 1, -60, -60, 0, 60000, 0],
             [1509428943532, 1508244503647, 72, 1, -60, -60, 0, 31588, 0],
             [1509428962830, 1508224198472, 72, 3, 4, -600, 2500, 19286, 0],
             [1509428968653, 1508244662201, 72, 3, 4, -60, 2500, 5815, 0],
             [1509429000850, 1508244725000, 72, 1, -60, -60, 0, 32188, 0],
             [1509429006507, 1508244582158, 72, 2, -600, -60, 0, 5654, 0],
             [1509429292992, 1508244503647, 72, 2, -600, -60, 0, 8616, 0],
             [1509429350358, 1508244725000, 72, 1, -60, -60, 0, 44199, 0],
             [1509429365157, 1508244739772, 72, 1, -60, -60, 0, 14796, 0],
             [1509429375969, 1508244760697, 72, 1, -60, -60, 0, 10808, 0],
             [1509429415900, 1508244840306, 72, 1, -60, -60, 0, 39923, 0],
             [1509429429385, 1508244922301, 72, 1, -60, -60, 0, 13473, 0],
             [1509429448221, 1508244725000, 72, 1, -60, -60, 0, 18828, 0],
             [1509429456869, 1508244739772, 72, 1, -60, -60, 0, 8638, 0],
             [1509429475952, 1508244760697, 72, 1, -60, -60, 0, 19075, 0],
             [1509429500833, 1508244962306, 72, 1, -60, -60, 0, 24875, 0],
             [1509429507880, 1508244840306, 72, 1, -60, -60, 0, 7042, 0],
             [1509429510384, 1508244922301, 72, 3, 4, -60, 2500, 2492, 0],
             [1509429514389, 1508245138329, 72, 1, -60, -60, 0, 3996, 0],
             [1509429637126, 1508244725000, 72, 1, -60, -60, 0, 15116, 0],
             [1509429638528, 1508244739772, 72, 1, -60, -60, 0, 1391, 0],
             [1509429639716, 1508244760697, 72, 1, -60, -60, 0, 1180, 0],
             [1509429640919, 1508244962306, 72, 1, -60, -60, 0, 1194, 0],
             [1509429642107, 1508245138329, 72, 1, -60, -60, 0, 1180, 0],
             [1509429643813, 1508244840306, 72, 1, -60, -60, 0, 1698, 0],
             [1509429644851, 1508244582158, 72, 1, -60, -600, 0, 1031, 0],
             [1509429662889, 1508245805009, 72, 1, -60, -60, 0, 18033, 0],
             [1509440891838, 1508246958054, 72, 1, -60, -60, 0, 6628, 0],
             [1509440909961, 1508246997127, 72, 1, -60, -60, 0, 18115, 0],
             [1509440917889, 1508247063792, 72, 1, -60, -60, 0, 7925, 0],
             [1509440926339, 1508247507886, 72, 1, -60, -60, 0, 8440, 0],
             [1509440947912, 1508247845767, 72, 1, -60, -60, 0, 21569, 0],
             [1509440957630, 1508247899333, 72, 1, -60, -60, 0, 9711, 0],
             [1509440969491, 1508248076701, 72, 1, -60, -60, 0, 11851, 0],
             [1509440972328, 1508246958054, 72, 1, -60, -60, 0, 2828, 0],
             [1509440983318, 1508246997127, 72, 1, -60, -60, 0, 10981, 0],
             [1509440998857, 1508248093649, 72, 3, 4, -60, 2500, 15534, 0],
             [1509441011148, 1508247063792, 72, 1, -60, -60, 0, 12286, 0],
             [1509441021629, 1508247507886, 72, 1, -60, -60, 0, 10471, 0],
             [1509441028839, 1508247845767, 72, 2, -600, -60, 0, 7201, 0],
             [1509450018858,
              1498286994780,
              72,
              1,
              -600,
              -600,
              2300,
              18855,
              2],
             [1509450037339,
              1498287807022,
              72,
              1,
              -600,
              -600,
              2300,
              18473,
              2],
             [1509450043815, 1498288091694, 72, 4, 310, 34, 2650, 6470, 1],
             [1509450058437, 1498288273155, 72, 1, -600, 1, 2100, 14615, 1],
             [1509450063128, 1498287769643, 72, 1, -600, 46, 2300, 4687, 1],
             [1509450070424, 1498287013395, 72, 4, 291, 49, 2650, 7288, 1],
             [1509450083529, 1498287714175, 72, 1, -600, 1, 1900, 13097, 1],
             [1509450090667, 1498286840220, 72, 4, 311, 43, 2650, 7134, 1]]}
[1509454520] sync.py:newerRows(): cards, [[1498286840220,
  1498286655322,
  1498286783448,
  0,
  1509450090,
  72,
  2,
  2,
  518,
  311,
  2650,
  7,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1498286994780,
  1498286935055,
  1498286783448,
  0,
  1509450018,
  72,
  2,
  1,
  1509450723,
  1,
  2300,
  6,
  1,
  1001,
  116,
  0,
  0,
  u''],
 [1498287013395,
  1498286994867,
  1498286783448,
  0,
  1509450070,
  72,
  2,
  2,
  498,
  291,
  2650,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1498287714175,
  1498287540322,
  1498286783448,
  0,
  1509450083,
  72,
  2,
  1,
  1509450683,
  1,
  1900,
  10,
  3,
  1001,
  208,
  0,
  0,
  u''],
 [1498287769643,
  1498287714186,
  1498286783448,
  0,
  1509450063,
  72,
  2,
  1,
  1509450663,
  1,
  2300,
  6,
  1,
  1001,
  208,
  0,
  0,
  u''],
 [1498287807022,
  1498287769699,
  1498286783448,
  0,
  1509450037,
  72,
  2,
  1,
  1509450769,
  1,
  2300,
  6,
  1,
  1001,
  116,
  0,
  0,
  u''],
 [1498288091694,
  1498287864061,
  1498286783448,
  0,
  1509450043,
  72,
  2,
  2,
  517,
  310,
  2650,
  8,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1498288273155,
  1498288254390,
  1498286783448,
  0,
  1509450058,
  72,
  2,
  1,
  1509450658,
  1,
  2100,
  8,
  2,
  1001,
  208,
  0,
  0,
  u''],
 [1508222056818,
  1508221766987,
  1508222056817,
  0,
  1509427289,
  72,
  2,
  2,
  210,
  3,
  2500,
  4,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508222394913,
  1508222057028,
  1508222056817,
  0,
  1509427182,
  72,
  2,
  2,
  212,
  5,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223361130,
  1508223341406,
  1508222056817,
  0,
  1509427191,
  72,
  2,
  2,
  212,
  5,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223513453,
  1508223361252,
  1508222056817,
  0,
  1509426376,
  72,
  2,
  2,
  212,
  5,
  2500,
  3,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508223625340,
  1508223513459,
  1508222056817,
  0,
  1509426360,
  72,
  2,
  2,
  211,
  4,
  2500,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508223703777,
  1508223625349,
  1508222056817,
  0,
  1509427208,
  72,
  2,
  2,
  208,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508224198472,
  1508223703782,
  1508222056817,
  0,
  1509428962,
  72,
  2,
  2,
  211,
  4,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508224491114,
  1508224198483,
  1508222056817,
  0,
  1509427265,
  72,
  2,
  2,
  210,
  3,
  2500,
  4,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244414587,
  1508224491118,
  1508222056817,
  0,
  1509427147,
  72,
  2,
  2,
  212,
  5,
  2500,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244503647,
  1508244414594,
  1508222056817,
  0,
  1509429292,
  72,
  1,
  1,
  1509429963,
  0,
  0,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244582158,
  1508244503651,
  1508222056817,
  0,
  1509429644,
  72,
  1,
  1,
  1509429710,
  0,
  0,
  3,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244662201,
  1508244582161,
  1508222056817,
  0,
  1509428968,
  72,
  2,
  2,
  211,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244725000,
  1508244662211,
  1508222056817,
  0,
  1509429637,
  72,
  1,
  1,
  1509429703,
  0,
  0,
  4,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244739772,
  1508244725010,
  1508222056817,
  0,
  1509429638,
  72,
  1,
  1,
  1509429709,
  0,
  0,
  3,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244760697,
  1508244739776,
  1508222056817,
  0,
  1509429639,
  72,
  1,
  1,
  1509429712,
  0,
  0,
  3,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244840306,
  1508244760699,
  1508222056817,
  0,
  1509429643,
  72,
  1,
  1,
  1509429714,
  0,
  0,
  3,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244922301,
  1508244840309,
  1508222056817,
  0,
  1509429510,
  72,
  2,
  2,
  211,
  4,
  2500,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244962306,
  1508244922305,
  1508222056817,
  0,
  1509429640,
  72,
  1,
  1,
  1509429713,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508245138329,
  1508244962308,
  1508222056817,
  0,
  1509429642,
  72,
  1,
  1,
  1509429714,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508245805009,
  1508245138336,
  1508222056817,
  0,
  1509429662,
  72,
  1,
  1,
  1509429726,
  0,
  0,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508246958054,
  1508246934102,
  1508246909407,
  0,
  1509440972,
  72,
  1,
  1,
  1509441040,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508246997127,
  1508246958238,
  1508246909407,
  0,
  1509440983,
  72,
  1,
  1,
  1509441046,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508247063792,
  1508246997131,
  1508246909407,
  0,
  1509441011,
  72,
  1,
  1,
  1509441084,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508247507886,
  1508247063795,
  1508246909407,
  0,
  1509441021,
  72,
  1,
  1,
  1509441086,
  0,
  0,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508247845767,
  1508247507905,
  1508246909407,
  0,
  1509441028,
  72,
  1,
  1,
  1509441636,
  0,
  0,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508247899333,
  1508247845777,
  1508246909407,
  0,
  1509440957,
  72,
  1,
  1,
  1509441027,
  0,
  0,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508248076701,
  1508247899336,
  1508246909407,
  0,
  1509440969,
  72,
  1,
  1,
  1509441030,
  0,
  0,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508248093649,
  1508248076704,
  1508246909407,
  0,
  1509440998,
  72,
  2,
  2,
  211,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509350448558,
  1509350300068,
  1509350315112,
  0,
  1509424199,
  72,
  2,
  2,
  212,
  5,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509351763128,
  1509351153677,
  1509350315112,
  0,
  1509425909,
  72,
  2,
  2,
  211,
  4,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352039212,
  1509351763349,
  1509350315112,
  0,
  1509423874,
  72,
  2,
  2,
  210,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352066634,
  1509352039216,
  1509350315112,
  0,
  1509424182,
  72,
  2,
  2,
  211,
  4,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352202874,
  1509352066645,
  1509350315112,
  0,
  1509424120,
  72,
  2,
  2,
  211,
  4,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352259812,
  1509352202878,
  1509350315112,
  0,
  1509425858,
  72,
  2,
  2,
  209,
  2,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352285035,
  1509352259817,
  1509350315112,
  0,
  1509423682,
  72,
  2,
  2,
  210,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352318367,
  1509352285042,
  1509350315112,
  0,
  1509425786,
  72,
  2,
  2,
  210,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352364093,
  1509352318371,
  1509350315112,
  0,
  1509424126,
  72,
  2,
  2,
  211,
  4,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352399860,
  1509352364097,
  1509350315112,
  0,
  1509424135,
  72,
  2,
  2,
  212,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352418174,
  1509352399872,
  1509350315112,
  0,
  1509424239,
  72,
  2,
  2,
  210,
  3,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352489329,
  1509352418180,
  1509350315112,
  0,
  1509423689,
  72,
  2,
  2,
  211,
  4,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509352552679,
  1509352489336,
  1509350315112,
  0,
  1509423706,
  72,
  2,
  2,
  209,
  2,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509353447614,
  1509352668295,
  1509350315112,
  0,
  1509424197,
  72,
  2,
  2,
  212,
  5,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354183250,
  1509354010447,
  1509350315112,
  0,
  1509424151,
  72,
  2,
  2,
  210,
  3,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354244677,
  1509354183463,
  1509350315112,
  0,
  1509424109,
  72,
  2,
  2,
  209,
  2,
  2350,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354299760,
  1509354244682,
  1509350315112,
  0,
  1509423698,
  72,
  2,
  -1,
  207,
  1,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354404469,
  1509354299764,
  1509350315112,
  0,
  1509423869,
  72,
  2,
  2,
  210,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354455668,
  1509354404529,
  1509350315112,
  0,
  1509426016,
  72,
  2,
  2,
  212,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354553868,
  1509354455678,
  1509350315112,
  0,
  1509424190,
  72,
  2,
  2,
  208,
  1,
  2300,
  4,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509354640757,
  1509354553874,
  1509350315112,
  0,
  1509424224,
  72,
  2,
  2,
  212,
  5,
  2650,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354703687,
  1509354640762,
  1509350315112,
  0,
  1509423917,
  72,
  2,
  2,
  211,
  4,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354783881,
  1509354703693,
  1509350315112,
  0,
  1509424169,
  72,
  2,
  2,
  209,
  2,
  2500,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354817489,
  1509354783893,
  1509350315112,
  0,
  1509425894,
  72,
  2,
  2,
  210,
  3,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354836353,
  1509354817495,
  1509350315112,
  0,
  1509425812,
  72,
  2,
  2,
  211,
  4,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354952464,
  1509354836359,
  1509350315112,
  0,
  1509425963,
  72,
  2,
  2,
  212,
  5,
  2650,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354980422,
  1509354952469,
  1509350315112,
  0,
  1509425995,
  72,
  2,
  2,
  210,
  3,
  2500,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509361246611,
  1509359342733,
  1509350315112,
  0,
  1509425658,
  72,
  2,
  2,
  212,
  5,
  2650,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509362034159,
  1509361246630,
  1509350315112,
  0,
  1509426005,
  72,
  2,
  2,
  211,
  4,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509366170746,
  1509362034170,
  1509350315112,
  0,
  1509423985,
  72,
  2,
  2,
  209,
  2,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509367027559,
  1509366170757,
  1509350315112,
  0,
  1509423961,
  72,
  2,
  2,
  211,
  4,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509367058171,
  1509367027566,
  1509350315112,
  0,
  1509423541,
  72,
  2,
  2,
  210,
  3,
  2350,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369220696,
  1509368635281,
  1509350315112,
  0,
  1509424234,
  72,
  2,
  2,
  211,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369257013,
  1509369221048,
  1509350315112,
  0,
  1509425844,
  72,
  2,
  2,
  210,
  3,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509369309166,
  1509369257018,
  1509350315112,
  0,
  1509425766,
  72,
  2,
  2,
  208,
  1,
  2300,
  6,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509369463643,
  1509369309172,
  1509350315112,
  0,
  1509425877,
  72,
  2,
  2,
  210,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u'']]
[1509454520] sync.py:newerRows(): notes, [[1508244662211,
  u'v}20}0!vg{',
  1491545041634,
  1509429322,
  72,
  u'',
  u'How do you choose an action for minimax\x1f<img src="paste-11458972745730.jpg" />\x1f',
  u'',
  u'',
  0,
  u'']]
[1509454520] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1509454521] sync.py:sync(): findChanges
[1509454522] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454522] sched.py:_updateCutoff(): 207, 1509472800
[1509454729] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454729] sched.py:_updateCutoff(): 207, 1509472800
[1509454731] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509454521015,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509454731,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 73}
[1509454731] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509454521015,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509454731,
 'usn': 73}
[1509454731] sync.py:sync(): no changes
[1509454731] sync.py:sync(): findChanges
[1509454774] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454774] sched.py:_updateCutoff(): 207, 1509472800
[1509454775] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509454521015,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509454776,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 73}
[1509454775] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509454521015,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509454775,
 'usn': 73}
[1509454775] sync.py:sync(): no changes
[1509454775] sync.py:sync(): findChanges
[1509454777] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509454777] sched.py:_updateCutoff(): 207, 1509472800
[1509454872] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429703, 'factor': 0, 'flags': 0, 'id': 1508244725000, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429637, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': 72}
[1509454986] sched.py:answerCard(): 
[1509454986] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455593, 'factor': 0, 'flags': 0, 'id': 1508244725000, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509454986, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509454986] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429709, 'factor': 0, 'flags': 0, 'id': 1508244739772, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429638, 'nid': 1508244725010, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 72}
[1509455003] sched.py:answerCard(): 
[1509455003] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455733, 'factor': 0, 'flags': 0, 'id': 1508244739772, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455003, 'nid': 1508244725010, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509455003] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429710, 'factor': 0, 'flags': 0, 'id': 1508244582158, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429644, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 72}
[1509455032] sched.py:answerCard(): 
[1509455032] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455637, 'factor': 0, 'flags': 0, 'id': 1508244582158, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455032, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509455032] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429712, 'factor': 0, 'flags': 0, 'id': 1508244760697, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429639, 'nid': 1508244739776, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 72}
[1509455041] sched.py:answerCard(): 
[1509455041] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455768, 'factor': 0, 'flags': 0, 'id': 1508244760697, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455041, 'nid': 1508244739776, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509455041] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429713, 'factor': 0, 'flags': 0, 'id': 1508244962306, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429640, 'nid': 1508244922305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509455067] sched.py:answerCard(): 
[1509455067] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455756, 'factor': 0, 'flags': 0, 'id': 1508244962306, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455067, 'nid': 1508244922305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509455067] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429714, 'factor': 0, 'flags': 0, 'id': 1508244840306, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429643, 'nid': 1508244760699, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 72}
[1509455174] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429714, 'factor': 0, 'flags': 0, 'id': 1508245138329, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429642, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509455299] cards.py:flush(): {'crt': 1509455299, 'data': '', 'did': 1508222056817, 'due': 1453, 'factor': 0, 'flags': 0, 'id': 1509455299000, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509455299, 'nid': 1509455239452, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509455300] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429714, 'factor': 0, 'flags': 0, 'id': 1508245138329, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429642, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509455309] sched.py:answerCard(): 
[1509455309] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509455938, 'factor': 0, 'flags': 0, 'id': 1508245138329, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455309, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509455309] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429726, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429662, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 72}
[1509455520] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509455520] sched.py:_updateCutoff(): 207, 1509472800
[1509455527] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509454521015,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509455527,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 73}
[1509455527] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509455511051,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509455527,
 'usn': 73}
[1509455528] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509455528] sync.py:newerRows(): cards, []
[1509455528] sync.py:newerRows(): notes, []
[1509455528] sync.py:sync(): client chunk, {'cards': [(1508244582158,
            1508244503651,
            1508222056817,
            0,
            1509455032,
            73,
            1,
            1,
            1509455637,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244725000,
            1508244662211,
            1508222056817,
            0,
            1509454986,
            73,
            1,
            1,
            1509455593,
            0,
            0,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244739772,
            1508244725010,
            1508222056817,
            0,
            1509455003,
            73,
            1,
            1,
            1509455733,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244760697,
            1508244739776,
            1508222056817,
            0,
            1509455041,
            73,
            1,
            1,
            1509455768,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244962306,
            1508244922305,
            1508222056817,
            0,
            1509455067,
            73,
            1,
            1,
            1509455756,
            0,
            0,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508245138329,
            1508244962308,
            1508222056817,
            0,
            1509455309,
            73,
            1,
            1,
            1509455938,
            0,
            0,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509455299000,
            1509455239452,
            1508222056817,
            0,
            1509455299,
            73,
            0,
            0,
            1453,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508244503651,
            u'wq9{|=cPez',
            1491545041634,
            1509455024,
            73,
            u'',
            u'Compare mini-max to an AND-OR tree\x1fSo we select to maximize our heuristic, and assume opponent will minimize<br /><div><br /></div><div><img src="paste-11261404250114.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244662211,
            u'v}20}0!vg{',
            1491545041634,
            1509454979,
            73,
            u'',
            u"How do you choose an action for minimax\x1f<div>Start from the bottom, max nodes gets the max values of their children, min nodes gets the min, do that all the way to the root.</div><div><br /></div><div>To choose an action, choose the action that leads us in the direction that let the max node to getting it's value.</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1508244922305,
            u'y$o}:yE?dI',
            1491545041634,
            1509455060,
            73,
            u' AI, Algorithm Minimax, ',
            u'What is the minimax algorithm?\x1f<img src="paste-12171937316866.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1508244962308,
            u'xv`nMc78%}',
            1491545041634,
            1509455236,
            73,
            u' AI, Algorithm Alpha-beta, Minimax, ',
            u'What is alpha-beta pruning?\x1f<div>It allows us to prune branches of the search tree that do not change the final decision.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508245138336,
            u'Ob#6[hTKVO',
            1491545041634,
            1509455474,
            73,
            u' AI Algorithm Alpha-beta Minimax ',
            u"Does ordering matter for alpha-beta pruning, if so what sort of ordering would result in the best complexity?\x1f<div>Yes.</div><div><br /></div><div>If the min-children of a max node are ordered in decreasing value, and max-children of a min node are ordered in increasing value the run time is:<br /><br />O(b^{h/2})</div><div><br /></div><div>If you shuffle them, it's</div><div><br /></div><div>O(b^{3h/4})</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1509455239452,
            u'hDGGMS,6EH',
            1491545041634,
            1509455299,
            73,
            u' AI, Algorithm, Alpha-beta, Minimax, ',
            u'What is alpha and beta in alpha-beta pruning?\x1f<div>Alpha is the best explored option along the path to the root for the maximizer.</div><div><br /></div><div>Beta is the best explored option along the path to the root for the minimizer.</div>\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1509454986337, 1508244725000, 73, 2, -600, -60, 0, 2376, 0),
            (1509455003589, 1508244739772, 73, 2, -600, -60, 0, 17246, 0),
            (1509455032125, 1508244582158, 73, 2, -600, -60, 0, 6464, 0),
            (1509455041009, 1508244760697, 73, 2, -600, -60, 0, 8879, 0),
            (1509455067408, 1508244962306, 73, 2, -600, -60, 0, 7313, 0),
            (1509455309563, 1508245138329, 73, 2, -600, -60, 0, 9066, 0)]}
[1509455529] sync.py:sync(): findChanges
[1509455538] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509455538] sched.py:_updateCutoff(): 207, 1509472800
[1509455540] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509455529226,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509455540,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 74}
[1509455540] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509455529226,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509455540,
 'usn': 74}
[1509455540] sync.py:sync(): no changes
[1509455540] sync.py:sync(): findChanges
[1509455541] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509455541] sched.py:_updateCutoff(): 207, 1509472800
[1509455623] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429726, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429662, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 72}
[1509455899] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429726, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509429662, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 72}
[1509459427] sched.py:answerCard(): 
[1509459427] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509460168, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459427, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509459427] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509429963, 'factor': 0, 'flags': 0, 'id': 1508244503647, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509429292, 'nid': 1508244414594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 72}
[1509459431] sched.py:answerCard(): 
[1509459431] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244503647, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459431, 'nid': 1508244414594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459431] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455593, 'factor': 0, 'flags': 0, 'id': 1508244725000, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509454986, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': 73}
[1509459439] sched.py:answerCard(): 
[1509459439] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244725000, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459439, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459439] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455637, 'factor': 0, 'flags': 0, 'id': 1508244582158, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455032, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': 73}
[1509459445] sched.py:answerCard(): 
[1509459445] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244582158, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459445, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459445] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455733, 'factor': 0, 'flags': 0, 'id': 1508244739772, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455003, 'nid': 1508244725010, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': 73}
[1509459451] sched.py:answerCard(): 
[1509459451] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244739772, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459451, 'nid': 1508244725010, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459451] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455756, 'factor': 0, 'flags': 0, 'id': 1508244962306, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455067, 'nid': 1508244922305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 73}
[1509459456] sched.py:answerCard(): 
[1509459456] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244962306, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459456, 'nid': 1508244922305, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459456] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455768, 'factor': 0, 'flags': 0, 'id': 1508244760697, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455041, 'nid': 1508244739776, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': 73}
[1509459460] sched.py:answerCard(): 
[1509459460] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244760697, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459460, 'nid': 1508244739776, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459460] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509455938, 'factor': 0, 'flags': 0, 'id': 1508245138329, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509455309, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 73}
[1509459468] sched.py:answerCard(): 
[1509459468] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508245138329, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459468, 'nid': 1508244962308, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459468] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1344, 'factor': 0, 'flags': 0, 'id': 1508245924149, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508245924, 'nid': 1508245805023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 52}
[1509459485] sched.py:answerCard(): 
[1509459485] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509460135, 'factor': 0, 'flags': 0, 'id': 1508245924149, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459485, 'nid': 1508245805023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509459485] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1345, 'factor': 0, 'flags': 0, 'id': 1508246087549, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508246087, 'nid': 1508245924151, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 52}
[1509459492] sched.py:answerCard(): 
[1509459492] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509460185, 'factor': 0, 'flags': 0, 'id': 1508246087549, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459492, 'nid': 1508245924151, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509459492] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1453, 'factor': 0, 'flags': 0, 'id': 1509455299000, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509455299, 'nid': 1509455239452, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 73}
[1509459511] sched.py:answerCard(): 
[1509459511] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 1509460140, 'factor': 0, 'flags': 0, 'id': 1509455299000, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459511, 'nid': 1509455239452, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509459511] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509460135, 'factor': 0, 'flags': 0, 'id': 1508245924149, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459485, 'nid': 1508245805023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509459514] sched.py:answerCard(): 
[1509459514] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508245924149, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459514, 'nid': 1508245805023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459514] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509460140, 'factor': 0, 'flags': 0, 'id': 1509455299000, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459511, 'nid': 1509455239452, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509459519] sched.py:answerCard(): 
[1509459519] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1509455299000, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459519, 'nid': 1509455239452, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459519] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509460168, 'factor': 0, 'flags': 0, 'id': 1508245805009, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459427, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509459525] sched.py:answerCard(): 
[1509459525] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508245805009, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459525, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509459525] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 1509460185, 'factor': 0, 'flags': 0, 'id': 1508246087549, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509459492, 'nid': 1508245924151, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509459526] sched.py:answerCard(): 
[1509459526] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508246087549, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459526, 'nid': 1508245924151, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460406] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441027, 'factor': 0, 'flags': 0, 'id': 1508247899333, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509440957, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 72}
[1509460412] sched.py:answerCard(): 
[1509460412] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461152, 'factor': 0, 'flags': 0, 'id': 1508247899333, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460412, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460412] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441030, 'factor': 0, 'flags': 0, 'id': 1508248076701, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509440969, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 72}
[1509460414] sched.py:answerCard(): 
[1509460414] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461034, 'factor': 0, 'flags': 0, 'id': 1508248076701, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460414, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460414] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441040, 'factor': 0, 'flags': 0, 'id': 1508246958054, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509440972, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509460420] sched.py:answerCard(): 
[1509460420] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461078, 'factor': 0, 'flags': 0, 'id': 1508246958054, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460420, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460420] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441046, 'factor': 0, 'flags': 0, 'id': 1508246997127, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509440983, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509460442] sched.py:answerCard(): 
[1509460442] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461084, 'factor': 0, 'flags': 0, 'id': 1508246997127, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460442, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460442] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441084, 'factor': 0, 'flags': 0, 'id': 1508247063792, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509441011, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509460455] sched.py:answerCard(): 
[1509460455] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461100, 'factor': 0, 'flags': 0, 'id': 1508247063792, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460455, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460455] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441086, 'factor': 0, 'flags': 0, 'id': 1508247507886, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509441021, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509460459] sched.py:answerCard(): 
[1509460459] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461150, 'factor': 0, 'flags': 0, 'id': 1508247507886, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460459, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509460459] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509441636, 'factor': 0, 'flags': 0, 'id': 1508247845767, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509441028, 'nid': 1508247507905, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 72}
[1509460462] sched.py:answerCard(): 
[1509460462] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247845767, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460462, 'nid': 1508247507905, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460462] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1354, 'factor': 0, 'flags': 0, 'id': 1508248171938, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508248171, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 54}
[1509460504] sched.py:answerCard(): 
[1509460504] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509461106, 'factor': 0, 'flags': 0, 'id': 1508248171938, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460504, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509460504] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461034, 'factor': 0, 'flags': 0, 'id': 1508248076701, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460414, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509460507] sched.py:answerCard(): 
[1509460507] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508248076701, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460507, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460507] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461078, 'factor': 0, 'flags': 0, 'id': 1508246958054, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460420, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509460508] sched.py:answerCard(): 
[1509460508] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508246958054, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460508, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460508] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461084, 'factor': 0, 'flags': 0, 'id': 1508246997127, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460442, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509460509] sched.py:answerCard(): 
[1509460509] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508246997127, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460509, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460509] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461100, 'factor': 0, 'flags': 0, 'id': 1508247063792, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460455, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509460510] sched.py:answerCard(): 
[1509460510] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247063792, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460510, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460510] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461106, 'factor': 0, 'flags': 0, 'id': 1508248171938, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460504, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509460512] sched.py:answerCard(): 
[1509460512] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508248171938, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460512, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460512] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461150, 'factor': 0, 'flags': 0, 'id': 1508247507886, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460459, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509460513] sched.py:answerCard(): 
[1509460513] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247507886, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460513, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509460513] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509461152, 'factor': 0, 'flags': 0, 'id': 1508247899333, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509460412, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509460514] sched.py:answerCard(): 
[1509460514] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247899333, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460514, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509472937] sched.py:_updateCutoff(): 208, 1509559200
[1509472937] sched.py:unburyCards(): []
[1509503424] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247063792, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460510, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1}
[1509503446] sched.py:answerCard(): 
[1509503446] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 210, 'factor': 2500, 'flags': 0, 'id': 1508247063792, 'ivl': 2, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509503446, 'nid': 1508246997131, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503446] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247899333, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460514, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1}
[1509503464] sched.py:answerCard(): 
[1509503464] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 211, 'factor': 2500, 'flags': 0, 'id': 1508247899333, 'ivl': 3, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509503464, 'nid': 1508247845777, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503464] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508246958054, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460508, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1}
[1509503480] sched.py:answerCard(): 
[1509503480] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509504080, 'factor': 2300, 'flags': 0, 'id': 1508246958054, 'ivl': 1, 'lapses': 1, 'lastIvl': 1, 'left': 1001, 'mod': 1509503480, 'nid': 1508246934102, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503480] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247507886, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460513, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1}
[1509503538] sched.py:answerCard(): 
[1509503538] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509504138, 'factor': 2300, 'flags': 0, 'id': 1508247507886, 'ivl': 1, 'lapses': 1, 'lastIvl': 1, 'left': 1001, 'mod': 1509503538, 'nid': 1508247063795, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503538] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508246997127, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460509, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1}
[1509503575] sched.py:answerCard(): 
[1509503575] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 1509504175, 'factor': 2300, 'flags': 0, 'id': 1508246997127, 'ivl': 1, 'lapses': 1, 'lastIvl': 1, 'left': 1001, 'mod': 1509503575, 'nid': 1508246958238, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503575] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508247845767, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460462, 'nid': 1508247507905, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1}
[1509503580] sched.py:answerCard(): 
[1509503580] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 211, 'factor': 2500, 'flags': 0, 'id': 1508247845767, 'ivl': 3, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509503580, 'nid': 1508247507905, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503580] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508248171938, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460512, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1}
[1509503588] sched.py:answerCard(): 
[1509503588] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 210, 'factor': 2500, 'flags': 0, 'id': 1508248171938, 'ivl': 2, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509503588, 'nid': 1508248093653, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503588] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508248076701, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509460507, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1}
[1509503597] sched.py:answerCard(): 
[1509503597] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 210, 'factor': 2500, 'flags': 0, 'id': 1508248076701, 'ivl': 2, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509503597, 'nid': 1508247899336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503597] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509504080, 'factor': 2300, 'flags': 0, 'id': 1508246958054, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503480, 'nid': 1508246934102, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1}
[1509503602] sched.py:answerCard(): 
[1509503602] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 209, 'factor': 2300, 'flags': 0, 'id': 1508246958054, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503602, 'nid': 1508246934102, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503602] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509504138, 'factor': 2300, 'flags': 0, 'id': 1508247507886, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503538, 'nid': 1508247063795, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1}
[1509503604] sched.py:answerCard(): 
[1509503604] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 209, 'factor': 2300, 'flags': 0, 'id': 1508247507886, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503604, 'nid': 1508247063795, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503604] sched.py:getCard(): {'data': u'', 'did': 1508246909407, 'due': 1509504175, 'factor': 2300, 'flags': 0, 'id': 1508246997127, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503575, 'nid': 1508246958238, 'odid': 0, 'odue': 209, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 2, 'usn': -1}
[1509503609] sched.py:answerCard(): 
[1509503609] cards.py:flushSched(): {'data': u'', 'did': 1508246909407, 'due': 209, 'factor': 2300, 'flags': 0, 'id': 1508246997127, 'ivl': 1, 'lapses': 1, 'left': 1001, 'mod': 1509503609, 'nid': 1508246958238, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1, 'wasNew': False}
[1509503611] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509503611] sched.py:_updateCutoff(): 208, 1509559200
[1509503668] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509503668] sched.py:_updateCutoff(): 208, 1509559200
[1509503689] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509503689] sched.py:_updateCutoff(): 208, 1509559200
[1509503719] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244725000, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459439, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1}
[1509513497] sched.py:answerCard(): 
[1509513497] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 211, 'factor': 2500, 'flags': 0, 'id': 1508244725000, 'ivl': 3, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509513497, 'nid': 1508244662211, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 7, 'type': 2, 'usn': -1, 'wasNew': False}
[1509513497] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508245805009, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459525, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1}
[1509514515] sched.py:answerCard(): 
[1509514515] cards.py:flushSched(): {'data': u'', 'did': 1508222056817, 'due': 210, 'factor': 2350, 'flags': 0, 'id': 1508245805009, 'ivl': 2, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509514515, 'nid': 1508245138336, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514515] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508223703777, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509427208, 'nid': 1508223625349, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': 72}
[1509514528] sched.py:getCard(): {'data': u'', 'did': 1508222056817, 'due': 208, 'factor': 2500, 'flags': 0, 'id': 1508244582158, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509459445, 'nid': 1508244503651, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1}
[1509514533] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820957, 'factor': 0, 'flags': 0, 'id': 1508325240342, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820272, 'nid': 1508325174387, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514541] sched.py:answerCard(): 
[1509514541] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508325240342, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514541, 'nid': 1508325174387, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514541] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820975, 'factor': 0, 'flags': 0, 'id': 1508327458673, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820345, 'nid': 1508327432516, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514555] sched.py:answerCard(): 
[1509514555] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508327458673, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514555, 'nid': 1508327432516, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514555] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508820989, 'factor': 0, 'flags': 0, 'id': 1508326710444, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820303, 'nid': 1508326419781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514560] sched.py:answerCard(): 
[1509514560] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508326710444, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514560, 'nid': 1508326419781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514560] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508821010, 'factor': 0, 'flags': 0, 'id': 1508327432508, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820329, 'nid': 1508326710449, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514569] sched.py:answerCard(): 
[1509514569] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508327432508, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514569, 'nid': 1508326710449, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514569] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508821042, 'factor': 0, 'flags': 0, 'id': 1508328513584, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820425, 'nid': 1508327535280, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514585] sched.py:answerCard(): 
[1509514585] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508328513584, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514585, 'nid': 1508327535280, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514585] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508821068, 'factor': 0, 'flags': 0, 'id': 1508327535276, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820386, 'nid': 1508327458678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 60}
[1509514674] sched.py:answerCard(): 
[1509514674] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508327535276, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514674, 'nid': 1508327458678, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514674] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1508821110, 'factor': 0, 'flags': 0, 'id': 1508325321814, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1508820392, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 60}
[1509514757] sched.py:answerCard(): 
[1509514757] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508325321814, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509514757, 'nid': 1508325240346, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514757] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 201, 'factor': 2500, 'flags': 0, 'id': 1508325174211, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1508820428, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': 60}
[1509514767] sched.py:answerCard(): 
[1509514767] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 216, 'factor': 2500, 'flags': 0, 'id': 1508325174211, 'ivl': 8, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509514767, 'nid': 1508325090627, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514767] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1364, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508820844, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509514800] sched.py:answerCard(): 
[1509514800] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509514873, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509514800, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509514800] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 201, 'factor': 2500, 'flags': 0, 'id': 1508326419771, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1508820426, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': 60}
[1509514857] sched.py:answerCard(): 
[1509514857] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 216, 'factor': 2500, 'flags': 0, 'id': 1508326419771, 'ivl': 8, 'lapses': 0, 'lastIvl': 1, 'left': 1001, 'mod': 1509514857, 'nid': 1508325321817, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509514857] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1365, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822319, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515026] sched.py:answerCard(): 
[1509515026] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515090, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515026, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515026] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509514873, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509514800, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515077] sched.py:answerCard(): 
[1509515077] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515146, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515077, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515077] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1366, 'factor': 0, 'flags': 0, 'id': 1508822407730, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822407, 'nid': 1508822320007, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515087] sched.py:answerCard(): 
[1509515087] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515697, 'factor': 0, 'flags': 0, 'id': 1508822407730, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515087, 'nid': 1508822320007, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515087] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1367, 'factor': 0, 'flags': 0, 'id': 1508822455386, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822455, 'nid': 1508822407735, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515092] sched.py:answerCard(): 
[1509515092] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515819, 'factor': 0, 'flags': 0, 'id': 1508822455386, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515092, 'nid': 1508822407735, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515092] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515090, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515026, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515109] sched.py:answerCard(): 
[1509515109] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515733, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515109, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515109] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1368, 'factor': 0, 'flags': 0, 'id': 1508822543718, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822543, 'nid': 1508822455391, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515269] sched.py:answerCard(): 
[1509515269] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515996, 'factor': 0, 'flags': 0, 'id': 1508822543718, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515269, 'nid': 1508822455391, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515269] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515146, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515077, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509515274] sched.py:answerCard(): 
[1509515274] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515908, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515274, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515274] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1369, 'factor': 0, 'flags': 0, 'id': 1508822733373, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508822733, 'nid': 1508822621166, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515288] sched.py:answerCard(): 
[1509515288] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515920, 'factor': 0, 'flags': 0, 'id': 1508822733373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515288, 'nid': 1508822621166, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515288] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1370, 'factor': 0, 'flags': 0, 'id': 1508824473385, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508824473, 'nid': 1508822733485, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515295] sched.py:answerCard(): 
[1509515295] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515902, 'factor': 0, 'flags': 0, 'id': 1508824473385, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515295, 'nid': 1508822733485, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515295] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1371, 'factor': 0, 'flags': 0, 'id': 1508824535801, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508824535, 'nid': 1508824473393, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515310] sched.py:answerCard(): 
[1509515310] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516039, 'factor': 0, 'flags': 0, 'id': 1508824535801, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515310, 'nid': 1508824473393, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515310] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1372, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825196, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515343] sched.py:answerCard(): 
[1509515343] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516015, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515343, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515343] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1373, 'factor': 0, 'flags': 0, 'id': 1508825596545, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825596, 'nid': 1508825196960, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515381] sched.py:answerCard(): 
[1509515381] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515444, 'factor': 0, 'flags': 0, 'id': 1508825596545, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515381, 'nid': 1508825196960, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515381] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1374, 'factor': 0, 'flags': 0, 'id': 1508825736407, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1508825736, 'nid': 1508825596554, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 61}
[1509515423] sched.py:answerCard(): 
[1509515423] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509515494, 'factor': 0, 'flags': 0, 'id': 1508825736407, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515423, 'nid': 1508825596554, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515423] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1375, 'factor': 0, 'flags': 0, 'id': 1509163789923, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509163789, 'nid': 1509163761999, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509515431] sched.py:answerCard(): 
[1509515431] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516151, 'factor': 0, 'flags': 0, 'id': 1509163789923, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515431, 'nid': 1509163761999, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515431] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1376, 'factor': 0, 'flags': 0, 'id': 1509163863136, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509163863, 'nid': 1509163790114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509515434] sched.py:answerCard(): 
[1509515434] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516073, 'factor': 0, 'flags': 0, 'id': 1509163863136, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515434, 'nid': 1509163790114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515434] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1377, 'factor': 0, 'flags': 0, 'id': 1509164137933, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509164137, 'nid': 1509163863141, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509515441] sched.py:answerCard(): 
[1509515441] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516153, 'factor': 0, 'flags': 0, 'id': 1509164137933, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515441, 'nid': 1509163863141, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515441] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1378, 'factor': 0, 'flags': 0, 'id': 1509164678593, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509164678, 'nid': 1509164137950, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509515842] sched.py:answerCard(): 
[1509515842] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516498, 'factor': 0, 'flags': 0, 'id': 1509164678593, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515842, 'nid': 1509164137950, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509515842] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515444, 'factor': 0, 'flags': 0, 'id': 1508825596545, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515381, 'nid': 1508825196960, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515893] sched.py:answerCard(): 
[1509515893] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516576, 'factor': 0, 'flags': 0, 'id': 1508825596545, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515893, 'nid': 1508825196960, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515893] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515494, 'factor': 0, 'flags': 0, 'id': 1508825736407, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515423, 'nid': 1508825596554, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515918] sched.py:answerCard(): 
[1509515918] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516640, 'factor': 0, 'flags': 0, 'id': 1508825736407, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515918, 'nid': 1508825596554, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515918] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515697, 'factor': 0, 'flags': 0, 'id': 1508822407730, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515087, 'nid': 1508822320007, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515922] sched.py:answerCard(): 
[1509515922] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508822407730, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509515922, 'nid': 1508822320007, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509515922] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515733, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515109, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509515965] sched.py:answerCard(): 
[1509515965] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516035, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515965, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509515965] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515819, 'factor': 0, 'flags': 0, 'id': 1508822455386, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515092, 'nid': 1508822407735, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515968] sched.py:answerCard(): 
[1509515968] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508822455386, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509515968, 'nid': 1508822407735, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509515968] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515902, 'factor': 0, 'flags': 0, 'id': 1508824473385, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515295, 'nid': 1508822733485, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509515981] sched.py:answerCard(): 
[1509515981] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508824473385, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509515981, 'nid': 1508822733485, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509515981] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515908, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515274, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509516019] sched.py:answerCard(): 
[1509516019] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516093, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509516019, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509516019] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515920, 'factor': 0, 'flags': 0, 'id': 1508822733373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515288, 'nid': 1508822621166, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509516037] sched.py:answerCard(): 
[1509516037] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508822733373, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509516037, 'nid': 1508822621166, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509516037] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509515996, 'factor': 0, 'flags': 0, 'id': 1508822543718, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515269, 'nid': 1508822455391, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509516082] sched.py:answerCard(): 
[1509516082] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508822543718, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509516082, 'nid': 1508822455391, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509516082] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516015, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515343, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509516087] sched.py:answerCard(): 
[1509516087] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516150, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509516087, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509516087] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516035, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509515965, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509516140] sched.py:answerCard(): 
[1509516140] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516784, 'factor': 0, 'flags': 0, 'id': 1508822319996, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509516140, 'nid': 1508820844201, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509516140] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516039, 'factor': 0, 'flags': 0, 'id': 1508824535801, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515310, 'nid': 1508824473393, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509516230] sched.py:answerCard(): 
[1509516230] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1508824535801, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509516230, 'nid': 1508824473393, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509516230] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516073, 'factor': 0, 'flags': 0, 'id': 1509163863136, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515434, 'nid': 1509163790114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509516236] sched.py:answerCard(): 
[1509516236] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 209, 'factor': 2500, 'flags': 0, 'id': 1509163863136, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509516236, 'nid': 1509163790114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509516236] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516093, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509516019, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509516241] sched.py:answerCard(): 
[1509516241] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516974, 'factor': 0, 'flags': 0, 'id': 1508820844058, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509516241, 'nid': 1508820770496, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509516241] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516150, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509516087, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509516247] sched.py:answerCard(): 
[1509516247] cards.py:flushSched(): {'data': u'', 'did': 1508325121697, 'due': 1509516939, 'factor': 0, 'flags': 0, 'id': 1508825196836, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509516247, 'nid': 1508824622753, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509516247] sched.py:getCard(): {'data': u'', 'did': 1508325121697, 'due': 1509516151, 'factor': 0, 'flags': 0, 'id': 1509163789923, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509515431, '[1509531109] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509531109] sched.py:_updateCutoff(): 208, 1509559200
[1509531111] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509455529226,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509531111,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 74}
[1509531111] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509518303086,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509531111,
 'usn': 74}
[1509531112] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509531112] sync.py:newerRows(): cards, []
[1509531112] sync.py:newerRows(): notes, []
[1509531112] sync.py:sync(): client chunk, {'cards': [(1508244503647,
            1508244414594,
            1508222056817,
            0,
            1509459431,
            74,
            2,
            2,
            208,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244582158,
            1508244503651,
            1508222056817,
            0,
            1509459445,
            74,
            2,
            2,
            208,
            1,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244725000,
            1508244662211,
            1508222056817,
            0,
            1509513497,
            74,
            2,
            2,
            211,
            3,
            2500,
            7,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244739772,
            1508244725010,
            1508222056817,
            0,
            1509459451,
            74,
            2,
            2,
            208,
            1,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244760697,
            1508244739776,
            1508222056817,
            0,
            1509459460,
            74,
            2,
            2,
            208,
            1,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508244962306,
            1508244922305,
            1508222056817,
            0,
            1509459456,
            74,
            2,
            2,
            208,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508245138329,
            1508244962308,
            1508222056817,
            0,
            1509459468,
            74,
            2,
            2,
            208,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508245805009,
            1508245138336,
            1508222056817,
            0,
            1509514515,
            74,
            2,
            2,
            210,
            2,
            2350,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508245924149,
            1508245805023,
            1508222056817,
            0,
            1509459514,
            74,
            2,
            2,
            208,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508246087549,
            1508245924151,
            1508222056817,
            0,
            1509459526,
            74,
            2,
            2,
            208,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508246958054,
            1508246934102,
            1508246909407,
            0,
            1509503602,
            74,
            2,
            2,
            209,
            1,
            2300,
            6,
            1,
            1001,
            0,
            0,
            0,
            u''),
           (1508246997127,
            1508246958238,
            1508246909407,
            0,
            1509503609,
            74,
            2,
            2,
            209,
            1,
            2300,
            6,
            1,
            1001,
            0,
            0,
            0,
            u''),
           (1508247063792,
            1508246997131,
            1508246909407,
            0,
            1509503446,
            74,
            2,
            2,
            210,
            2,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508247507886,
            1508247063795,
            1508246909407,
            0,
            1509503604,
            74,
            2,
            2,
            209,
            1,
            2300,
            6,
            1,
            1001,
            0,
            0,
            0,
            u''),
           (1508247845767,
            1508247507905,
            1508246909407,
            0,
            1509503580,
            74,
            2,
            2,
            211,
            3,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508247899333,
            1508247845777,
            1508246909407,
            0,
            1509503464,
            74,
            2,
            2,
            211,
            3,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508248076701,
            1508247899336,
            1508246909407,
            0,
            1509503597,
            74,
            2,
            2,
            210,
            2,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508248171938,
            1508248093653,
            1508246909407,
            0,
            1509503588,
            74,
            2,
            2,
            210,
            2,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508325174211,
            1508325090627,
            1508325121697,
            0,
            1509514767,
            74,
            2,
            2,
            216,
            8,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508325240342,
            1508325174387,
            1508325121697,
            0,
            1509514541,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508325321814,
            1508325240346,
            1508325121697,
            0,
            1509514757,
            74,
            2,
            2,
            209,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508326419771,
            1508325321817,
            1508325121697,
            0,
            1509514857,
            74,
            2,
            2,
            216,
            8,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508326710444,
            1508326419781,
            1508325121697,
            0,
            1509514560,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327432508,
            1508326710449,
            1508325121697,
            0,
            1509514569,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327458673,
            1508327432516,
            1508325121697,
            0,
            1509514555,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508327535276,
            1508327458678,
            1508325121697,
            0,
            1509514674,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508328513584,
            1508327535280,
            1508325121697,
            0,
            1509514585,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508820844058,
            1508820770496,
            1508325121697,
            0,
            1509516241,
            74,
            1,
            1,
            1509516974,
            0,
            0,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508822319996,
            1508820844201,
            1508325121697,
            0,
            1509516140,
            74,
            1,
            1,
            1509516784,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508822407730,
            1508822320007,
            1508325121697,
            0,
            1509515922,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508822455386,
            1508822407735,
            1508325121697,
            0,
            1509515968,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508822543718,
            1508822455391,
            1508325121697,
            0,
            1509516082,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508822733373,
            1508822621166,
            1508325121697,
            0,
            1509516037,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508824473385,
            1508822733485,
            1508325121697,
            0,
            1509515981,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508824535801,
            1508824473393,
            1508325121697,
            0,
            1509516230,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508825196836,
            1508824622753,
            1508325121697,
            0,
            1509516247,
            74,
            1,
            1,
            1509516939,
            0,
            0,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508825596545,
            1508825196960,
            1508325121697,
            0,
            1509515893,
            74,
            1,
            1,
            1509516576,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1508825736407,
            1508825596554,
            1508325121697,
            0,
            1509515918,
            74,
            1,
            1,
            1509516640,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509163789923,
            1509163761999,
            1508325121697,
            0,
            1509516255,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509163863136,
            1509163790114,
            1508325121697,
            0,
            1509516236,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509164137933,
            1509163863141,
            1508325121697,
            0,
            1509516259,
            74,
            2,
            2,
            209,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509164678593,
            1509164137950,
            1508325121697,
            0,
            1509515842,
            74,
            1,
            1,
            1509516498,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509164792016,
            1509164678602,
            1508325121697,
            0,
            1509516357,
            74,
            1,
            1,
            1509516422,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509173553079,
            1509164792019,
            1508325121697,
            0,
            1509516364,
            74,
            1,
            1,
            1509516431,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509174627339,
            1509173553087,
            1508325121697,
            0,
            1509517683,
            74,
            1,
            1,
            1509517752,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509455299000,
            1509455239452,
            1508222056817,
            0,
            1509459519,
            74,
            2,
            2,
            208,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1508245138336,
            u'Ob#6[hTKVO',
            1491545041634,
            1509455700,
            74,
            u' AI Algorithm Alpha-beta Minimax ',
            u"Does ordering matter for alpha-beta pruning, if so what sort of ordering would result in the best complexity?\x1f<div>Yes.</div><div><br /></div><div>If the min-children of a max node are ordered in decreasing value, and max-children of a min node are ordered in increasing value the run time is:<br /></div><div><br /></div><div>[$]O(b^{h/2})[/$]</div><div><br /></div><div>If you shuffle them, it's</div><div><br /></div><div>[$]O(b^{3h/4})[/$]</div><div><br /></div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1508325240346,
            u'ECkpcm|h0D',
            1491545041634,
            1509514748,
            74,
            u'',
            u"How do you define an MDP problem?\x1f<div>Use STAR</div><div><br /></div><div>State Space</div><div><br /></div><div>Action Space</div><div><br /></div><div>Transition Function T(s, a, s')</div><div><br /></div><div>Reward Function R(s) OR R(s, a) OR R(s, a, s')</div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1508325321817,
            u'IspX(nLg`P',
            1491545041634,
            1509514856,
            74,
            u'',
            u"For an agent with 4 actions, how many transition matrices do you need?\x1f<div>The transition function is Pr(s' | s, a) so we need one for each action, where each matrix tells us the probability of going from one state to another under an action.</div><div><br /></div>1 for each action, so 4.\x1f",
            u'',
            u'',
            0,
            u''),
           (1508327458678,
            u'JuWwbv*R>j',
            1491545041634,
            1509514671,
            74,
            u'',
            u'What is the goal of an MDP agent?\x1fAn MDP agent receives a reward after each action.<div><br /></div><div>The goal of the MDP agent is to gather the highest total reward possible.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508822455391,
            u'd9I^R454%9',
            1491545041634,
            1509515260,
            74,
            u'',
            u'What is an optimal policy with respect to the value function?\x1f<div>- Every policy has a value function that resulted in that policy getting the action it got</div><div><br /></div><div>- An optimal policy is a policy where the value function that resulted in that policy is the maximum.</div><div><br /></div><div><img src="paste-6635724472322.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1508825596554,
            u'Eo##Vs2^k<',
            1491545041634,
            1509515914,
            74,
            u' TODO ',
            u'What is policy iteration?\x1f<img src="paste-10831907520514.jpg" /><div>Don\'t know</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509164678602,
            u'k3U6;tdf>q',
            1491545041634,
            1509517760,
            74,
            u'',
            u'What is Real-time Dynamic Programming (RTDP)\x1f<img src="paste-2976412336130.jpg" /><div><img src="paste-19636590477314.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1509459427938, 1508245805009, 74, 2, -600, -60, 0, 5877, 0),
            (1509459431412, 1508244503647, 74, 2, 1, -600, 2500, 3465, 0),
            (1509459439934, 1508244725000, 74, 2, 1, -600, 2500, 8518, 0),
            (1509459445979, 1508244582158, 74, 2, 1, -600, 2500, 6043, 0),
            (1509459451400, 1508244739772, 74, 2, 1, -600, 2500, 5418, 0),
            (1509459456407, 1508244962306, 74, 2, 1, -600, 2500, 5004, 0),
            (1509459460732, 1508244760697, 74, 2, 1, -600, 2500, 4321, 0),
            (1509459468633, 1508245138329, 74, 2, 1, -600, 2500, 7896, 0),
            (1509459485843, 1508245924149, 74, 2, -600, -60, 0, 17206, 0),
            (1509459492486, 1508246087549, 74, 2, -600, -60, 0, 6638, 0),
            (1509459511037, 1509455299000, 74, 2, -600, -60, 0, 18548, 0),
            (1509459514311, 1508245924149, 74, 2, 1, -600, 2500, 3270, 0),
            (1509459519418, 1509455299000, 74, 2, 1, -600, 2500, 5104, 0),
            (1509459525068, 1508245805009, 74, 2, 1, -600, 2500, 5646, 0),
            (1509459526436, 1508246087549, 74, 2, 1, -600, 2500, 1366, 0),
            (1509460412647, 1508247899333, 74, 2, -600, -60, 0, 6596, 0),
            (1509460414514, 1508248076701, 74, 2, -600, -60, 0, 1856, 0),
            (1509460420727, 1508246958054, 74, 2, -600, -60, 0, 6211, 0),
            (1509460442470, 1508246997127, 74, 2, -600, -60, 0, 21739, 0),
            (1509460455399, 1508247063792, 74, 2, -600, -60, 0, 12924, 0),
            (1509460459639, 1508247507886, 74, 2, -600, -60, 0, 4236, 0),
            (1509460462010, 1508247845767, 74, 2, 1, -600, 2500, 2366, 0),
            (1509460504377, 1508248171938, 74, 2, -600, -60, 0, 42362, 0),
            (1509460507759, 1508248076701, 74, 2, 1, -600, 2500, 3380, 0),
            (1509460508772, 1508246958054, 74, 2, 1, -600, 2500, 1009, 0),
            (1509460509692, 1508246997127, 74, 2, 1, -600, 2500, 916, 0),
            (1509460510923, 1508247063792, 74, 2, 1, -600, 2500, 1229, 0),
            (1509460512119, 1508248171938, 74, 2, 1, -600, 2500, 1192, 0),
            (1509460513271, 1508247507886, 74, 2, 1, -600, 2500, 1148, 0),
            (1509460514557, 1508247899333, 74, 2, 1, -600, 2500, 1282, 0),
            (1509503446492, 1508247063792, 74, 3, 2, 1, 2500, 21900, 1),
            (1509503464105, 1508247899333, 74, 3, 3, 1, 2500, 17600, 1),
            (1509503480750, 1508246958054, 74, 1, -600, 1, 2300, 16641, 1),
            (1509503538323, 1508247507886, 74, 1, -600, 1, 2300, 57570, 1),
            (1509503575703, 1508246997127, 74, 1, -600, 1, 2300, 37375, 1),
            (1509503580408, 1508247845767, 74, 3, 3, 1, 2500, 4701, 1),
            (1509503588613, 1508248171938, 74, 3, 2, 1, 2500, 8200, 1),
            (1509503597864, 1508248076701, 74, 3, 2, 1, 2500, 9247, 1),
            (1509503602007, 1508246958054, 74, 2, 1, -600, 2300, 4140, 2),
            (1509503604681, 1508247507886, 74, 2, 1, -600, 2300, 2669, 2),
            (1509503609324, 1508246997127, 74, 2, 1, -600, 2300, 4639, 2),
            (1509513497222, 1508244725000, 74, 3, 3, 1, 2500, 60000, 1),
            (1509514515933, 1508245805009, 74, 2, 2, 1, 2350, 60000, 1),
            (1509514541813, 1508325240342, 74, 2, 1, -600, 2500, 7919, 0),
            (1509514555721, 1508327458673, 74, 2, 1, -600, 2500, 13904, 0),
            (1509514560334, 1508326710444, 74, 2, 1, -600, 2500, 4608, 0),
            (1509514569865, 1508327432508, 74, 2, 1, -600, 2500, 9527, 0),
            (1509514585707, 1508328513584, 74, 2, 1, -600, 2500, 15838, 0),
            (1509514674190, 1508327535276, 74, 2, 1, -600, 2500, 1738, 0),
            (1509514757553, 1508325321814, 74, 2, 1, -600, 2500, 6861, 0),
            (1509514767675, 1508325174211, 74, 3, 8, 1, 2500, 10114, 1),
            (1509514800570, 1508820844058, 74, 1, -60, -60, 0, 32891, 0),
            (1509514857316, 1508326419771, 74, 3, 8, 1, 2500, 1162, 1),
            (1509515026292, 1508822319996, 74, 1, -60, -60, 0, 60000, 0),
            (1509515077183, 1508820844058, 74, 1, -60, -60, 0, 50888, 0),
            (1509515087569, 1508822407730, 74, 2, -600, -60, 0, 10382, 0),
            (1509515092690, 1508822455386, 74, 2, -600, -60, 0, 5117, 0),
            (1509515109506, 1508822319996, 74, 2, -600, -60, 0, 16812, 0),
            (1509515269015, 1508822543718, 74, 2, -600, -60, 0, 4490, 0),
            (1509515274877, 1508820844058, 74, 2, -600, -60, 0, 5854, 0),
            (1509515288362, 1508822733373, 74, 2, -600, -60, 0, 13480, 0),
            (1509515295084, 1508824473385, 74, 2, -600, -60, 0, 6717, 0),
            (1509515310835, 1508824535801, 74, 2, -600, -60, 0, 15748, 0),
            (1509515343113, 1508825196836, 74, 2, -600, -60, 0, 32272, 0),
            (1509515381730, 1508825596545, 74, 1, -60, -60, 0, 38614, 0),
            (1509515423328, 1508825736407, 74, 1, -60, -60, 0, 41594, 0),
            (1509515431386, 1509163789923, 74, 2, -600, -60, 0, 8054, 0),
            (1509515434980, 1509163863136, 74, 2, -600, -60, 0, 3591, 0),
            (1509515441586, 1509164137933, 74, 2, -600, -60, 0, 6602, 0),
            (1509515842738, 1509164678593, 74, 2, -600, -60, 0, 60000, 0),
            (1509515893782, 1508825596545, 74, 2, -600, -60, 0, 50961, 0),
            (1509515918010, 1508825736407, 74, 2, -600, -60, 0, 3102, 0),
            (1509515922879, 1508822407730, 74, 2, 1, -600, 2500, 4863, 0),
            (1509515965076, 1508822319996, 74, 1, -60, -600, 0, 42193, 0),
            (1509515968773, 1508822455386, 74, 2, 1, -600, 2500, 3693, 0),
            (1509515981811, 1508824473385, 74, 2, 1, -600, 2500, 13033, 0),
            (1509516019865, 1508820844058, 74, 1, -60, -600, 0, 38051, 0),
            (1509516037729, 1508822733373, 74, 2, 1, -600, 2500, 17860, 0),
            (1509516082464, 1508822543718, 74, 2, 1, -600, 2500, 44731, 0),
            (1509516087659, 1508825196836, 74, 1, -60, -600, 0, 5190, 0),
            (1509516140155, 1508822319996, 74, 2, -600, -60, 0, 52492, 0),
            (1509516230054, 1508824535801, 74, 2, 1, -600, 2500, 60000, 0),
            (1509516236931, 1509163863136, 74, 2, 1, -600, 2500, 6865, 0),
            (1509516241580, 1508820844058, 74, 2, -600, -60, 0, 4646, 0),
            (1509516247796, 1508825196836, 74, 2, -600, -60, 0, 6212, 0),
            (1509516255186, 1509163789923, 74, 2, 1, -600, 2500, 7386, 0),
            (1509516259511, 1509164137933, 74, 2, 1, -600, 2500, 4321, 0),
            (1509516357821, 1509164792016, 74, 1, -60, -60, 0, 60000, 0),
            (1509516364340, 1509173553079, 74, 1, -60, -60, 0, 6515, 0),
            (1509517683547, 1509174627339, 74, 1, -60, -60, 0, 60000, 0)]}
[1509531113] sync.py:sync(): findChanges
[1509531114] sync.py:sync(): last local usn is 766
[1509531114] sync.py:sync(): mediaChanges resp count 0
[1509531114] media.py:mediaChangesZip(): +media zip, latex-f446e3cb57464e2cf4147aa584c40c46f742536a.png
[1509531114] media.py:mediaChangesZip(): +media zip, latex-592fc4c8dacbb1855500710c1b367aa27671009f.png
[1509531114] media.py:mediaChangesZip(): +media zip, paste-19636590477314.jpg
[1509531115] sync.py:sync(): processed 3, serverUsn 769, clientUsn 766
[1509531115] sync.py:sync(): lastUsn in sync, updating local
[1509688893] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509688893] sched.py:_updateCutoff(): 210, 1509732000
[1509688893] sched.py:unburyCards(): []
[1509688895] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509531113158,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509688895,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 75}
[1509688895] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509688893845,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509688895,
 'usn': 75}
[1509688896] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509688896] sync.py:newerRows(): cards, []
[1509688896] sync.py:newerRows(): notes, []
[1509688896] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1509688897] sync.py:sync(): findChanges
[1509688899] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509688899] sched.py:_updateCutoff(): 210, 1509732000
[1509688933] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1390, 'factor': 0, 'flags': 0, 'id': 1509178968303, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178968, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509707751] cards.py:flush(): {'crt': 1509707751, 'data': '', 'did': 1509178930435, 'due': 1454, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707751, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509707853] cards.py:flush(): {'crt': 1509707853, 'data': '', 'did': 1509178930435, 'due': 1455, 'factor': 0, 'flags': 0, 'id': 1509707853552, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707853, 'nid': 1509707751607, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509707920] cards.py:flush(): {'crt': 1509707920, 'data': '', 'did': 1509178930435, 'due': 1456, 'factor': 0, 'flags': 0, 'id': 1509707920791, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707920, 'nid': 1509707853557, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509708465] cards.py:flush(): {'crt': 1509708465, 'data': '', 'did': 1509178930435, 'due': 1457, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708465, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509708584] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509708584] sched.py:_updateCutoff(): 210, 1509732000
[1509708585] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509688897378,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509708585,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 76}
[1509708585] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509708584173,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509708585,
 'usn': 76}
[1509708586] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509708586] sync.py:newerRows(): cards, []
[1509708586] sync.py:newerRows(): notes, []
[1509708586] sync.py:sync(): client chunk, {'cards': [(1509707751419,
            1509707740012,
            1509178930435,
            0,
            1509707751,
            76,
            0,
            0,
            1454,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509707853552,
            1509707751607,
            1509178930435,
            0,
            1509707853,
            76,
            0,
            0,
            1455,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509707920791,
            1509707853557,
            1509178930435,
            0,
            1509707920,
            76,
            0,
            0,
            1456,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509708465541,
            1509708009165,
            1509178930435,
            0,
            1509708465,
            76,
            0,
            0,
            1457,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1509707740012,
            u'QoMbKo.Cke',
            1491545041634,
            1509707751,
            76,
            u'',
            u'How does the value function for POMDP work?\x1f<img src="paste-9732395892738.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509707751607,
            u'f1!)71|[Ok',
            1491545041634,
            1509707853,
            76,
            u'',
            u'How do you compute the next belief in POMDPs?\x1f<img src="paste-10990821310466.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509707853557,
            u'n)_tPM4$_/',
            1491545041634,
            1509708007,
            76,
            u'',
            u'What is the intuition behind a particle filter\x1f<img src="paste-11411728105474.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509708009165,
            u'd;]Qy{:a`+',
            1491545041634,
            1509708465,
            76,
            u'',
            u'Implement a particle filter?\x1f<img src="paste-17278653431810.jpg" /><div><img src="paste-17467631992834.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1509708588] sync.py:sync(): findChanges
[1509708589] sync.py:sync(): last local usn is 769
[1509708590] sync.py:sync(): mediaChanges resp count 0
[1509708590] media.py:mediaChangesZip(): +media zip, paste-17467631992834.jpg
[1509708590] media.py:mediaChangesZip(): +media zip, paste-10990821310466.jpg
[1509708590] media.py:mediaChangesZip(): +media zip, paste-9732395892738.jpg
[1509708590] media.py:mediaChangesZip(): +media zip, paste-17278653431810.jpg
[1509708590] media.py:mediaChangesZip(): +media zip, paste-11411728105474.jpg
[1509708592] sync.py:sync(): processed 5, serverUsn 774, clientUsn 769
[1509708592] sync.py:sync(): lastUsn in sync, updating local
[1509708675] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509708675] sched.py:_updateCutoff(): 210, 1509732000
[1509708676] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509708588278,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509708677,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 77}
[1509708677] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509708588278,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509708676,
 'usn': 77}
[1509708677] sync.py:sync(): no changes
[1509708677] sync.py:sync(): findChanges
[1509708678] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509708678] sched.py:_updateCutoff(): 210, 1509732000
[1509708739] cards.py:flush(): {'crt': 1509708739, 'data': '', 'did': 1509708710898, 'due': 1458, 'factor': 0, 'flags': 0, 'id': 1509708739284, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708739, 'nid': 1509708685577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509708778] cards.py:flush(): {'crt': 1509708778, 'data': '', 'did': 1509708710898, 'due': 1459, 'factor': 0, 'flags': 0, 'id': 1509708778612, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708778, 'nid': 1509708739416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509708989] cards.py:flush(): {'crt': 1509708989, 'data': '', 'did': 1509708854481, 'due': 1460, 'factor': 0, 'flags': 0, 'id': 1509708989859, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708989, 'nid': 1509708828114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709070] cards.py:flush(): {'crt': 1509709070, 'data': '', 'did': 1509708854481, 'due': 1461, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709070, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709260] cards.py:flush(): {'crt': 1509709260, 'data': '', 'did': 1509708854481, 'due': 1462, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709260, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709297] cards.py:flush(): {'crt': 1509709297, 'data': '', 'did': 1509708854481, 'due': 1463, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709297, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709337] cards.py:flush(): {'crt': 1509709337, 'data': '', 'did': 1509708854481, 'due': 1464, 'factor': 0, 'flags': 0, 'id': 1509709337215, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709337, 'nid': 1509709297846, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709355] cards.py:flush(): {'crt': 1509709355, 'data': '', 'did': 1509708854481, 'due': 1465, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709355, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709590] cards.py:flush(): {'crt': 1509709590, 'data': '', 'did': 1509708854481, 'due': 1466, 'factor': 0, 'flags': 0, 'id': 1509709590325, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709590, 'nid': 1509709355382, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509709613] cards.py:flush(): {'crt': 1509709613, 'data': '', 'did': 1509708854481, 'due': 1467, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709613, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710007] cards.py:flush(): {'crt': 1509710007, 'data': '', 'did': 1509708854481, 'due': 1468, 'factor': 0, 'flags': 0, 'id': 1509710007721, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710007, 'nid': 1509709613994, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710116] cards.py:flush(): {'crt': 1509710116, 'data': '', 'did': 1509708854481, 'due': 1469, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710116, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710146] cards.py:flush(): {'crt': 1509710146, 'data': '', 'did': 1509708854481, 'due': 1470, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710146, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710203] cards.py:flush(): {'crt': 1509710203, 'data': '', 'did': 1509708854481, 'due': 1471, 'factor': 0, 'flags': 0, 'id': 1509710203259, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710203, 'nid': 1509710146455, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710231] cards.py:flush(): {'crt': 1509710231, 'data': '', 'did': 1509708854481, 'due': 1472, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710231, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509710291] cards.py:flush(): {'crt': 1509710291, 'data': '', 'did': 1509708854481, 'due': 1473, 'factor': 0, 'flags': 0, 'id': 1509710291319, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710291, 'nid': 1509710231637, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509712823] cards.py:flush(): {'crt': 1509712823, 'data': '', 'did': 1509708854481, 'due': 1474, 'factor': 0, 'flags': 0, 'id': 1509712823823, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509712823, 'nid': 1509710291324, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713254] cards.py:flush(): {'crt': 1509713254, 'data': '', 'did': 1509708854481, 'due': 1475, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713254, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713285] cards.py:flush(): {'crt': 1509713285, 'data': '', 'did': 1509708854481, 'due': 1476, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713285, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713313] cards.py:flush(): {'crt': 1509713313, 'data': '', 'did': 1509708854481, 'due': 1477, 'factor': 0, 'flags': 0, 'id': 1509713313492, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713313, 'nid': 1509713285467, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713341] cards.py:flush(): {'crt': 1509713341, 'data': '', 'did': 1509708854481, 'due': 1478, 'factor': 0, 'flags': 0, 'id': 1509713341226, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713341, 'nid': 1509713313495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713374] cards.py:flush(): {'crt': 1509713374, 'data': '', 'did': 1509708854481, 'due': 1479, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713374, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713402] cards.py:flush(): {'crt': 1509713402, 'data': '', 'did': 1509708854481, 'due': 1480, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713402, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713427] cards.py:flush(): {'crt': 1509713427, 'data': '', 'did': 1509708854481, 'due': 1481, 'factor': 0, 'flags': 0, 'id': 1509713427587, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713427, 'nid': 1509713402978, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713458] cards.py:flush(): {'crt': 1509713458, 'data': '', 'did': 1509708854481, 'due': 1482, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713458, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713499] cards.py:flush(): {'crt': 1509713499, 'data': '', 'did': 1509708854481, 'due': 1483, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713499, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713519] cards.py:flush(): {'crt': 1509713519, 'data': '', 'did': 1509708854481, 'due': 1484, 'factor': 0, 'flags': 0, 'id': 1509713519970, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713519, 'nid': 1509713499996, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713691] cards.py:flush(): {'crt': 1509713691, 'data': '', 'did': 1509708854481, 'due': 1485, 'factor': 0, 'flags': 0, 'id': 1509713691510, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713691, 'nid': 1509713519974, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713712] cards.py:flush(): {'crt': 1509713712, 'data': '', 'did': 1509708854481, 'due': 1486, 'factor': 0, 'flags': 0, 'id': 1509713712622, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713712, 'nid': 1509713691519, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713767] cards.py:flush(): {'crt': 1509713767, 'data': '', 'did': 1509708854481, 'due': 1487, 'factor': 0, 'flags': 0, 'id': 1509713767970, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713767, 'nid': 1509713712629, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713797] cards.py:flush(): {'crt': 1509713797, 'data': '', 'did': 1509708854481, 'due': 1488, 'factor': 0, 'flags': 0, 'id': 1509713797777, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713797, 'nid': 1509713767977, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713812] cards.py:flush(): {'crt': 1509713812, 'data': '', 'did': 1509708854481, 'due': 1489, 'factor': 0, 'flags': 0, 'id': 1509713812802, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713812, 'nid': 1509713797780, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713865] cards.py:flush(): {'crt': 1509713865, 'data': '', 'did': 1509708854481, 'due': 1490, 'factor': 0, 'flags': 0, 'id': 1509713865655, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713865, 'nid': 1509713812808, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509713931] cards.py:flush(): {'crt': 1509713931, 'data': '', 'did': 1509708854481, 'due': 1491, 'factor': 0, 'flags': 0, 'id': 1509713931879, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713931, 'nid': 1509713865663, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509719880] cards.py:flush(): {'crt': 1509719880, 'data': '', 'did': 1509178930435, 'due': 1492, 'factor': 0, 'flags': 0, 'id': 1509719880749, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509719880, 'nid': 1509719866636, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509722565] cards.py:flush(): {'crt': 1509722565, 'data': '', 'did': 1509178930435, 'due': 1493, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722565, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509722719] cards.py:flush(): {'crt': 1509722719, 'data': '', 'did': 1509178930435, 'due': 1494, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722719, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509722825] cards.py:flush(): {'crt': 1509722825, 'data': '', 'did': 1509178930435, 'due': 1495, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722825, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509723960] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1390, 'factor': 0, 'flags': 0, 'id': 1509178968303, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509178968, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509723966] sched.py:answerCard(): 
[1509723966] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509724575, 'factor': 0, 'flags': 0, 'id': 1509178968303, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723966, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509723966] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1391, 'factor': 0, 'flags': 0, 'id': 1509179428263, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509179428, 'nid': 1509178968416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509723978] sched.py:answerCard(): 
[1509723979] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509724623, 'factor': 0, 'flags': 0, 'id': 1509179428263, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723979, 'nid': 1509178968416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509723979] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1392, 'factor': 0, 'flags': 0, 'id': 1509179552419, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509179552, 'nid': 1509179428270, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509723994] sched.py:answerCard(): 
[1509723994] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509724639, 'factor': 0, 'flags': 0, 'id': 1509179552419, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723994, 'nid': 1509179428270, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509723994] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1393, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509181352, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 64}
[1509724024] sched.py:answerCard(): 
[1509724024] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509724093, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509724024, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509724024] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1454, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707751, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 76}
[1509724030] sched.py:answerCard(): 
[1509724030] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509724098, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509724030, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509724030] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1455, 'factor': 0, 'flags': 0, 'id': 1509707853552, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707853, 'nid': 1509707751607, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 76}
[1509724039] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1456, 'factor': 0, 'flags': 0, 'id': 1509707920791, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707920, 'nid': 1509707853557, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 76}
[1509724794] cards.py:flush(): {'crt': 1509724794, 'data': '', 'did': 1509178930435, 'due': 1496, 'factor': 0, 'flags': 0, 'id': 1509724794186, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509724794, 'nid': 1509724624781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509729807] cards.py:flush(): {'crt': 1509729807, 'data': '', 'did': 1509178930435, 'due': 1497, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729807, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509729808] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724093, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509724024, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509729844] cards.py:flush(): {'crt': 1509729844, 'data': '', 'did': 1509708854481, 'due': 1498, 'factor': 0, 'flags': 0, 'id': 1509729844193, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729844, 'nid': 1509729814979, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509729855] cards.py:flush(): {'crt': 1509729855, 'data': '', 'did': 1509708854481, 'due': 1499, 'factor': 0, 'flags': 0, 'id': 1509729855874, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729855, 'nid': 1509729844303, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509729897] cards.py:flush(): {'crt': 1509729897, 'data': '', 'did': 1509708854481, 'due': 1500, 'factor': 0, 'flags': 0, 'id': 1509729897138, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729897, 'nid': 1509729855879, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509729918] cards.py:flush(): {'crt': 1509729918, 'data': '', 'did': 1509708854481, 'due': 1501, 'factor': 0, 'flags': 0, 'id': 1509729918020, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729918, 'nid': 1509729897142, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509730127] cards.py:flush(): {'crt': 1509730127, 'data': '', 'did': 1509708854481, 'due': 1502, 'factor': 0, 'flags': 0, 'id': 1509730127052, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730127, 'nid': 1509729918023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509730195] cards.py:flush(): {'crt': 1509730195, 'data': '', 'did': 1509708854481, 'due': 1503, 'factor': 0, 'flags': 0, 'id': 1509730195801, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730195, 'nid': 1509730127062, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509730499] cards.py:flush(): {'crt': 1509730499, 'data': '', 'did': 1509708854481, 'due': 1504, 'factor': 0, 'flags': 0, 'id': 1509730499569, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730499, 'nid': 1509730195807, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509730517] cards.py:flush(): {'crt': 1509730517, 'data': '', 'did': 1509708854481, 'due': 1505, 'factor': 0, 'flags': 0, 'id': 1509730517027, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730517, 'nid': 1509730499577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509731063] cards.py:flush(): {'crt': 1509731063, 'data': '', 'did': 1509708854481, 'due': 1506, 'factor': 0, 'flags': 0, 'id': 1509731063224, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509731063, 'nid': 1509730743332, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509779132] cards.py:flush(): {'crt': 1509779132, 'data': '', 'did': 1509708854481, 'due': 1507, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779132, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509779153] cards.py:flush(): {'crt': 1509779153, 'data': '', 'did': 1509708854481, 'due': 1508, 'factor': 0, 'flags': 0, 'id': 1509779153335, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779153, 'nid': 1509779132942, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509779242] cards.py:flush(): {'crt': 1509779242, 'data': '', 'did': 1509708854481, 'due': 1509, 'factor': 0, 'flags': 0, 'id': 1509779242713, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779242, 'nid': 1509779153341, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509779435] cards.py:flush(): {'crt': 1509779435, 'data': '', 'did': 1509708854481, 'due': 1510, 'factor': 0, 'flags': 0, 'id': 1509779435134, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779435, 'nid': 1509779242720, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509779467] sched.py:_updateCutoff(): 211, 1509818400
[1509779467] sched.py:unburyCards(): []
[1509782284] cards.py:flush(): {'crt': 1509782284, 'data': '', 'did': 1509708854481, 'due': 1511, 'factor': 0, 'flags': 0, 'id': 1509782284028, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509782284, 'nid': 1509779495053, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794577] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1460, 'factor': 0, 'flags': 0, 'id': 1509708989859, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708989, 'nid': 1509708828114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794616] sched.py:answerCard(): 
[1509794616] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795353, 'factor': 0, 'flags': 0, 'id': 1509708989859, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794616, 'nid': 1509708828114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509794616] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1461, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709070, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794668] sched.py:answerCard(): 
[1509794668] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794729, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794668, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509794668] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1462, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709260, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794687] sched.py:answerCard(): 
[1509794687] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794755, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794687, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509794687] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1463, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709297, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794748] sched.py:answerCard(): 
[1509794748] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794814, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794748, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509794748] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794729, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794668, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509794765] sched.py:answerCard(): 
[1509794765] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794834, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794765, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794765] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794755, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794687, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509794781] sched.py:answerCard(): 
[1509794781] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794848, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794781, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794781] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1464, 'factor': 0, 'flags': 0, 'id': 1509709337215, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709337, 'nid': 1509709297846, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794830] sched.py:buryCards(): [1509709337215]
[1509794830] sched.py:emptyDyn(): []
[1509794830] sched.py:emptyDyn(): []
[1509794830] sched.py:forgetCards(): []
[1509794830] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794814, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794748, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509794861] sched.py:answerCard(): 
[1509794861] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509794933, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794861, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794861] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794834, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794765, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509794865] sched.py:answerCard(): 
[1509794865] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795527, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794865, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794865] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794848, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794781, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509794873] sched.py:answerCard(): 
[1509794873] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795607, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794873, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794873] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1465, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709355, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509794963] sched.py:answerCard(): 
[1509794963] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795025, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794963, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509794963] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509794933, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794861, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509794976] sched.py:answerCard(): 
[1509794976] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795704, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794976, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509794976] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1466, 'factor': 0, 'flags': 0, 'id': 1509709590325, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709590, 'nid': 1509709355382, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509795125] sched.py:answerCard(): 
[1509795125] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795738, 'factor': 0, 'flags': 0, 'id': 1509709590325, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795125, 'nid': 1509709355382, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509795125] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795025, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509794963, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509795154] sched.py:answerCard(): 
[1509795154] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795225, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795154, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509795154] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1467, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509709613, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509795429] sched.py:answerCard(): 
[1509795429] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795500, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795429, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509795430] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795225, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795154, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509795454] sched.py:answerCard(): 
[1509795454] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795527, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795454, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509795454] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795353, 'factor': 0, 'flags': 0, 'id': 1509708989859, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794616, 'nid': 1509708828114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509795470] sched.py:answerCard(): 
[1509795470] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509708989859, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509795470, 'nid': 1509708828114, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509795470] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1468, 'factor': 0, 'flags': 0, 'id': 1509710007721, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710007, 'nid': 1509709613994, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509795557] sched.py:answerCard(): 
[1509795557] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796169, 'factor': 0, 'flags': 0, 'id': 1509710007721, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795557, 'nid': 1509709613994, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509795557] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795500, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795429, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509795578] sched.py:answerCard(): 
[1509795578] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509795641, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795578, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509795578] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795527, 'factor': 0, 'flags': 0, 'id': 1509709070070, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794865, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509795603] sched.py:answerCard(): 
[1509795603] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709070070, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509795603, 'nid': 1509708989980, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509795603] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795527, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795454, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509795606] sched.py:answerCard(): 
[1509795606] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796263, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795606, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509795606] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1469, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710116, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509796688] sched.py:answerCard(): 
[1509796688] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796759, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796688, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509796688] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795607, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794873, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509796732] sched.py:answerCard(): 
[1509796732] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796800, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796732, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796732] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795641, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509795578, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509796783] sched.py:answerCard(): 
[1509796783] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796851, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796783, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796783] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795704, 'factor': 0, 'flags': 0, 'id': 1509709297834, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509794976, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509796799] sched.py:answerCard(): 
[1509796799] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709297834, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509796799, 'nid': 1509709260285, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509796799] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509795738, 'factor': 0, 'flags': 0, 'id': 1509709590325, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795125, 'nid': 1509709355382, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509796812] sched.py:answerCard(): 
[1509796812] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709590325, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509796812, 'nid': 1509709355382, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509796812] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796169, 'factor': 0, 'flags': 0, 'id': 1509710007721, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795557, 'nid': 1509709613994, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509796822] sched.py:answerCard(): 
[1509796822] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710007721, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509796822, 'nid': 1509709613994, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509796822] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796263, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509795606, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509796835] sched.py:answerCard(): 
[1509796835] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509796897, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796835, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796835] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796759, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796688, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509796866] sched.py:answerCard(): 
[1509796866] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797604, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796866, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796866] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796800, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796732, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509796875] sched.py:answerCard(): 
[1509796875] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797564, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796875, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796875] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796851, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796783, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509796884] sched.py:answerCard(): 
[1509796884] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797492, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796884, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796884] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1470, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710146, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509796936] sched.py:answerCard(): 
[1509796936] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797543, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796936, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509796936] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509796897, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509796835, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509796957] sched.py:answerCard(): 
[1509796957] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797640, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796957, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1, 'wasNew': False}
[1509796957] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1471, 'factor': 0, 'flags': 0, 'id': 1509710203259, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710203, 'nid': 1509710146455, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509796970] sched.py:answerCard(): 
[1509796970] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797628, 'factor': 0, 'flags': 0, 'id': 1509710203259, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796970, 'nid': 1509710146455, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509796970] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1472, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710231, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797020] sched.py:answerCard(): 
[1509797020] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797082, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797020, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797020] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1473, 'factor': 0, 'flags': 0, 'id': 1509710291319, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509710291, 'nid': 1509710231637, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797095] sched.py:answerCard(): 
[1509797095] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797717, 'factor': 0, 'flags': 0, 'id': 1509710291319, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797095, 'nid': 1509710231637, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797095] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797082, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797020, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797129] sched.py:answerCard(): 
[1509797129] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797203, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797129, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797129] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1474, 'factor': 0, 'flags': 0, 'id': 1509712823823, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509712823, 'nid': 1509710291324, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797168] sched.py:answerCard(): 
[1509797168] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797899, 'factor': 0, 'flags': 0, 'id': 1509712823823, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797168, 'nid': 1509710291324, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797168] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1475, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713254, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797294] sched.py:answerCard(): 
[1509797294] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797366, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797294, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797294] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797203, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797129, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509797350] sched.py:answerCard(): 
[1509797350] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797415, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797350, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797350] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1476, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713285, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797419] sched.py:answerCard(): 
[1509797419] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797480, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797419, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797419] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797366, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797294, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797464] sched.py:answerCard(): 
[1509797464] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797533, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797464, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797464] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797415, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797350, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509797478] sched.py:answerCard(): 
[1509797478] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798203, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797478, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797478] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1477, 'factor': 0, 'flags': 0, 'id': 1509713313492, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713313, 'nid': 1509713285467, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797589] sched.py:answerCard(): 
[1509797589] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798290, 'factor': 0, 'flags': 0, 'id': 1509713313492, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797589, 'nid': 1509713285467, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797589] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797480, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797419, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797647] sched.py:answerCard(): 
[1509797647] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798372, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797647, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797647] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797492, 'factor': 0, 'flags': 0, 'id': 1509709613984, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796884, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509797667] sched.py:answerCard(): 
[1509797667] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709613984, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797667, 'nid': 1509709590331, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797667] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797533, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797464, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509797687] sched.py:answerCard(): 
[1509797687] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798389, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797687, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797687] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797543, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796936, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797716] sched.py:answerCard(): 
[1509797716] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509797790, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797716, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797716] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797564, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796875, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509797765] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797564, 'factor': 0, 'flags': 0, 'id': 1509709260280, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796875, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509797800] sched.py:answerCard(): 
[1509797800] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709260280, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797800, 'nid': 1509709070074, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 6, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797800] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797604, 'factor': 0, 'flags': 0, 'id': 1509710116416, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796866, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509797829] sched.py:answerCard(): 
[1509797829] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710116416, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797829, 'nid': 1509710051873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797829] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797628, 'factor': 0, 'flags': 0, 'id': 1509710203259, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796970, 'nid': 1509710146455, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797855] sched.py:answerCard(): 
[1509797855] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710203259, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797855, 'nid': 1509710146455, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797855] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797640, 'factor': 0, 'flags': 0, 'id': 1509709355373, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509796957, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1}
[1509797858] sched.py:answerCard(): 
[1509797858] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509709355373, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797858, 'nid': 1509709337222, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 7, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797858] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797717, 'factor': 0, 'flags': 0, 'id': 1509710291319, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797095, 'nid': 1509710231637, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797865] sched.py:answerCard(): 
[1509797865] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710291319, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797865, 'nid': 1509710231637, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797865] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797790, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797716, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509797875] sched.py:answerCard(): 
[1509797875] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798509, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797875, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509797875] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1478, 'factor': 0, 'flags': 0, 'id': 1509713341226, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713341, 'nid': 1509713313495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797879] sched.py:answerCard(): 
[1509797879] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798508, 'factor': 0, 'flags': 0, 'id': 1509713341226, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797879, 'nid': 1509713313495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797879] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1479, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713374, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509797947] sched.py:answerCard(): 
[1509797947] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798019, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797947, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509797947] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509797899, 'factor': 0, 'flags': 0, 'id': 1509712823823, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797168, 'nid': 1509710291324, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509797952] sched.py:answerCard(): 
[1509797952] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509712823823, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509797952, 'nid': 1509710291324, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509797952] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1480, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713402, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509798096] sched.py:answerCard(): 
[1509798096] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798790, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798096, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509798096] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798019, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509797947, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509798126] sched.py:answerCard(): 
[1509798126] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798795, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798126, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798126] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1481, 'factor': 0, 'flags': 0, 'id': 1509713427587, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713427, 'nid': 1509713402978, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509798183] sched.py:answerCard(): 
[1509798183] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798875, 'factor': 0, 'flags': 0, 'id': 1509713427587, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798183, 'nid': 1509713402978, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509798183] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1482, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713458, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509798190] sched.py:answerCard(): 
[1509798190] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798257, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798190, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509798190] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1483, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713499, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1509798608] sched.py:answerCard(): 
[1509798608] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799212, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798608, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509798608] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798203, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797478, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509798676] sched.py:answerCard(): 
[1509798676] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798744, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798676, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798676] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798257, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798190, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509798695] sched.py:answerCard(): 
[1509798695] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798760, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798695, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798695] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798290, 'factor': 0, 'flags': 0, 'id': 1509713313492, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797589, 'nid': 1509713285467, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509798777] sched.py:answerCard(): 
[1509798777] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713313492, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509798777, 'nid': 1509713285467, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509798777] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798372, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797647, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509798824] sched.py:answerCard(): 
[1509798824] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509798888, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798824, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798824] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798389, 'factor': 0, 'flags': 0, 'id': 1509713254742, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797687, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509798907] sched.py:answerCard(): 
[1509798907] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713254742, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509798907, 'nid': 1509712823832, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509798907] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798508, 'factor': 0, 'flags': 0, 'id': 1509713341226, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797879, 'nid': 1509713313495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509798910] sched.py:answerCard(): 
[1509798910] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713341226, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509798910, 'nid': 1509713313495, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509798910] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798509, 'factor': 0, 'flags': 0, 'id': 1509710146450, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509797875, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509798929] sched.py:answerCard(): 
[1509798929] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710146450, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509798929, 'nid': 1509710116527, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509798929] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798744, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798676, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509798948] sched.py:answerCard(): 
[1509798948] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799679, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798948, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798948] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798760, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798695, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509798956] sched.py:answerCard(): 
[1509798956] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799658, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798956, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798956] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798790, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798096, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509798992] sched.py:answerCard(): 
[1509798992] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799065, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798992, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509798992] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798795, 'factor': 0, 'flags': 0, 'id': 1509713374182, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798126, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509799032] sched.py:answerCard(): 
[1509799032] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713374182, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509799032, 'nid': 1509713341232, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509799032] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798875, 'factor': 0, 'flags': 0, 'id': 1509713427587, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798183, 'nid': 1509713402978, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509799035] sched.py:answerCard(): 
[1509799035] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713427587, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509799035, 'nid': 1509713402978, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509799035] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509798888, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798824, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509799070] sched.py:answerCard(): 
[1509799070] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799697, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509799070, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509799070] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799065, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798992, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509799092] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509799092] sched.py:_updateCutoff(): 211, 1509818400
[1509799093] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509708588278,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509799094,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 77}
[1509799093] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509799092127,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509799093,
 'usn': 77}
[1509799094] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509799094] sync.py:newerRows(): cards, []
[1509799094] sync.py:newerRows(): notes, []
[1509799094] sync.py:sync(): client chunk, {'cards': [(1509178968303,
            1509178911360,
            1509178930435,
            0,
            1509723966,
            77,
            1,
            1,
            1509724575,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509179428263,
            1509178968416,
            1509178930435,
            0,
            1509723979,
            77,
            1,
            1,
            1509724623,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509179552419,
            1509179428270,
            1509178930435,
            0,
            1509723994,
            77,
            1,
            1,
            1509724639,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509181352017,
            1509179570873,
            1509178930435,
            0,
            1509724024,
            77,
            1,
            1,
            1509724093,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509707751419,
            1509707740012,
            1509178930435,
            0,
            1509724030,
            77,
            1,
            1,
            1509724098,
            0,
            0,
            1,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509708739284,
            1509708685577,
            1509708710898,
            0,
            1509708739,
            77,
            0,
            0,
            1458,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509708778612,
            1509708739416,
            1509708710898,
            0,
            1509708778,
            77,
            0,
            0,
            1459,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509708989859,
            1509708828114,
            1509708854481,
            0,
            1509795470,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709070070,
            1509708989980,
            1509708854481,
            0,
            1509795603,
            77,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709260280,
            1509709070074,
            1509708854481,
            0,
            1509797800,
            77,
            2,
            2,
            212,
            1,
            2500,
            6,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709297834,
            1509709260285,
            1509708854481,
            0,
            1509796799,
            77,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709337215,
            1509709297846,
            1509708854481,
            0,
            1509794830,
            77,
            0,
            -2,
            1464,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509709355373,
            1509709337222,
            1509708854481,
            0,
            1509797858,
            77,
            2,
            2,
            212,
            1,
            2500,
            7,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709590325,
            1509709355382,
            1509708854481,
            0,
            1509796812,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509709613984,
            1509709590331,
            1509708854481,
            0,
            1509797667,
            77,
            2,
            2,
            212,
            1,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710007721,
            1509709613994,
            1509708854481,
            0,
            1509796822,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710116416,
            1509710051873,
            1509708854481,
            0,
            1509797829,
            77,
            2,
            2,
            212,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710146450,
            1509710116527,
            1509708854481,
            0,
            1509798929,
            77,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710203259,
            1509710146455,
            1509708854481,
            0,
            1509797855,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710231633,
            1509710203261,
            1509708854481,
            0,
            1509798948,
            77,
            1,
            1,
            1509799679,
            0,
            0,
            6,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509710291319,
            1509710231637,
            1509708854481,
            0,
            1509797865,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509712823823,
            1509710291324,
            1509708854481,
            0,
            1509797952,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713254742,
            1509712823832,
            1509708854481,
            0,
            1509798907,
            77,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713285463,
            1509713254752,
            1509708854481,
            0,
            1509799070,
            77,
            1,
            1,
            1509799697,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713313492,
            1509713285467,
            1509708854481,
            0,
            1509798777,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713341226,
            1509713313495,
            1509708854481,
            0,
            1509798910,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713374182,
            1509713341232,
            1509708854481,
            0,
            1509799032,
            77,
            2,
            2,
            212,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713402973,
            1509713374190,
            1509708854481,
            0,
            1509798992,
            77,
            1,
            1,
            1509799065,
            0,
            0,
            2,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509713427587,
            1509713402978,
            1509708854481,
            0,
            1509799035,
            77,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713458555,
            1509713427594,
            1509708854481,
            0,
            1509798956,
            77,
            1,
            1,
            1509799658,
            0,
            0,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713499992,
            1509713458561,
            1509708854481,
            0,
            1509798608,
            77,
            1,
            1,
            1509799212,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713519970,
            1509713499996,
            1509708854481,
            0,
            1509713519,
            77,
            0,
            0,
            1484,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713691510,
            1509713519974,
            1509708854481,
            0,
            1509713691,
            77,
            0,
            0,
            1485,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713712622,
            1509713691519,
            1509708854481,
            0,
            1509713712,
            77,
            0,
            0,
            1486,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713767970,
            1509713712629,
            1509708854481,
            0,
            1509713767,
            77,
            0,
            0,
            1487,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713797777,
            1509713767977,
            1509708854481,
            0,
            1509713797,
            77,
            0,
            0,
            1488,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713812802,
            1509713797780,
            1509708854481,
            0,
            1509713812,
            77,
            0,
            0,
            1489,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713865655,
            1509713812808,
            1509708854481,
            0,
            1509713865,
            77,
            0,
            0,
            1490,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509713931879,
            1509713865663,
            1509708854481,
            0,
            1509713931,
            77,
            0,
            0,
            1491,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509719880749,
            1509719866636,
            1509178930435,
            0,
            1509719880,
            77,
            0,
            0,
            1492,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509722565433,
            1509720544674,
            1509178930435,
            0,
            1509722565,
            77,
            0,
            0,
            1493,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509722719627,
            1509722565561,
            1509178930435,
            0,
            1509722719,
            77,
            0,
            0,
            1494,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509722825338,
            1509722719631,
            1509178930435,
            0,
            1509722825,
            77,
            0,
            0,
            1495,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509724794186,
            1509724624781,
            1509178930435,
            0,
            1509724794,
            77,
            0,
            0,
            1496,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509729807629,
            1509724794310,
            1509178930435,
            0,
            1509729807,
            77,
            0,
            0,
            1497,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509729844193,
            1509729814979,
            1509708854481,
            0,
            1509729844,
            77,
            0,
            0,
            1498,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509729855874,
            1509729844303,
            1509708854481,
            0,
            1509729855,
            77,
            0,
            0,
            1499,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509729897138,
            1509729855879,
            1509708854481,
            0,
            1509729897,
            77,
            0,
            0,
            1500,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509729918020,
            1509729897142,
            1509708854481,
            0,
            1509729918,
            77,
            0,
            0,
            1501,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509730127052,
            1509729918023,
            1509708854481,
            0,
            1509730127,
            77,
            0,
            0,
            1502,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509730195801,
            1509730127062,
            1509708854481,
            0,
            1509730195,
            77,
            0,
            0,
            1503,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509730499569,
            1509730195807,
            1509708854481,
            0,
            1509730499,
            77,
            0,
            0,
            1504,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509730517027,
            1509730499577,
            1509708854481,
            0,
            1509730517,
            77,
            0,
            0,
            1505,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509731063224,
            1509730743332,
            1509708854481,
            0,
            1509731063,
            77,
            0,
            0,
            1506,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509779132933,
            1509731063571,
            1509708854481,
            0,
            1509779132,
            77,
            0,
            0,
            1507,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509779153335,
            1509779132942,
            1509708854481,
            0,
            1509779153,
            77,
            0,
            0,
            1508,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509779242713,
            1509779153341,
            1509708854481,
            0,
            1509779242,
            77,
            0,
            0,
            1509,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509779435134,
            1509779242720,
            1509708854481,
            0,
            1509779435,
            77,
            0,
            0,
            1510,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1509782284028,
            1509779495053,
            1509708854481,
            0,
            1509782284,
            77,
            0,
            0,
            1511,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1498478853465,
            u'pBzCt$+]YK',
            1491545041634,
            1509720543,
            77,
            u'',
            u'What is the belief space?\x1fThe belief state is the set of states and possible probabilities of the world that are currently possible\x1f',
            u'',
            u'',
            0,
            u''),
           (1509708685577,
            u'Q4qhs:Y)#R',
            1491545041634,
            1509708739,
            77,
            u'',
            u'What is machine learning?\x1f<img src="paste-2044404432898.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509708739416,
            u'Fu<TdABDpp',
            1491545041634,
            1509708778,
            77,
            u'',
            u'What are the types of machine learning?\x1f<img src="paste-2409476653058.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509708828114,
            u'K(-d`l[EBg',
            1491545041634,
            1509708989,
            77,
            u'',
            u'What is the problem space of reinforcement learning?\x1f<img src="paste-4973572128770.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509708989980,
            u'kN:l1X1X.q',
            1491545041634,
            1509709070,
            77,
            u'',
            u'How do you solve a reinforcement learning problem?\x1f<img src="paste-5527622909954.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709070074,
            u'oZ<S%}bf=h',
            1491545041634,
            1509796695,
            77,
            u'',
            u'What are the exploration vs exploitation strategies?\x1f<img src="paste-6828998000642.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709260285,
            u'pUIM`U*6;]',
            1491545041634,
            1509709297,
            77,
            u'',
            u'What is episilon greedy?\x1f<img src="paste-7245609828354.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709297846,
            u'I7^TjRm^$U',
            1491545041634,
            1509709337,
            77,
            u'',
            u'What is EXP3?\x1f<img src="paste-7589207212034.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709337222,
            u'GB2-Lsh2ox',
            1491545041634,
            1509794924,
            77,
            u'',
            u'What is the Upper Confidence Bound?\x1f<div>You balance between taking the best action and exploring nodes that haven\'t been explopred</div><img src="paste-7782480740354.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709355382,
            u'bp#Z1(+Z(-',
            1491545041634,
            1509709590,
            77,
            u'',
            u'What is model-based vs model-free?\x1f<img src="paste-9015136354306.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709590331,
            u'k&j)<b<?/)',
            1491545041634,
            1509795170,
            77,
            u'',
            u'What is passive vs active?\x1f<img src="paste-9272834392066.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509709613994,
            u'e]R?GMPRxI',
            1491545041634,
            1509710007,
            77,
            u'',
            u'How does learning T &amp; R work for Simple Frequentist approach?\x1f<img src="paste-9891309682690.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710051873,
            u'CMTC+(M3SN',
            1491545041634,
            1509796661,
            77,
            u'',
            u'What are the steps involved in learning in model-based passive reinforcement learning?\x1f<img src="paste-13434657701890.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710116527,
            u'jk%@BWARpX',
            1491545041634,
            1509796931,
            77,
            u'',
            u'How do you get data in model-based active?\x1f<img src="paste-13851269529602.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710146455,
            u'v>>s|#+jd1',
            1491545041634,
            1509710203,
            77,
            u'',
            u'What is bayesian reinforcement learning?\x1f<img src="paste-14345190768642.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710203261,
            u'v[H!560stb',
            1491545041634,
            1509710231,
            77,
            u'',
            u'What is problem space in bayesian reinforcement learning?\x1f<img src="paste-14748917694466.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710231637,
            u'J[bm;dI3}W',
            1491545041634,
            1509797092,
            77,
            u'',
            u'<div>Is optimal policy of the POMD an optimal balance exploration vs exploitation?</div>\x1fYes.<br /><div><br /></div><div>It will balance is properly given the initial unknowns, if it has the optimal policy.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509710291324,
            u'zwO`HTV#v-',
            1491545041634,
            1509797162,
            77,
            u'',
            u'What are the types of things we can learn in a model-free approach\x1f<img src="paste-15706695401474.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509712823832,
            u'i77Ymr+2M&',
            1491545041634,
            1509797275,
            77,
            u'',
            u'What are the goals, assumptions and algorithm for monte carlo in reinforcement learning?\x1f<img src="paste-16496969383938.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713254752,
            u'L&.c]{QmX7',
            1491545041634,
            1509713285,
            77,
            u'',
            u'How does Monte Carlo update work?\x1f<img src="paste-16844861734914.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713285467,
            u'pc#`<@6>St',
            1491545041634,
            1509798775,
            77,
            u'',
            u'When do we update the value of a state in monte carlo?\x1f<img src="paste-17398912516098.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713313495,
            u'p_lEnqe(qi',
            1491545041634,
            1509713341,
            77,
            u'',
            u'What is the Law of Large Numbers\x1f<img src="paste-17811229376514.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713341232,
            u'CfAN6dgL}Q',
            1491545041634,
            1509713374,
            77,
            u'',
            u'What is Temporal Difference Learning\x1f<img src="paste-18163416694786.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713374190,
            u'y@Ht?_e:|&',
            1491545041634,
            1509798053,
            77,
            u'',
            u'How does value update work for temporal difference learning?\x1f<div>We get given a reward everytime we visit a state, and we have a policy.</div><div><br /></div><div>V(s) = V(s) + c_1(reward &nbsp;+ c_2 V(s_1) - V(x))</div><img src="paste-18352395255810.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713402978,
            u'y|Mw#~JdvV',
            1491545041634,
            1509713427,
            77,
            u'',
            u'Compare&nbsp;Monte Carlo vs Temporal Difference Learning\x1f<img src="paste-18846316494850.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713427594,
            u'o4PQew)K#R',
            1491545041634,
            1509713458,
            77,
            u'',
            u'What are the variants of TD learning?\x1f<img src="paste-19202798780418 (1).jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713458561,
            u'H+M>E#WOw#',
            1491545041634,
            1509713499,
            77,
            u'',
            u'What is TD-Learning Q-Learning\x1f<img src="paste-19426137079810.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713499996,
            u'b!a,gyI@S<',
            1491545041634,
            1509713519,
            77,
            u'',
            u'What is SARSA?\x1f<img src="paste-19619410608130.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713519974,
            u'MAa3YA^$+)',
            1491545041634,
            1509713691,
            77,
            u'',
            u'Describe n-steps TD method for Value Estimation\x1f<img src="paste-20375324852226.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713691519,
            u'Ub;A-y?qM',
            1491545041634,
            1509713712,
            77,
            u'',
            u'What is lambda return algorithm?\x1f<img src="paste-20645907791874.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713712629,
            u'O,s{CuQD^y',
            1491545041634,
            1509713767,
            77,
            u'',
            u'How does TD work?\x1f<img src="paste-20843476287490.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713767977,
            u'J!K~lfbwMJ',
            1491545041634,
            1509713797,
            77,
            u'',
            u'What is eligibility trace for TD?\x1f<img src="paste-21028159881218.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713797780,
            u'x#iTLwJDlG',
            1491545041634,
            1509713812,
            77,
            u'',
            u'What\'s the TD algorithm?\x1f<img src="paste-21251498180610.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713812808,
            u'JtQN;_L}2&',
            1491545041634,
            1509713865,
            77,
            u'',
            u'Compare different RL approaches?\x1f<img src="paste-21449066676226.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509713865663,
            u'KjspDjkpx<',
            1491545041634,
            1509713931,
            77,
            u'',
            u'What does it mean to solve an RL problem?\x1f<img src="paste-21869973471234.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509719866636,
            u'PBq6[3I~L@',
            1491545041634,
            1509719880,
            77,
            u'',
            u'What is the size of your belief?\x1fSize of state - 1\x1f',
            u'',
            u'',
            0,
            u''),
           (1509720544674,
            u't]WD1bWj-G',
            1491545041634,
            1509722565,
            77,
            u'',
            u'How do you get P(o|b,a) and R(b) for the bellman update of a POMDP?\x1f<img src="paste-26345329393666.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509722565561,
            u'z}jSd<CcdP',
            1491545041634,
            1509722719,
            77,
            u'',
            u'How do we deal with the massive belief space for POMDP?\x1f<img src="paste-28084791148546.jpg" /><div><br /></div><div>We just need to maximize the value of the initial belief using our policy, it doesn\'t need to maximzie the value of all the beliefs</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509722719631,
            u'BK>2yF[xp8',
            1491545041634,
            1509723903,
            77,
            u'',
            u'How do you computer the next belief?\x1f<img src="paste-28333899251714.jpg" /><div><img src="paste-30408368455682.jpg" /><br /><img src="paste-30627411787778.jpg" /></div><div><img src="paste-32143535243266.jpg" /></div><div><img src="paste-34080565493762.jpg" /></div><div><br /></div><div>[$]\\alpha P(o|s\', a) \\sum_s P(s\'|s,a)b(s)[/$]</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509724624781,
            u'I$p5jhLi5N',
            1491545041634,
            1509724794,
            77,
            u'',
            u'Represent this particle filter in set notation<div><br /></div><div><img src="paste-38384122724354.jpg" /></div>\x1f<img src="paste-39036957753346.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509724794310,
            u'cF083ZThlO',
            1491545041634,
            1509729807,
            77,
            u'',
            u'How do you update a particle filter?\x1f<img src="paste-39329015529474.jpg" /><div><img src="paste-39496519254018.jpg" /></div><div><img src="paste-40093519708162.jpg" /></div><div><img src="paste-40407052320770.jpg" /></div><div><br /></div><div>Resample from the above probabilities to get</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509729814979,
            u'A>B-Q>wWcs',
            1491545041634,
            1509729844,
            77,
            u'',
            u"What is model-based?\x1fIt's when you want to learn the transition or reward function and then just do a regular MDP\x1f",
            u'',
            u'',
            0,
            u''),
           (1509729844303,
            u'nM~eVpQ?R.',
            1491545041634,
            1509729855,
            77,
            u'',
            u'What is model-free?\x1fWhen you just want to learn the policy or value straight up\x1f',
            u'',
            u'',
            0,
            u''),
           (1509729855879,
            u'oM*}Mx+:Sk',
            1491545041634,
            1509729897,
            77,
            u'',
            u'What is passive?\x1fWhen the agent is observing the environment of what happens.<div><br /></div><div>Like getting data from a video feed</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509729897142,
            u'iY0~~kcG-u',
            1491545041634,
            1509729918,
            77,
            u'',
            u'What is active?\x1fWe select data to use to learn, (ie try this action and see what happens)\x1f',
            u'',
            u'',
            0,
            u''),
           (1509729918023,
            u'Pe#.c_#PC~',
            1491545041634,
            1509730127,
            77,
            u'',
            u'How do you learn T &amp; R?\x1f<img src="paste-44418551775234.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509730127062,
            u'u$qNTG9)/V',
            1491545041634,
            1509730195,
            77,
            u'',
            u'How does model-based passive work?\x1f<img src="paste-45041322033154.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509730195807,
            u'O5:0Db9X9K',
            1491545041634,
            1509730658,
            77,
            u'',
            u'What is Bayesian Reinforcement learning?\x1fIt\'s a model-based (estimate T() and R()) active (we select data) approach to solving RL problems.<div><br /></div><div><img src="paste-48202417963010.jpg" /></div><div><img src="paste-51367808860162.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509730499577,
            u'Lrfb3](jk2',
            1491545041634,
            1509730517,
            77,
            u'',
            u'How does active data get gathered?\x1f<img src="paste-46016279609346.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509730743332,
            u'L~6cw&VRRc',
            1491545041634,
            1509731063,
            77,
            u'',
            u'What is the relationship between MDP and POMDP\x1fRL is MDP with no R and T\x1f',
            u'',
            u'',
            0,
            u''),
           (1509731063571,
            u'Lptd~L(iU$',
            1491545041634,
            1509779132,
            77,
            u'',
            u'What is the relationship between Bayesian RL and POMDP?\x1fIf you don\'t have a T and R and represent that as a state in an MDP, then you have an POMDP where you have a probability distribution of all T and R\'s.<div><br /></div><div><img src="paste-52334176501762.jpg" /></div><div><img src="paste-54803782696962.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1509779132942,
            u'H]]`Pr;o#^',
            1491545041634,
            1509779153,
            77,
            u'',
            u'Compare model-based and model-free in terms of performance\x1fModel-free trains faster, model-based generalizes better\x1f',
            u'',
            u'',
            0,
            u''),
           (1509779153341,
            u'c}!f/K:3QR',
            1491545041634,
            1509779242,
            77,
            u'',
            u'Compare value function and q-value function\x1f<img src="paste-55641301319682.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509779242720,
            u'I;e]Ao<UWg',
            1491545041634,
            1509779493,
            77,
            u'',
            u'What is the \'reward\' of an episode on Monte Carlo?\x1f<img src="paste-58072252809218.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1509779495053,
            u't85fx!sp(?',
            1491545041634,
            1509782284,
            77,
            u'',
            u'Compare the update strategy for values in monte carlo vs temporal difference learning\x1f<img src="paste-59395102736386.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1509723966747, 1509178968303, 77, 2, -600, -60, 0, 6127, 0),
            (1509723979000, 1509179428263, 77, 2, -600, -60, 0, 12250, 0),
            (1509723994820, 1509179552419, 77, 2, -600, -60, 0, 15816, 0),
            (1509724024752, 1509181352017, 77, 1, -60, -60, 0, 29929, 0),
            (1509724030718, 1509707751419, 77, 1, -60, -60, 0, 5963, 0),
            (1509794616362, 1509708989859, 77, 2, -600, -60, 0, 39331, 0),
            (1509794668011, 1509709070070, 77, 1, -60, -60, 0, 51646, 0),
            (1509794687480, 1509709260280, 77, 1, -60, -60, 0, 19467, 0),
            (1509794748978, 1509709297834, 77, 1, -60, -60, 0, 60000, 0),
            (1509794765001, 1509709070070, 77, 1, -60, -60, 0, 16020, 0),
            (1509794781076, 1509709260280, 77, 1, -60, -60, 0, 16074, 0),
            (1509794861245, 1509709297834, 77, 1, -60, -60, 0, 31192, 0),
            (1509794865275, 1509709070070, 77, 2, -600, -60, 0, 4028, 0),
            (1509794873410, 1509709260280, 77, 2, -600, -60, 0, 8130, 0),
            (1509794963915, 1509709355373, 77, 1, -60, -60, 0, 39169, 0),
            (1509794976613, 1509709297834, 77, 2, -600, -60, 0, 12695, 0),
            (1509795125312, 1509709590325, 77, 2, -600, -60, 0, 60000, 0),
            (1509795154166, 1509709355373, 77, 1, -60, -60, 0, 28852, 0),
            (1509795429999, 1509709613984, 77, 1, -60, -60, 0, 60000, 0),
            (1509795454644, 1509709355373, 77, 1, -60, -60, 0, 24642, 0),
            (1509795470283, 1509708989859, 77, 2, 1, -600, 2500, 15631, 0),
            (1509795557376, 1509710007721, 77, 2, -600, -60, 0, 60000, 0),
            (1509795578329, 1509709613984, 77, 1, -60, -60, 0, 20949, 0),
            (1509795603476, 1509709070070, 77, 2, 1, -600, 2500, 25143, 0),
            (1509795606309, 1509709355373, 77, 2, -600, -60, 0, 2829, 0),
            (1509796688574, 1509710116416, 77, 1, -60, -60, 0, 26084, 0),
            (1509796732730, 1509709260280, 77, 1, -60, -600, 0, 36279, 0),
            (1509796783575, 1509709613984, 77, 1, -60, -60, 0, 50841, 0),
            (1509796799836, 1509709297834, 77, 2, 1, -600, 2500, 16257, 0),
            (1509796812759, 1509709590325, 77, 2, 1, -600, 2500, 12919, 0),
            (1509796822405, 1509710007721, 77, 2, 1, -600, 2500, 9642, 0),
            (1509796835396, 1509709355373, 77, 1, -60, -600, 0, 12987, 0),
            (1509796866076, 1509710116416, 77, 2, -600, -60, 0, 30678, 0),
            (1509796875872, 1509709260280, 77, 2, -600, -60, 0, 9792, 0),
            (1509796884650, 1509709613984, 77, 2, -600, -60, 0, 8774, 0),
            (1509796936773, 1509710146450, 77, 2, -600, -60, 0, 4674, 0),
            (1509796957609, 1509709355373, 77, 2, -600, -60, 0, 20830, 0),
            (1509796970367, 1509710203259, 77, 2, -600, -60, 0, 12748, 0),
            (1509797020430, 1509710231633, 77, 1, -60, -60, 0, 50061, 0),
            (1509797095854, 1509710291319, 77, 2, -600, -60, 0, 2694, 0),
            (1509797129134, 1509710231633, 77, 1, -60, -60, 0, 33278, 0),
            (1509797168217, 1509712823823, 77, 2, -600, -60, 0, 5051, 0),
            (1509797294714, 1509713254742, 77, 1, -60, -60, 0, 13808, 0),
            (1509797350154, 1509710231633, 77, 1, -60, -60, 0, 55436, 0),
            (1509797419051, 1509713285463, 77, 1, -60, -60, 0, 60000, 0),
            (1509797464580, 1509713254742, 77, 1, -60, -60, 0, 45526, 0),
            (1509797478615, 1509710231633, 77, 2, -600, -60, 0, 14033, 0),
            (1509797589358, 1509713313492, 77, 2, -600, -60, 0, 11877, 0),
            (1509797647962, 1509713285463, 77, 2, -600, -60, 0, 58600, 0),
            (1509797667411, 1509709613984, 77, 2, 1, -600, 2500, 19444, 0),
            (1509797687515, 1509713254742, 77, 2, -600, -60, 0, 20100, 0),
            (1509797716841, 1509710146450, 77, 1, -60, -600, 0, 29322, 0),
            (1509797800536, 1509709260280, 77, 2, 1, -600, 2500, 34686, 0),
            (1509797829106, 1509710116416, 77, 2, 1, -600, 2500, 28565, 0),
            (1509797855825, 1509710203259, 77, 2, 1, -600, 2500, 26716, 0),
            (1509797858459, 1509709355373, 77, 2, 1, -600, 2500, 2631, 0),
            (1509797865294, 1509710291319, 77, 2, 1, -600, 2500, 6834, 0),
            (1509797875187, 1509710146450, 77, 2, -600, -60, 0, 9890, 0),
            (1509797879311, 1509713341226, 77, 2, -600, -60, 0, 4112, 0),
            (1509797947524, 1509713374182, 77, 1, -60, -60, 0, 60000, 0),
            (1509797952221, 1509712823823, 77, 2, 1, -600, 2500, 4695, 0),
            (1509798096935, 1509713402973, 77, 2, -600, -60, 0, 42505, 0),
            (1509798126588, 1509713374182, 77, 2, -600, -60, 0, 29647, 0),
            (1509798183181, 1509713427587, 77, 2, -600, -60, 0, 56588, 0),
            (1509798190498, 1509713458555, 77, 1, -60, -60, 0, 7307, 0),
            (1509798608381, 1509713499992, 77, 2, -600, -60, 0, 60000, 0),
            (1509798676925, 1509710231633, 77, 1, -60, -600, 0, 60000, 0),
            (1509798695612, 1509713458555, 77, 1, -60, -60, 0, 18685, 0),
            (1509798777840, 1509713313492, 77, 2, 1, -600, 2500, 1306, 0),
            (1509798824081, 1509713285463, 77, 1, -60, -600, 0, 46236, 0),
            (1509798907587, 1509713254742, 77, 2, 1, -600, 2500, 60000, 0),
            (1509798910297, 1509713341226, 77, 2, 1, -600, 2500, 2707, 0),
            (1509798929798, 1509710146450, 77, 2, 1, -600, 2500, 19492, 0),
            (1509798948136, 1509710231633, 77, 2, -600, -60, 0, 18336, 0),
            (1509798956548, 1509713458555, 77, 2, -600, -60, 0, 8407, 0),
            (1509798992858, 1509713402973, 77, 1, -60, -600, 0, 36305, 0),
            (1509799032492, 1509713374182, 77, 2, 1, -600, 2500, 39632, 0),
            (1509799035834, 1509713427587, 77, 2, 1, -600, 2500, 3338, 0),
            (1509799070256, 1509713285463, 77, 2, -600, -60, 0, 34418, 0)]}
[1509799095] sync.py:sync(): findChanges
[1509799097] sync.py:sync(): last local usn is 774
[1509799097] sync.py:sync(): mediaChanges resp count 0
[1509799097] media.py:mediaChangesZip(): +media zip, paste-52334176501762.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-6828998000642.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-2044404432898.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-28333899251714.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-9272834392066.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-7245609828354.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-39036957753346.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-55641301319682.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-54223962112002.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-2409476653058.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-38384122724354.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-9015136354306.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-19619410608130.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-59395102736386.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-40407052320770.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-20843476287490.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-28084791148546.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-46016279609346.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-26345329393666.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-39329015529474.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-7782480740354.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-19202798780418 (1).jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-14748917694466.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-40093519708162.jpg
[1509799097] media.py:mediaChangesZip(): +media zip, paste-16844861734914.jpg
[1509799108] sync.py:sync(): processed 25, serverUsn 799, clientUsn 774
[1509799108] sync.py:sync(): lastUsn in sync, updating local
[1509799108] media.py:mediaChangesZip(): +media zip, paste-20645907791874.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-21028159881218.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-21449066676226.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-54803782696962.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-53893249630210.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-51367808860162.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-17811229376514.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-44418551775234.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-20375324852226.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-21251498180610.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-16496969383938.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-18846316494850.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-13434657701890.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-18352395255810.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-48202417963010.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-14345190768642.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-32143535243266.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-15109694947330.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-13851269529602.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-45041322033154.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-15706695401474.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-21869973471234.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-17398912516098.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-39496519254018.jpg
[1509799108] media.py:mediaChangesZip(): +media zip, paste-19426137079810.jpg
[1509799120] sync.py:sync(): processed 25, serverUsn 824, clientUsn 799
[1509799120] sync.py:sync(): lastUsn in sync, updating local
[1509799120] media.py:mediaChangesZip(): +media zip, paste-9891309682690.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-30408368455682.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-5527622909954.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-30627411787778.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-56521769615362.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-34080565493762.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-58072252809218.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-18163416694786.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-7589207212034.jpg
[1509799120] media.py:mediaChangesZip(): +media zip, paste-4973572128770.jpg
[1509799124] sync.py:sync(): processed 10, serverUsn 834, clientUsn 824
[1509799124] sync.py:sync(): lastUsn in sync, updating local
[1509799267] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509799267] sched.py:_updateCutoff(): 211, 1509818400
[1509799269] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509799095767,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509799269,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 78}
[1509799269] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509799095767,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509799269,
 'usn': 78}
[1509799269] sync.py:sync(): no changes
[1509799269] sync.py:sync(): findChanges
[1509799270] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509799270] sched.py:_updateCutoff(): 211, 1509818400
[1509799685] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799065, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509798992, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': 77}
[1509799712] sched.py:answerCard(): 
[1509799712] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509800374, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509799712, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509799712] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799212, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798608, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509799788] sched.py:answerCard(): 
[1509799788] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509799850, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509799788, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509799788] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799658, 'factor': 0, 'flags': 0, 'id': 1509713458555, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798956, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': 77}
[1509800255] sched.py:answerCard(): 
[1509800255] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713458555, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800255, 'nid': 1509713427594, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800255] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799679, 'factor': 0, 'flags': 0, 'id': 1509710231633, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509798948, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': 77}
[1509800261] sched.py:answerCard(): 
[1509800261] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509710231633, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800261, 'nid': 1509710203261, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 7, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800261] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799697, 'factor': 0, 'flags': 0, 'id': 1509713285463, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509799070, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': 77}
[1509800280] sched.py:answerCard(): 
[1509800280] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713285463, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800280, 'nid': 1509713254752, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 5, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800280] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509799850, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509799788, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509800296] sched.py:answerCard(): 
[1509800296] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801002, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800296, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800296] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1484, 'factor': 0, 'flags': 0, 'id': 1509713519970, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713519, 'nid': 1509713499996, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800325] sched.py:answerCard(): 
[1509800325] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801037, 'factor': 0, 'flags': 0, 'id': 1509713519970, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800325, 'nid': 1509713499996, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800325] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1485, 'factor': 0, 'flags': 0, 'id': 1509713691510, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713691, 'nid': 1509713519974, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800340] sched.py:answerCard(): 
[1509800340] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509800971, 'factor': 0, 'flags': 0, 'id': 1509713691510, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800340, 'nid': 1509713519974, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800340] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1486, 'factor': 0, 'flags': 0, 'id': 1509713712622, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713712, 'nid': 1509713691519, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800344] sched.py:answerCard(): 
[1509800344] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509800991, 'factor': 0, 'flags': 0, 'id': 1509713712622, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800344, 'nid': 1509713691519, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800344] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1487, 'factor': 0, 'flags': 0, 'id': 1509713767970, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713767, 'nid': 1509713712629, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800353] sched.py:answerCard(): 
[1509800353] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801024, 'factor': 0, 'flags': 0, 'id': 1509713767970, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800353, 'nid': 1509713712629, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800353] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1488, 'factor': 0, 'flags': 0, 'id': 1509713797777, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713797, 'nid': 1509713767977, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800356] sched.py:answerCard(): 
[1509800356] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801100, 'factor': 0, 'flags': 0, 'id': 1509713797777, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800356, 'nid': 1509713767977, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800356] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1489, 'factor': 0, 'flags': 0, 'id': 1509713812802, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713812, 'nid': 1509713797780, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800359] sched.py:answerCard(): 
[1509800359] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801076, 'factor': 0, 'flags': 0, 'id': 1509713812802, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800359, 'nid': 1509713797780, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800359] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1490, 'factor': 0, 'flags': 0, 'id': 1509713865655, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713865, 'nid': 1509713812808, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800370] sched.py:answerCard(): 
[1509800370] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801000, 'factor': 0, 'flags': 0, 'id': 1509713865655, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800370, 'nid': 1509713812808, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800370] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1491, 'factor': 0, 'flags': 0, 'id': 1509713931879, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509713931, 'nid': 1509713865663, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800376] sched.py:answerCard(): 
[1509800376] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801106, 'factor': 0, 'flags': 0, 'id': 1509713931879, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800376, 'nid': 1509713865663, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800376] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509800374, 'factor': 0, 'flags': 0, 'id': 1509713402973, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509799712, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509800385] sched.py:answerCard(): 
[1509800385] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713402973, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800385, 'nid': 1509713374190, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800385] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1498, 'factor': 0, 'flags': 0, 'id': 1509729844193, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729844, 'nid': 1509729814979, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800387] sched.py:answerCard(): 
[1509800387] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509800999, 'factor': 0, 'flags': 0, 'id': 1509729844193, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800387, 'nid': 1509729814979, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800387] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1499, 'factor': 0, 'flags': 0, 'id': 1509729855874, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729855, 'nid': 1509729844303, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800388] sched.py:answerCard(): 
[1509800388] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801010, 'factor': 0, 'flags': 0, 'id': 1509729855874, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800388, 'nid': 1509729844303, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800388] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1500, 'factor': 0, 'flags': 0, 'id': 1509729897138, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729897, 'nid': 1509729855879, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800389] sched.py:answerCard(): 
[1509800389] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801057, 'factor': 0, 'flags': 0, 'id': 1509729897138, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800389, 'nid': 1509729855879, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800389] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1501, 'factor': 0, 'flags': 0, 'id': 1509729918020, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729918, 'nid': 1509729897142, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800390] sched.py:answerCard(): 
[1509800390] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801000, 'factor': 0, 'flags': 0, 'id': 1509729918020, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800390, 'nid': 1509729897142, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800390] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1502, 'factor': 0, 'flags': 0, 'id': 1509730127052, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730127, 'nid': 1509729918023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800397] sched.py:answerCard(): 
[1509800397] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801008, 'factor': 0, 'flags': 0, 'id': 1509730127052, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800397, 'nid': 1509729918023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800397] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1503, 'factor': 0, 'flags': 0, 'id': 1509730195801, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730195, 'nid': 1509730127062, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800404] sched.py:answerCard(): 
[1509800404] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801134, 'factor': 0, 'flags': 0, 'id': 1509730195801, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800404, 'nid': 1509730127062, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800404] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1504, 'factor': 0, 'flags': 0, 'id': 1509730499569, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730499, 'nid': 1509730195807, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800406] sched.py:answerCard(): 
[1509800406] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801040, 'factor': 0, 'flags': 0, 'id': 1509730499569, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800406, 'nid': 1509730195807, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800406] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1505, 'factor': 0, 'flags': 0, 'id': 1509730517027, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509730517, 'nid': 1509730499577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800408] sched.py:answerCard(): 
[1509800408] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801013, 'factor': 0, 'flags': 0, 'id': 1509730517027, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800408, 'nid': 1509730499577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800408] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1506, 'factor': 0, 'flags': 0, 'id': 1509731063224, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509731063, 'nid': 1509730743332, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800409] sched.py:answerCard(): 
[1509800409] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801142, 'factor': 0, 'flags': 0, 'id': 1509731063224, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800409, 'nid': 1509730743332, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800409] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1507, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779132, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800439] sched.py:answerCard(): 
[1509800439] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509800513, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800439, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800439] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1508, 'factor': 0, 'flags': 0, 'id': 1509779153335, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779153, 'nid': 1509779132942, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800443] sched.py:answerCard(): 
[1509800443] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801080, 'factor': 0, 'flags': 0, 'id': 1509779153335, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800443, 'nid': 1509779132942, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800443] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509, 'factor': 0, 'flags': 0, 'id': 1509779242713, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779242, 'nid': 1509779153341, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800599] sched.py:answerCard(): 
[1509800599] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801337, 'factor': 0, 'flags': 0, 'id': 1509779242713, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800599, 'nid': 1509779153341, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800599] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509800513, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800439, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800604] sched.py:answerCard(): 
[1509800604] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801273, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800604, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800604] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1510, 'factor': 0, 'flags': 0, 'id': 1509779435134, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509779435, 'nid': 1509779242720, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800610] sched.py:answerCard(): 
[1509800610] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801272, 'factor': 0, 'flags': 0, 'id': 1509779435134, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800610, 'nid': 1509779242720, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800610] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1511, 'factor': 0, 'flags': 0, 'id': 1509782284028, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509782284, 'nid': 1509779495053, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800614] sched.py:answerCard(): 
[1509800614] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 1509801317, 'factor': 0, 'flags': 0, 'id': 1509782284028, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800614, 'nid': 1509779495053, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800614] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509800971, 'factor': 0, 'flags': 0, 'id': 1509713691510, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800340, 'nid': 1509713519974, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800618] sched.py:answerCard(): 
[1509800618] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713691510, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800618, 'nid': 1509713519974, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800618] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509800991, 'factor': 0, 'flags': 0, 'id': 1509713712622, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800344, 'nid': 1509713691519, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800621] sched.py:answerCard(): 
[1509800621] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713712622, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800621, 'nid': 1509713691519, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800621] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509800999, 'factor': 0, 'flags': 0, 'id': 1509729844193, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800387, 'nid': 1509729814979, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800622] sched.py:answerCard(): 
[1509800622] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509729844193, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800622, 'nid': 1509729814979, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800622] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801000, 'factor': 0, 'flags': 0, 'id': 1509713865655, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800370, 'nid': 1509713812808, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800623] sched.py:answerCard(): 
[1509800623] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713865655, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800623, 'nid': 1509713812808, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800623] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801000, 'factor': 0, 'flags': 0, 'id': 1509729918020, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800390, 'nid': 1509729897142, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800624] sched.py:answerCard(): 
[1509800624] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509729918020, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800624, 'nid': 1509729897142, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800624] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801002, 'factor': 0, 'flags': 0, 'id': 1509713499992, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800296, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509800627] sched.py:answerCard(): 
[1509800627] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713499992, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800627, 'nid': 1509713458561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 4, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800627] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801008, 'factor': 0, 'flags': 0, 'id': 1509730127052, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800397, 'nid': 1509729918023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800629] sched.py:answerCard(): 
[1509800629] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509730127052, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800629, 'nid': 1509729918023, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800629] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801010, 'factor': 0, 'flags': 0, 'id': 1509729855874, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800388, 'nid': 1509729844303, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800629] sched.py:answerCard(): 
[1509800629] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509729855874, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800629, 'nid': 1509729844303, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800629] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801013, 'factor': 0, 'flags': 0, 'id': 1509730517027, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800408, 'nid': 1509730499577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800630] sched.py:answerCard(): 
[1509800630] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509730517027, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800630, 'nid': 1509730499577, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800630] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801024, 'factor': 0, 'flags': 0, 'id': 1509713767970, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800353, 'nid': 1509713712629, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800631] sched.py:answerCard(): 
[1509800631] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713767970, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800631, 'nid': 1509713712629, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800631] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801037, 'factor': 0, 'flags': 0, 'id': 1509713519970, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800325, 'nid': 1509713499996, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800632] sched.py:answerCard(): 
[1509800632] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713519970, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800632, 'nid': 1509713499996, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800632] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801040, 'factor': 0, 'flags': 0, 'id': 1509730499569, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800406, 'nid': 1509730195807, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800633] sched.py:answerCard(): 
[1509800633] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509730499569, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800633, 'nid': 1509730195807, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800633] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801057, 'factor': 0, 'flags': 0, 'id': 1509729897138, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800389, 'nid': 1509729855879, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800634] sched.py:answerCard(): 
[1509800634] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509729897138, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800634, 'nid': 1509729855879, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800634] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801076, 'factor': 0, 'flags': 0, 'id': 1509713812802, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800359, 'nid': 1509713797780, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800635] sched.py:answerCard(): 
[1509800635] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713812802, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800635, 'nid': 1509713797780, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800635] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801080, 'factor': 0, 'flags': 0, 'id': 1509779153335, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800443, 'nid': 1509779132942, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800636] sched.py:answerCard(): 
[1509800636] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509779153335, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800636, 'nid': 1509779132942, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800636] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801100, 'factor': 0, 'flags': 0, 'id': 1509713797777, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800356, 'nid': 1509713767977, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800637] sched.py:answerCard(): 
[1509800637] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713797777, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800637, 'nid': 1509713767977, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800637] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801106, 'factor': 0, 'flags': 0, 'id': 1509713931879, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800376, 'nid': 1509713865663, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800639] sched.py:answerCard(): 
[1509800639] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509713931879, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800639, 'nid': 1509713865663, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800639] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801134, 'factor': 0, 'flags': 0, 'id': 1509730195801, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800404, 'nid': 1509730127062, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800639] sched.py:answerCard(): 
[1509800639] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509730195801, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800639, 'nid': 1509730127062, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800639] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801142, 'factor': 0, 'flags': 0, 'id': 1509731063224, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800409, 'nid': 1509730743332, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800640] sched.py:answerCard(): 
[1509800640] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509731063224, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800640, 'nid': 1509730743332, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800640] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801272, 'factor': 0, 'flags': 0, 'id': 1509779435134, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800610, 'nid': 1509779242720, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800641] sched.py:answerCard(): 
[1509800641] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509779435134, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800641, 'nid': 1509779242720, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800641] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801273, 'factor': 0, 'flags': 0, 'id': 1509779132933, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800604, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509800642] sched.py:answerCard(): 
[1509800642] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509779132933, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800642, 'nid': 1509731063571, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800642] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801317, 'factor': 0, 'flags': 0, 'id': 1509782284028, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800614, 'nid': 1509779495053, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800643] sched.py:answerCard(): 
[1509800643] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509782284028, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800643, 'nid': 1509779495053, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800643] sched.py:getCard(): {'data': u'', 'did': 1509708854481, 'due': 1509801337, 'factor': 0, 'flags': 0, 'id': 1509779242713, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800599, 'nid': 1509779153341, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509800644] sched.py:answerCard(): 
[1509800644] cards.py:flushSched(): {'data': u'', 'did': 1509708854481, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509779242713, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800644, 'nid': 1509779153341, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800647] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509800647] sched.py:_updateCutoff(): 211, 1509818400
[1509800648] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509799095767,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509800649,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 78}
[1509800648] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509800647509,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509800648,
 'usn': 78}
[1509800649] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509800649] sync.py:newerRows(): cards, []
[1509800649] sync.py:newerRows(): notes, []
[1509800649] sync.py:sync(): client chunk, {'cards': [(1509710231633,
            1509710203261,
            1509708854481,
            0,
            1509800261,
            78,
            2,
            2,
            212,
            1,
            2500,
            7,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713285463,
            1509713254752,
            1509708854481,
            0,
            1509800280,
            78,
            2,
            2,
            212,
            1,
            2500,
            5,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713402973,
            1509713374190,
            1509708854481,
            0,
            1509800385,
            78,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713458555,
            1509713427594,
            1509708854481,
            0,
            1509800255,
            78,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713499992,
            1509713458561,
            1509708854481,
            0,
            1509800627,
            78,
            2,
            2,
            212,
            1,
            2500,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713519970,
            1509713499996,
            1509708854481,
            0,
            1509800632,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713691510,
            1509713519974,
            1509708854481,
            0,
            1509800618,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713712622,
            1509713691519,
            1509708854481,
            0,
            1509800621,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713767970,
            1509713712629,
            1509708854481,
            0,
            1509800631,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713797777,
            1509713767977,
            1509708854481,
            0,
            1509800637,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713812802,
            1509713797780,
            1509708854481,
            0,
            1509800635,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713865655,
            1509713812808,
            1509708854481,
            0,
            1509800623,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509713931879,
            1509713865663,
            1509708854481,
            0,
            1509800639,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509729844193,
            1509729814979,
            1509708854481,
            0,
            1509800622,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509729855874,
            1509729844303,
            1509708854481,
            0,
            1509800629,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509729897138,
            1509729855879,
            1509708854481,
            0,
            1509800634,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509729918020,
            1509729897142,
            1509708854481,
            0,
            1509800624,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509730127052,
            1509729918023,
            1509708854481,
            0,
            1509800629,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509730195801,
            1509730127062,
            1509708854481,
            0,
            1509800639,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509730499569,
            1509730195807,
            1509708854481,
            0,
            1509800633,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509730517027,
            1509730499577,
            1509708854481,
            0,
            1509800630,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509731063224,
            1509730743332,
            1509708854481,
            0,
            1509800640,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509779132933,
            1509731063571,
            1509708854481,
            0,
            1509800642,
            78,
            2,
            2,
            212,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509779153335,
            1509779132942,
            1509708854481,
            0,
            1509800636,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509779242713,
            1509779153341,
            1509708854481,
            0,
            1509800644,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509779435134,
            1509779242720,
            1509708854481,
            0,
            1509800641,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509782284028,
            1509779495053,
            1509708854481,
            0,
            1509800643,
            78,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [],
 'revlog': [(1509799712380, 1509713402973, 78, 2, -600, -60, 0, 26798, 0),
            (1509799788724, 1509713499992, 78, 1, -60, -600, 0, 60000, 0),
            (1509800255718, 1509713458555, 78, 2, 1, -600, 2500, 60000, 0),
            (1509800261862, 1509710231633, 78, 2, 1, -600, 2500, 6131, 0),
            (1509800280613, 1509713285463, 78, 2, 1, -600, 2500, 18749, 0),
            (1509800296557, 1509713499992, 78, 2, -600, -60, 0, 15936, 0),
            (1509800325555, 1509713519970, 78, 2, -600, -60, 0, 28994, 0),
            (1509800340244, 1509713691510, 78, 2, -600, -60, 0, 14686, 0),
            (1509800344568, 1509713712622, 78, 2, -600, -60, 0, 4320, 0),
            (1509800353490, 1509713767970, 78, 2, -600, -60, 0, 8916, 0),
            (1509800356513, 1509713797777, 78, 2, -600, -60, 0, 3020, 0),
            (1509800359531, 1509713812802, 78, 2, -600, -60, 0, 3014, 0),
            (1509800370645, 1509713865655, 78, 2, -600, -60, 0, 11110, 0),
            (1509800376660, 1509713931879, 78, 2, -600, -60, 0, 6013, 0),
            (1509800385711, 1509713402973, 78, 2, 1, -600, 2500, 9049, 0),
            (1509800387570, 1509729844193, 78, 2, -600, -60, 0, 1856, 0),
            (1509800388066, 1509729855874, 78, 2, -600, -60, 0, 492, 0),
            (1509800389224, 1509729897138, 78, 2, -600, -60, 0, 1155, 0),
            (1509800390071, 1509729918020, 78, 2, -600, -60, 0, 843, 0),
            (1509800397770, 1509730127052, 78, 2, -600, -60, 0, 7695, 0),
            (1509800404506, 1509730195801, 78, 2, -600, -60, 0, 6733, 0),
            (1509800406964, 1509730499569, 78, 2, -600, -60, 0, 2454, 0),
            (1509800408400, 1509730517027, 78, 2, -600, -60, 0, 1432, 0),
            (1509800409848, 1509731063224, 78, 2, -600, -60, 0, 1444, 0),
            (1509800439188, 1509779132933, 78, 1, -60, -60, 0, 29336, 0),
            (1509800443922, 1509779153335, 78, 2, -600, -60, 0, 4732, 0),
            (1509800599722, 1509779242713, 78, 2, -600, -60, 0, 60000, 0),
            (1509800604463, 1509779132933, 78, 2, -600, -60, 0, 4733, 0),
            (1509800610117, 1509779435134, 78, 2, -600, -60, 0, 5650, 0),
            (1509800614776, 1509782284028, 78, 2, -600, -60, 0, 4655, 0),
            (1509800618737, 1509713691510, 78, 2, 1, -600, 2500, 3957, 0),
            (1509800621101, 1509713712622, 78, 2, 1, -600, 2500, 2360, 0),
            (1509800622659, 1509729844193, 78, 2, 1, -600, 2500, 1554, 0),
            (1509800623746, 1509713865655, 78, 2, 1, -600, 2500, 1082, 0),
            (1509800624927, 1509729918020, 78, 2, 1, -600, 2500, 1177, 0),
            (1509800627940, 1509713499992, 78, 2, 1, -600, 2500, 3008, 0),
            (1509800629121, 1509730127052, 78, 2, 1, -600, 2500, 1176, 0),
            (1509800629832, 1509729855874, 78, 2, 1, -600, 2500, 707, 0),
            (1509800630816, 1509730517027, 78, 2, 1, -600, 2500, 980, 0),
            (1509800631559, 1509713767970, 78, 2, 1, -600, 2500, 741, 0),
            (1509800632763, 1509713519970, 78, 2, 1, -600, 2500, 1199, 0),
            (1509800633766, 1509730499569, 78, 2, 1, -600, 2500, 999, 0),
            (1509800634467, 1509729897138, 78, 2, 1, -600, 2500, 696, 0),
            (1509800635797, 1509713812802, 78, 2, 1, -600, 2500, 1327, 0),
            (1509800636853, 1509779153335, 78, 2, 1, -600, 2500, 1052, 0),
            (1509800637955, 1509713797777, 78, 2, 1, -600, 2500, 1098, 0),
            (1509800639137, 1509713931879, 78, 2, 1, -600, 2500, 1179, 0),
            (1509800639969, 1509730195801, 78, 2, 1, -600, 2500, 828, 0),
            (1509800640854, 1509731063224, 78, 2, 1, -600, 2500, 880, 0),
            (1509800641741, 1509779435134, 78, 2, 1, -600, 2500, 882, 0),
            (1509800642752, 1509779132933, 78, 2, 1, -600, 2500, 1008, 0),
            (1509800643676, 1509782284028, 78, 2, 1, -600, 2500, 919, 0),
            (1509800644876, 1509779242713, 78, 2, 1, -600, 2500, 1196, 0)]}
[1509800650] sync.py:sync(): findChanges
[1509800653] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509800653] sched.py:_updateCutoff(): 211, 1509818400
[1509800655] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509800650810,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509800655,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 79}
[1509800655] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509800650810,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509800655,
 'usn': 79}
[1509800655] sync.py:sync(): no changes
[1509800655] sync.py:sync(): findChanges
[1509800656] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509800656] sched.py:_updateCutoff(): 211, 1509818400
[1509800666] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724093, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509724024, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509800752] sched.py:answerCard(): 
[1509800752] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801373, 'factor': 0, 'flags': 0, 'id': 1509181352017, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800752, 'nid': 1509179570873, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800752] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724098, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509724030, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509800761] sched.py:answerCard(): 
[1509800761] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509800834, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800761, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800761] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724575, 'factor': 0, 'flags': 0, 'id': 1509178968303, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723966, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509800787] sched.py:answerCard(): 
[1509800787] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509178968303, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800787, 'nid': 1509178911360, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800787] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724623, 'factor': 0, 'flags': 0, 'id': 1509179428263, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723979, 'nid': 1509178968416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509800797] sched.py:answerCard(): 
[1509800797] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509179428263, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800797, 'nid': 1509178968416, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800797] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509724639, 'factor': 0, 'flags': 0, 'id': 1509179552419, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509723994, 'nid': 1509179428270, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 77}
[1509800833] sched.py:answerCard(): 
[1509800833] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 212, 'factor': 2500, 'flags': 0, 'id': 1509179552419, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1509800833, 'nid': 1509179428270, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1509800833] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1456, 'factor': 0, 'flags': 0, 'id': 1509707920791, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509707920, 'nid': 1509707853557, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 76}
[1509800843] sched.py:answerCard(): 
[1509800843] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801554, 'factor': 0, 'flags': 0, 'id': 1509707920791, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800843, 'nid': 1509707853557, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800843] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509800834, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800761, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509800846] sched.py:answerCard(): 
[1509800846] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509800908, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800846, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800846] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1457, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509708465, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 76}
[1509800883] sched.py:answerCard(): 
[1509800883] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509800955, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800883, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800883] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1492, 'factor': 0, 'flags': 0, 'id': 1509719880749, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509719880, 'nid': 1509719866636, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800915] sched.py:answerCard(): 
[1509800915] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801650, 'factor': 0, 'flags': 0, 'id': 1509719880749, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800915, 'nid': 1509719866636, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800915] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509800908, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800846, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509800947] sched.py:answerCard(): 
[1509800947] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801643, 'factor': 0, 'flags': 0, 'id': 1509707751419, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509800947, 'nid': 1509707740012, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509800947] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1493, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722565, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509800991] sched.py:answerCard(): 
[1509800991] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801061, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800991, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509800991] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509800955, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800883, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509801097] sched.py:answerCard(): 
[1509801097] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801170, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801097, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801097] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801061, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509800991, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509801102] sched.py:answerCard(): 
[1509801102] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801169, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801102, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801102] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1494, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722719, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509801109] sched.py:answerCard(): 
[1509801109] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801177, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801109, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509801109] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1495, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509722825, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509801134] sched.py:answerCard(): 
[1509801134] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801198, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801134, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509801134] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1496, 'factor': 0, 'flags': 0, 'id': 1509724794186, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509724794, 'nid': 1509724624781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509801140] sched.py:answerCard(): 
[1509801140] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801789, 'factor': 0, 'flags': 0, 'id': 1509724794186, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1509801140, 'nid': 1509724624781, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509801140] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1497, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1509729807, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': 77}
[1509801144] sched.py:answerCard(): 
[1509801144] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801216, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801144, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1509801144] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801169, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801102, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509801148] sched.py:answerCard(): 
[1509801148] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801208, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801148, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801148] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801170, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801097, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509801150] sched.py:answerCard(): 
[1509801150] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801210, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801150, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801150] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801177, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801109, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509801155] sched.py:answerCard(): 
[1509801155] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801215, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801155, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801155] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801198, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801134, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509801156] sched.py:answerCard(): 
[1509801156] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801216, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801156, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801156] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801208, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801148, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509801158] sched.py:answerCard(): 
[1509801158] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801218, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801158, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801158] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801210, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801150, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509801159] sched.py:answerCard(): 
[1509801159] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801219, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801159, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801159] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801215, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801155, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509801160] sched.py:answerCard(): 
[1509801160] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801220, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801160, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801160] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801216, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801156, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509801161] sched.py:answerCard(): 
[1509801161] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801221, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801161, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801161] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801216, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801144, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1509801162] sched.py:answerCard(): 
[1509801162] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801222, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801162, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801162] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801218, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801158, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509801162] sched.py:answerCard(): 
[1509801162] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801222, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801162, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801162] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801219, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801159, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509801163] sched.py:answerCard(): 
[1509801163] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801223, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801163, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801163] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801220, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801160, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509801164] sched.py:answerCard(): 
[1509801164] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801224, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801164, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801164] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801221, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801161, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1}
[1509801166] sched.py:answerCard(): 
[1509801166] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801226, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801166, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801166] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801222, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801162, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509801167] sched.py:answerCard(): 
[1509801167] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801227, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801167, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801167] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801222, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801162, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1509801167] sched.py:answerCard(): 
[1509801167] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801227, 'factor': 0, 'flags': 0, 'id': 1509729807629, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801167, 'nid': 1509724794310, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 3, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801167] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801223, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801163, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1}
[1509801168] sched.py:answerCard(): 
[1509801168] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801228, 'factor': 0, 'flags': 0, 'id': 1509708465541, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801168, 'nid': 1509708009165, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801168] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801224, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801164, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509801169] sched.py:answerCard(): 
[1509801169] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801229, 'factor': 0, 'flags': 0, 'id': 1509722719627, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801169, 'nid': 1509722565561, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801169] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801226, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801166, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 4, 'type': 1, 'usn': -1}
[1509801169] sched.py:answerCard(): 
[1509801169] cards.py:flushSched(): {'data': u'', 'did': 1509178930435, 'due': 1509801229, 'factor': 0, 'flags': 0, 'id': 1509722825338, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801169, 'nid': 1509722719631, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 5, 'type': 1, 'usn': -1, 'wasNew': False}
[1509801169] sched.py:getCard(): {'data': u'', 'did': 1509178930435, 'due': 1509801227, 'factor': 0, 'flags': 0, 'id': 1509722565433, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1509801167, 'nid': 1509720544674, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 6, 'type': 1, 'usn': -1}
[1509801171] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509801171] sched.py:_updateCutoff(): 211, 1509818400
[1509801173] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509800650810,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509801173,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 79}
[1509801173] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509801171701,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509801173,
 'usn': 79}
[1509801174] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1509801174] sync.py:newerRows(): cards, []
[1509801174] sync.py:newerRows(): notes, []
[1509801174] sync.py:sync(): client chunk, {'cards': [(1509178968303,
            1509178911360,
            1509178930435,
            0,
            1509800787,
            79,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509179428263,
            1509178968416,
            1509178930435,
            0,
            1509800797,
            79,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509179552419,
            1509179428270,
            1509178930435,
            0,
            1509800833,
            79,
            2,
            2,
            212,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509181352017,
            1509179570873,
            1509178930435,
            0,
            1509800752,
            79,
            1,
            1,
            1509801373,
            0,
            0,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509707751419,
            1509707740012,
            1509178930435,
            0,
            1509800947,
            79,
            1,
            1,
            1509801643,
            0,
            0,
            4,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509707920791,
            1509707853557,
            1509178930435,
            0,
            1509800843,
            79,
            1,
            1,
            1509801554,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509708465541,
            1509708009165,
            1509178930435,
            0,
            1509801168,
            79,
            1,
            1,
            1509801228,
            0,
            0,
            6,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509719880749,
            1509719866636,
            1509178930435,
            0,
            1509800915,
            79,
            1,
            1,
            1509801650,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509722565433,
            1509720544674,
            1509178930435,
            0,
            1509801167,
            79,
            1,
            1,
            1509801227,
            0,
            0,
            6,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509722719627,
            1509722565561,
            1509178930435,
            0,
            1509801169,
            79,
            1,
            1,
            1509801229,
            0,
            0,
            5,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509722825338,
            1509722719631,
            1509178930435,
            0,
            1509801169,
            79,
            1,
            1,
            1509801229,
            0,
            0,
            5,
            0,
            2002,
            0,
            0,
            0,
            u''),
           (1509724794186,
            1509724624781,
            1509178930435,
            0,
            1509801140,
            79,
            1,
            1,
            1509801789,
            0,
            0,
            1,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1509729807629,
            1509724794310,
            1509178930435,
            0,
            1509801167,
            79,
            1,
            1,
            1509801227,
            0,
            0,
            3,
            0,
            2002,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [],
 'revlog': [(1509800752675, 1509181352017, 79, 2, -600, -60, 0, 60000, 0),
            (1509800761664, 1509707751419, 79, 1, -60, -60, 0, 8987, 0),
            (1509800787609, 1509178968303, 79, 2, 1, -600, 2500, 25942, 0),
            (1509800797407, 1509179428263, 79, 2, 1, -600, 2500, 9793, 0),
            (1509800833162, 1509179552419, 79, 2, 1, -600, 2500, 35750, 0),
            (1509800843122, 1509707920791, 79, 2, -600, -60, 0, 9956, 0),
            (1509800846510, 1509707751419, 79, 1, -60, -60, 0, 3384, 0),
            (1509800883278, 1509708465541, 79, 1, -60, -60, 0, 36764, 0),
            (1509800915098, 1509719880749, 79, 2, -600, -60, 0, 31818, 0),
            (1509800947780, 1509707751419, 79, 2, -600, -60, 0, 32679, 0),
            (1509800991038, 1509722565433, 79, 1, -60, -60, 0, 43254, 0),
            (1509801097613, 1509708465541, 79, 1, -60, -60, 0, 60000, 0),
            (1509801102573, 1509722565433, 79, 1, -60, -60, 0, 4956, 0),
            (1509801109342, 1509722719627, 79, 1, -60, -60, 0, 6767, 0),
            (1509801134874, 1509722825338, 79, 1, -60, -60, 0, 25530, 0),
            (1509801140314, 1509724794186, 79, 2, -600, -60, 0, 5437, 0),
            (1509801144849, 1509729807629, 79, 1, -60, -60, 0, 4533, 0),
            (1509801148337, 1509722565433, 79, 1, -60, -60, 0, 3485, 0),
            (1509801150180, 1509708465541, 79, 1, -60, -60, 0, 1840, 0),
            (1509801155022, 1509722719627, 79, 1, -60, -60, 0, 4840, 0),
            (1509801156960, 1509722825338, 79, 1, -60, -60, 0, 1935, 0),
            (1509801158263, 1509722565433, 79, 1, -60, -60, 0, 1301, 0),
            (1509801159306, 1509708465541, 79, 1, -60, -60, 0, 1041, 0),
            (1509801160588, 1509722719627, 79, 1, -60, -60, 0, 1280, 0),
            (1509801161499, 1509722825338, 79, 1, -60, -60, 0, 908, 0),
            (1509801162238, 1509729807629, 79, 1, -60, -60, 0, 736, 0),
            (1509801162970, 1509722565433, 79, 1, -60, -60, 0, 728, 0),
            (1509801163697, 1509708465541, 79, 1, -60, -60, 0, 722, 0),
            (1509801164851, 1509722719627, 79, 1, -60, -60, 0, 1150, 0),
            (1509801166114, 1509722825338, 79, 1, -60, -60, 0, 1261, 0),
            (1509801167004, 1509722565433, 79, 1, -60, -60, 0, 886, 0),
            (1509801167734, 1509729807629, 79, 1, -60, -60, 0, 726, 0),
            (1509801168423, 1509708465541, 79, 1, -60, -60, 0, 684, 0),
            (1509801169048, 1509722719627, 79, 1, -60, -60, 0, 622, 0),
            (1509801169726, 1509722825338, 79, 1, -60, -60, 0, 674, 0)]}
[1509801175] sync.py:sync(): findChanges
[1509801176] sync.py:sync(): last local usn is 834
[1509801177] sync.py:sync(): mediaChanges resp count 0
[1509801177] media.py:mediaChangesZip(): +media zip, latex-dc420e0f2e5eb6e1bee11d1e86dd09afd45d485b.png
[1509801177] sync.py:sync(): processed 1, serverUsn 835, clientUsn 834
[1509801177] sync.py:sync(): lastUsn in sync, updating local
[1509801179] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1509801179] sched.py:_updateCutoff(): 211, 1509818400
[1509801180] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1509801175216,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1509801181,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 80}
[1509801180] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1509801175216,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1509801180,
 'usn': 80}
[1509801180] sync.py:sync(): no changes
[1509801180] sync.py:sync(): findChanges
[1510577770] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1510577770] sched.py:_updateCutoff(): 220, 1510596000
[1510577770] sched.py:unburyCards(): [1509709337215]
[1510577771] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1510114503003,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1510577772,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 88}
[1510577771] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1510577770457,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1510577771,
 'usn': 80}
[1510577773] sync.py:sync(): server chunk, {u'done': False,
 u'revlog': [[1509850064377, 1508325240342, 88, 3, 4, -600, 2500, 3795, 0],
             [1509850067184, 1508327458673, 88, 3, 4, -600, 2500, 2792, 0],
             [1509850072520, 1508326710444, 88, 3, 5, -600, 2500, 5325, 0],
             [1509850088130, 1508327432508, 88, 3, 3, -600, 2500, 15599, 0],
             [1509850108219, 1508328513584, 88, 3, 4, -600, 2500, 20081, 0],
             [1509850129058, 1508327535276, 88, 1, -60, -600, 0, 20830, 0],
             [1509850142419, 1508325321814, 88, 3, 4, -600, 2500, 13350, 0],
             [1509850169741, 1508244725000, 88, 3, 5, -60, 2500, 27313, 0],
             [1509850177914, 1508244739772, 88, 1, -60, -60, 0, 8164, 0],
             [1509850186924, 1508244582158, 88, 3, 3, -60, 2500, 9006, 0],
             [1509850193532, 1508244760697, 88, 3, 3, -60, 2500, 6603, 0],
             [1509850212504, 1508244962306, 88, 3, 4, -60, 2500, 18961, 0],
             [1509850218739, 1508244840306, 88, 3, 3, -60, 2500, 6230, 0],
             [1509850228761, 1508245138329, 88, 3, 3, -60, 2500, 10011, 0],
             [1509850246187, 1508245805009, 88, 3, 3, -60, 2500, 17419, 0],
             [1509850266421, 1508244503647, 88, 3, 3, -600, 2500, 20230, 0],
             [1509850274750, 1508247899333, 88, 3, 3, -60, 2500, 8321, 0],
             [1509850281131, 1508248076701, 88, 3, 3, -60, 2500, 6371, 0],
             [1509850283885, 1508246958054, 88, 3, 5, -60, 2500, 2747, 0],
             [1509850298667, 1508246997127, 88, 3, 3, -60, 2500, 14774, 0],
             [1509853822114, 1508247063792, 88, 3, 3, -60, 2500, 18551, 0],
             [1509853843682, 1508247507886, 88, 1, -60, -60, 0, 21554, 0],
             [1509853876692, 1498288273155, 88, 2, 1, -600, 2100, 25453, 2],
             [1509853900712, 1498287769643, 88, 2, 1, -600, 2300, 24009, 2],
             [1509853918698, 1498287714175, 88, 2, 1, -600, 1900, 17974, 2],
             [1509853945285, 1498286994780, 88, 2, 1, -600, 2300, 26575, 2],
             [1509854014456,
              1498287807022,
              88,
              1,
              -600,
              -600,
              2300,
              35825,
              2],
             [1509854029910, 1508327535276, 88, 3, 3, -60, 2500, 15449, 0],
             [1509854049569, 1508244739772, 88, 3, 4, -60, 2500, 19651, 0],
             [1509854061121, 1508247507886, 88, 3, 5, -60, 2500, 11545, 0],
             [1509854065760, 1498288208528, 88, 4, 347, 42, 2650, 4624, 1],
             [1509854071964, 1501467108416, 88, 3, 3, -60, 2500, 6187, 0],
             [1509854080209, 1498287540312, 88, 4, 354, 39, 2650, 8234, 1],
             [1509854095657, 1501467121294, 88, 3, 3, -60, 2500, 15440, 0],
             [1509854107315, 1498462535691, 88, 4, 313, 46, 2650, 11649, 1],
             [1509854112166, 1501467150595, 88, 3, 4, -60, 2500, 4844, 0],
             [1509854126686, 1498286935035, 88, 4, 300, 7, 2450, 14506, 1],
             [1509854130336, 1501467225029, 88, 3, 5, -60, 2500, 3641, 0],
             [1509854135428, 1498287864051, 88, 4, 325, 46, 2650, 5082, 1],
             [1509854142269, 1501467702660, 88, 3, 5, -60, 2500, 6828, 0],
             [1509854155064, 1498288642089, 88, 4, 267, 6, 2250, 12785, 1],
             [1509854171482, 1508245924149, 88, 1, -60, -60, 0, 16404, 0],
             [1509854181425, 1498286909961, 88, 1, -600, 1, 2100, 9931, 1],
             [1509854209875, 1508246087549, 88, 1, -60, -60, 0, 28440, 0],
             [1509854216058, 1498462622758, 88, 4, 341, 36, 2650, 6179, 1],
             [1509854245767, 1508248171938, 88, 3, 4, -60, 2500, 15933, 0],
             [1509854257277, 1508245924149, 88, 3, 3, -60, 2500, 11504, 0],
             [1509854267542, 1508820844058, 88, 3, 3, -60, 2500, 10255, 0],
             [1509854301927, 1498288157680, 88, 4, 354, 35, 2650, 34375, 1],
             [1509854331788, 1508246087549, 88, 3, 4, -60, 2500, 29848, 0],
             [1509854340196, 1498287498868, 88, 2, 28, 1, 1950, 8383, 1],
             [1509854360680, 1508822319996, 88, 3, 3, -60, 2500, 20480, 0],
             [1509854370881, 1498288254373, 88, 4, 327, 38, 2650, 10197, 1],
             [1509854375710, 1508822407730, 88, 3, 5, -60, 2500, 4819, 0],
             [1509854381796, 1498294460121, 88, 4, 392, 13, 2650, 6074, 1],
             [1509854387429, 1508822455386, 88, 3, 5, -60, 2500, 5621, 0],
             [1509854414396, 1498362532358, 88, 1, -600, 7, 2150, 26958, 1],
             [1509854443974, 1508822543718, 88, 1, -60, -60, 0, 29573, 0],
             [1509854472828, 1498294505712, 88, 1, -600, 8, 2300, 28848, 1],
             [1509854515692, 1508822733373, 88, 3, 4, -60, 2500, 42855, 0],
             [1509854528607, 1498294370773, 88, 1, -600, 8, 2300, 12908, 1],
             [1509854544290, 1508822543718, 88, 3, 3, -60, 2500, 15674, 0],
             [1509854570456, 1498363026129, 88, 1, -600, 12, 2300, 26157, 1],
             [1509854583820, 1508824473385, 88, 3, 4, -60, 2500, 13360, 0],
             [1509854608696, 1508824535801, 88, 3, 4, -60, 2500, 13345, 0],
             [1509854623734, 1498295681100, 88, 4, 411, 5, 2650, 15030, 1],
             [1509854631324, 1508825196836, 88, 1, -60, -60, 0, 7585, 0],
             [1509854639434, 1498292968107, 88, 4, 412, 12, 2650, 8101, 1],
             [1509854648542, 1508825596545, 88, 1, -60, -60, 0, 9098, 0],
             [1509854666027, 1498295193305, 88, 4, 412, 10, 2650, 17476, 1],
             [1509854723250, 1508825736407, 88, 1, -60, -60, 0, 57213, 0],
             [1509854727872, 1508825196836, 88, 3, 4, -60, 2500, 4614, 0],
             [1509854909938, 1498287807022, 88, 2, 1, -600, 2300, 28949, 2],
             [1509854932099, 1508825596545, 88, 3, 4, -60, 2500, 22152, 0],
             [1509854974140, 1498286909961, 88, 2, 1, -600, 2100, 42037, 2],
             [1509855050841, 1508825736407, 88, 2, -600, -60, 0, 60000, 0],
             [1509855060964, 1498362532358, 88, 2, 1, -600, 2150, 10114, 2],
             [1509855068596, 1498293113454, 88, 4, 408, 8, 2650, 7621, 1],
             [1509855076638, 1509163789923, 88, 3, 3, -60, 2500, 8030, 0],
             [1509855108881, 1498294505712, 88, 2, 1, -600, 2300, 32233, 2],
             [1509855113761, 1509163863136, 88, 3, 5, -60, 2500, 4875, 0],
             [1509855134321, 1498293045114, 88, 4, 361, 5, 2450, 20551, 1],
             [1509855156065,
              1498294370773,
              88,
              1,
              -600,
              -600,
              2300,
              21733,
              2],
             [1509855177559, 1498295832425, 88, 1, -600, 10, 2300, 21487, 1],
             [1509855205618, 1498363026129, 88, 2, 1, -600, 2300, 28052, 2],
             [1509855212853, 1498293779065, 88, 4, 407, 11, 2650, 7227, 1],
             [1509855243256, 1509164137933, 88, 1, -60, -60, 0, 30396, 0],
             [1509855251136, 1498294034807, 88, 1, -600, 7, 2300, 7875, 1],
             [1509855889202, 1508325174211, 88, 4, 36, 1, 2650, 26106, 1],
             [1509855891405, 1509164137933, 88, 3, 5, -60, 2500, 2187, 0],
             [1509855907495, 1508825736407, 88, 3, 4, -600, 2500, 16081, 0],
             [1509855933031, 1509164678593, 88, 3, 4, -60, 2500, 25529, 0],
             [1509855937672, 1508326419771, 88, 4, 40, 1, 2650, 4633, 1],
             [1509856055896, 1509164792016, 88, 1, -60, -60, 0, 60000, 0],
             [1509856074666, 1509173553079, 88, 3, 3, -60, 2500, 18761, 0],
             [1509856212516, 1509174627339, 88, 1, -60, -60, 0, 60000, 0],
             [1509856343460, 1509164792016, 88, 1, -60, -60, 0, 39119, 0],
             [1509856371943, 1509174627339, 88, 3, 3, -60, 2500, 28480, 0],
             [1509856476073, 1509176046543, 88, 3, 4, -60, 2500, 21004, 0],
             [1509856558841, 1509164792016, 88, 3, 3, -60, 2500, 60000, 0],
             [1509856574554, 1509176274407, 88, 3, 3, -60, 2500, 15703, 0],
             [1509856642818, 1509177172555, 88, 1, -60, -60, 0, 50137, 0],
             [1509856711376, 1509178285663, 88, 1, -60, -60, 0, 24902, 0],
             [1509856795457, 1509177172555, 88, 1, -60, -60, 0, 60000, 0],
             [1509856853296, 1509178285663, 88, 3, 5, -60, 2500, 57832, 0],
             [1509856876947, 1509178344246, 88, 1, -60, -60, 0, 23648, 0],
             [1509856920761, 1509177172555, 88, 3, 5, -60, 2500, 5632, 0],
             [1509856964935, 1509178499348, 88, 1, -60, -60, 0, 29752, 0],
             [1509857136789, 1509178344246, 88, 1, -60, -60, 0, 60000, 0],
             [1509857145136, 1509178499348, 88, 3, 5, -60, 2500, 8338, 0],
             [1509859665319, 1509178729835, 88, 1, -60, -60, 0, 60000, 0],
             [1509859848753, 1509178344246, 88, 3, 4, -60, 2500, 60000, 0],
             [1509859853670, 1509178729835, 88, 1, -60, -60, 0, 4913, 0],
             [1509859880035, 1509185888419, 88, 2, -600, -60, 0, 8176, 0],
             [1509859922407, 1509186228296, 88, 3, 4, -60, 2500, 42368, 0],
             [1509859926633, 1509186278380, 88, 3, 4, -60, 2500, 4217, 0],
             [1509859929551, 1509178729835, 88, 1, -60, -60, 0, 2910, 0],
             [1509859933677, 1509186542159, 88, 3, 5, -60, 2500, 4118, 0],
             [1509859944445, 1509186857138, 88, 3, 3, -60, 2500, 10757, 0],
             [1509859996729, 1509188977011, 88, 3, 3, -60, 2500, 52276, 0],
             [1509860002938, 1509178729835, 88, 1, -60, -60, 0, 6203, 0],
             [1509860041210, 1509189107197, 88, 3, 4, -60, 2500, 38266, 0],
             [1509860475295, 1509189142322, 88, 3, 4, -60, 2500, 18792, 0],
             [1509860478042, 1509178729835, 88, 1, -60, -60, 0, 2740, 0],
             [1509860584124, 1509193463785, 88, 3, 4, -60, 2500, 60000, 0],
             [1509860587080, 1509178729835, 88, 1, -60, -60, 0, 2951, 0],
             [1509860635305, 1509193488590, 88, 1, -60, -60, 0, 48218, 0],
             [1509860656365, 1509193502162, 88, 3, 5, -60, 2500, 5898, 0],
             [1509860659148, 1509178729835, 88, 1, -60, -60, 0, 2772, 0],
             [1509860674338, 1509193678442, 88, 1, -60, -60, 0, 15179, 0],
             [1509860689761, 1509196033151, 88, 3, 4, -60, 2500, 12351, 0],
             [1509860803843, 1509196301076, 88, 3, 5, -60, 2500, 60000, 0],
             [1509860843770, 1509193488590, 88, 3, 5, -60, 2500, 39915, 0],
             [1509860849329, 1509178729835, 88, 1, -60, -60, 0, 5549, 0],
             [1509860923264, 1509193678442, 88, 3, 4, -60, 2500, 59437, 0],
             [1509860984572,
              1498295832425,
              88,
              1,
              -600,
              -600,
              2300,
              51582,
              2],
             [1509861054879, 1498294370773, 88, 2, 1, -600, 2300, 60000, 2],
             [1509861066404, 1498294034807, 88, 2, 1, -600, 2300, 11519, 2],
             [1509861069232, 1509178729835, 88, 1, -60, -60, 0, 2819, 0],
             [1509861092003, 1498362813617, 88, 4, 422, 12, 2650, 22759, 1],
             [1509861131559, 1509178968303, 88, 3, 5, -60, 2500, 39541, 0],
             [1509861818108, 1509178729835, 88, 1, -60, -60, 0, 19217, 0],
             [1509861923613, 1498295832425, 88, 2, 1, -600, 2300, 60000, 2],
             [1509861927218, 1509178729835, 88, 1, -60, -60, 0, 3599, 0],
             [1509861956884, 1498293732950, 88, 4, 417, 10, 2650, 29657, 1],
             [1509861971216, 1498293595533, 88, 4, 395, 12, 2650, 14324, 1],
             [1509861988691, 1498362288018, 88, 4, 404, 7, 2650, 17467, 1],
             [1509862026546, 1498294838891, 88, 4, 422, 9, 2650, 37848, 1],
             [1509862029068, 1509178729835, 88, 1, -60, -60, 0, 2515, 0],
             [1509862052335, 1498361722049, 88, 4, 426, 9, 2650, 23259, 1],
             [1509862075991, 1498362632441, 88, 4, 424, 5, 2650, 23651, 1],
             [1509862084712, 1498467479934, 88, 4, 399, 8, 2650, 8712, 1],
             [1509862106413, 1498467324904, 88, 4, 414, 12, 2650, 21689, 1],
             [1509862113391, 1509178729835, 88, 1, -60, -60, 0, 6973, 0],
             [1509862121168, 1498362234066, 88, 4, 422, 11, 2650, 7769, 1],
             [1509862173696, 1498362321406, 88, 4, 407, 9, 2650, 52522, 1],
             [1509862198476, 1509179428263, 88, 3, 5, -60, 2500, 24769, 0],
             [1509862201083, 1509178729835, 88, 1, -60, -60, 0, 2601, 0],
             [1509862227056, 1498362969897, 88, 4, 407, 9, 2650, 25963, 1],
             [1509862284631, 1509354783881, 88, 4, 17, 2, 2650, 57569, 1],
             [1509862287142, 1509178729835, 88, 1, -60, -60, 0, 2504, 0],
             [1509862340534, 1509367027559, 88, 1, -600, 4, 2300, 53383, 1],
             [1509862395209, 1509354640757, 88, 2, 5, 5, 2500, 54670, 1],
             [1509862398324, 1509178729835, 88, 1, -60, -60, 0, 3107, 0],
             [1509862414936, 1509354455668, 88, 4, 15, 5, 2800, 16605, 1],
             [1509862421513, 1509354980422, 88, 4, 17, 3, 2650, 6572, 1],
             [1509862426499, 1509354817489, 88, 4, 16, 3, 2800, 4982, 1],
             [1509862524526, 1509361246611, 88, 4, 18, 5, 2800, 60000, 1],
             [1509862526397, 1509178729835, 88, 1, -60, -60, 0, 1863, 0],
             [1509862536566, 1509351763128, 88, 4, 16, 4, 2800, 10160, 1],
             [1509862543044, 1509352202874, 88, 4, 17, 4, 2800, 6459, 1],
             [1509862579631, 1509352285035, 88, 4, 14, 3, 2650, 32915, 1],
             [1509862635380, 1509179552419, 88, 3, 4, -60, 2500, 55741, 0],
             [1509862637512, 1509178729835, 88, 1, -60, -60, 0, 2127, 0],
             [1509862644772, 1509352399860, 88, 4, 19, 5, 2800, 7254, 1],
             [1509862648601, 1509352066634, 88, 4, 16, 4, 2800, 3822, 1],
             [1509862678814, 1509352489329, 88, 4, 17, 4, 2650, 30206, 1],
             [1509862685226, 1509354703687, 88, 4, 15, 4, 2650, 6404, 1],
             [1509862704877, 1509369257013, 88, 1, -600, 3, 2300, 19644, 1],
             [1509862708009, 1509178729835, 88, 1, -60, -60, 0, 3125, 0],
             [1509862716046, 1509359342718, 88, 4, 18, 4, 2650, 8029, 1],
             [1509862721921, 1509352039212, 88, 4, 15, 3, 2650, 5868, 1],
             [1509862727906, 1509354183250, 88, 4, 17, 3, 2800, 5977, 1],
             [1509862751733, 1509354244677, 88, 4, 15, 2, 2500, 23818, 1],
             [1509862760417, 1509352364093, 88, 4, 15, 4, 2800, 8677, 1],
             [1509862763738, 1509354836353, 88, 4, 16, 4, 2650, 3311, 1],
             [1509862776913, 1509352418174, 88, 4, 17, 3, 2800, 9066, 1],
             [1509862778514, 1509178729835, 88, 1, -60, -60, 0, 1595, 0],
             [1509868570741, 1509181352017, 88, 1, -60, -60, 0, 16043, 0],
             [1509868579886, 1509181352017, 88, 1, -60, -60, 0, 9136, 0],
             [1509868582773, 1509181352017, 88, 1, -60, -60, 0, 2881, 0],
             [1509868592949, 1509181352017, 88, 2, -600, -60, 0, 10167, 0],
             [1509868621690, 1509181352017, 88, 2, 1, -600, 2500, 28738, 0],
             [1503623640229, 1503581140763, 88, 1, -60, -600, 0, 18016, 0],
             [1503623674689, 1503581480987, 88, 2, 1, -600, 2500, 34459, 0],
             [1503623702468, 1503581500324, 88, 2, 1, -600, 2500, 27763, 0],
             [1503623736468, 1503581320395, 88, 2, 1, -600, 2500, 34000, 0],
             [1503623740155, 1503581590420, 88, 2, 1, -600, 2500, 3687, 0],
             [1503623746495, 1503581519637, 88, 2, 1, -600, 2500, 6323, 0],
             [1503623752235, 1503581262131, 88, 2, 1, -600, 2500, 5719, 0],
             [1503623754667, 1503581552269, 88, 2, 1, -600, 2500, 2417, 0],
             [1503623774078, 1503581140763, 88, 1, -60, -60, 0, 19411, 0],
             [1503623777378, 1503581383092, 88, 3, 2, 1, 2500, 3296, 1],
             [1503623782014, 1503582777872, 88, 2, -600, -60, 0, 4635, 0],
             [1503623786522, 1503581090733, 88, 3, 4, 1, 2500, 4508, 1],
             [1503623791768, 1503582816771, 88, 2, -600, -60, 0, 5225, 0],
             [1503623811795, 1503582916933, 88, 2, -600, -60, 0, 20011, 0],
             [1503623819567, 1503582968921, 88, 2, -600, -60, 0, 7771, 0],
             [1503623824105, 1503583016214, 88, 2, -600, -60, 0, 4538, 0],
             [1503623836740, 1503583117717, 88, 2, -600, -60, 0, 12634, 0],
             [1503623976539, 1503583174669, 88, 2, -600, -60, 0, 60000, 0],
             [1503623988137, 1503581140763, 88, 2, -600, -60, 0, 11535, 0],
             [1503623993923, 1503583239885, 88, 2, -600, -60, 0, 5786, 0],
             [1503623999551, 1503583281813, 88, 2, -600, -60, 0, 5628, 0],
             [1503624005358, 1503583319508, 88, 2, -600, -60, 0, 5806, 0],
             [1503624014762, 1503583399956, 88, 2, -600, -60, 0, 9404, 0],
             [1503624019240, 1503583519501, 88, 2, -600, -60, 0, 4477, 0],
             [1503624024401, 1503583584981, 88, 2, -600, -60, 0, 5161, 0],
             [1503624033173, 1503584024153, 88, 2, -600, -60, 0, 8772, 0],
             [1503624039942, 1503584083006, 88, 2, -600, -60, 0, 6753, 0],
             [1503624117540, 1503584116933, 88, 2, -600, -60, 0, 60000, 0],
             [1503624124482, 1503584199647, 88, 2, -600, -60, 0, 6942, 0],
             [1503624135632, 1503584263871, 88, 2, -600, -60, 0, 11145, 0],
             [1503624226558, 1503584370119, 88, 1, -60, -60, 0, 60000, 0],
             [1503624238202, 1503584488366, 88, 2, -600, -60, 0, 11643, 0],
             [1503624246351, 1503584556014, 88, 2, -600, -60, 0, 8149, 0],
             [1503624252879, 1503584571302, 88, 1, -60, -60, 0, 6527, 0],
             [1503624367230, 1503584863944, 88, 2, -600, -60, 0, 60000, 0],
             [1503624373887, 1503584370119, 88, 2, -600, -60, 0, 6578, 0],
             [1503624378778, 1503584571302, 88, 2, -600, -60, 0, 4891, 0],
             [1503624403025, 1503584959791, 88, 1, -60, -60, 0, 24246, 0],
             [1503624415489, 1503582968921, 88, 2, 1, -600, 2500, 12449, 0],
             [1503624422885, 1503583117717, 88, 2, 1, -600, 2500, 7381, 0],
             [1503624426275, 1503582816771, 88, 2, 1, -600, 2500, 3374, 0],
             [1503624444244, 1503584959791, 88, 1, -60, -60, 0, 17953, 0],
             [1503624478704, 1503582777872, 88, 2, 1, -600, 2500, 34460, 0],
             [1503624483512, 1503583016214, 88, 2, 1, -600, 2500, 4808, 0],
             [1503624494504, 1503582916933, 88, 2, 1, -600, 2500, 10991, 0],
             [1503624597294, 1503584959791, 88, 2, -600, -60, 0, 60000, 0],
             [1503624600736, 1503583239885, 88, 2, 1, -600, 2500, 3426, 0],
             [1503624603441, 1503583281813, 88, 2, 1, -600, 2500, 2688, 0],
             [1503624613664, 1503583399956, 88, 2, 1, -600, 2500, 10223, 0],
             [1503624617483, 1503583319508, 88, 2, 1, -600, 2500, 3802, 0],
             [1503624646245, 1503583174669, 88, 2, 1, -600, 2500, 28761, 0],
             [1503624651396, 1503584024153, 88, 2, 1, -600, 2500, 5151, 0],
             [1503624653913, 1503583519501, 88, 2, 1, -600, 2500, 2502, 0],
             [1503624693471, 1503581140763, 88, 2, 1, -600, 2500, 39557, 0],
             [1503624703964, 1503583584981, 88, 2, 1, -600, 2500, 10424, 0],
             [1503624714446, 1503584083006, 88, 2, 1, -600, 2500, 10482, 0],
             [1503624723642, 1503584199647, 88, 2, 1, -600, 2500, 9195, 0]]}
[1510577773] sync.py:sync(): server chunk, {u'cards': [[1503581090733,
             1503581046597,
             1503581062724,
             0,
             1503628948,
             88,
             2,
             2,
             144,
             4,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581140763,
             1503581090818,
             1503581062724,
             0,
             1503628665,
             88,
             2,
             2,
             141,
             1,
             2500,
             7,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581262131,
             1503581140777,
             1503581062724,
             0,
             1503628684,
             88,
             2,
             2,
             141,
             1,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581320395,
             1503581262141,
             1503581062724,
             0,
             1503628695,
             88,
             2,
             2,
             141,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581383092,
             1503581320466,
             1503581062724,
             0,
             1503628945,
             88,
             2,
             2,
             142,
             2,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581480987,
             1503581383109,
             1503581062724,
             0,
             1503628708,
             88,
             2,
             2,
             141,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581500324,
             1503581481002,
             1503581062724,
             0,
             1503628730,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581519637,
             1503581500336,
             1503581062724,
             0,
             1503628735,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581552269,
             1503581519651,
             1503581062724,
             0,
             1503628739,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503581590420,
             1503581552285,
             1503581062724,
             0,
             1503628742,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503582777872,
             1503582739621,
             1503581628619,
             0,
             1503628758,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503582816771,
             1503582778004,
             1503581628619,
             0,
             1503628760,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503582916933,
             1503582816787,
             1503581628619,
             0,
             1503628765,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503582968921,
             1503582916949,
             1503581628619,
             0,
             1503628771,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583016214,
             1503582968938,
             1503581628619,
             0,
             1503628777,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583117717,
             1503583016229,
             1503581628619,
             0,
             1503628791,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583174669,
             1503583117766,
             1503581628619,
             0,
             1503628794,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583239885,
             1503583174682,
             1503581628619,
             0,
             1503628798,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583281813,
             1503583239900,
             1503581628619,
             0,
             1503628805,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583319508,
             1503583281825,
             1503581628619,
             0,
             1503628809,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583399956,
             1503583319522,
             1503581628619,
             0,
             1503628826,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583519501,
             1503583399972,
             1503581628619,
             0,
             1503628834,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503583584981,
             1503583519568,
             1503581628619,
             0,
             1503628837,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584024153,
             1503583584996,
             1503584002137,
             0,
             1503628849,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584083006,
             1503584024226,
             1503584002137,
             0,
             1503628870,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584116933,
             1503584083021,
             1503584002137,
             0,
             1503628877,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584199647,
             1503584116950,
             1503584002137,
             0,
             1503628890,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584263871,
             1503584199664,
             1503584002137,
             0,
             1503628895,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584370119,
             1503584263888,
             1503584002137,
             0,
             1503628904,
             88,
             2,
             2,
             141,
             1,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584488366,
             1503584370183,
             1503584002137,
             0,
             1503628912,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584556014,
             1503584488406,
             1503584002137,
             0,
             1503628915,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u'']],
 u'done': False,
 u'revlog': [[1503624726775, 1503584116933, 88, 2, 1, -600, 2500, 3117, 0],
             [1503624733223, 1503584263871, 88, 2, 1, -600, 2500, 6447, 0],
             [1503624738634, 1503584488366, 88, 2, 1, -600, 2500, 5411, 0],
             [1503624874744, 1503584556014, 88, 2, 1, -600, 2500, 60000, 0],
             [1503624878310, 1503584863944, 88, 2, 1, -600, 2500, 3549, 0],
             [1503624883141, 1503584571302, 88, 1, -60, -600, 0, 4815, 0],
             [1503624903831, 1503584370119, 88, 2, 1, -600, 2500, 20690, 0],
             [1503624908712, 1503584571302, 88, 2, -600, -60, 0, 4865, 0],
             [1503624926508, 1503584959791, 88, 2, 1, -600, 2500, 17796, 0],
             [1503624932379, 1503584571302, 88, 2, 1, -600, 2500, 5871, 0],
             [1503628665774, 1503581140763, 88, 2, 1, -600, 2500, 12957, 3],
             [1503628684094, 1503581262131, 88, 2, 1, -600, 2500, 18320, 3],
             [1503628695963, 1503581320395, 88, 2, 1, -600, 2500, 11789, 3],
             [1503628708254, 1503581480987, 88, 2, 1, -600, 2500, 12289, 3],
             [1503628730155, 1503581500324, 88, 2, 1, -600, 2500, 21901, 3],
             [1503628735679, 1503581519637, 88, 2, 1, -600, 2500, 5523, 3],
             [1503628739080, 1503581552269, 88, 2, 1, -600, 2500, 3384, 3],
             [1503628742200, 1503581590420, 88, 2, 1, -600, 2500, 3105, 3],
             [1503628758622, 1503582777872, 88, 2, 1, -600, 2500, 1918, 3],
             [1503628760032, 1503582816771, 88, 2, 1, -600, 2500, 1406, 3],
             [1503628765239, 1503582916933, 88, 2, 1, -600, 2500, 5207, 3],
             [1503628771410, 1503582968921, 88, 2, 1, -600, 2500, 6171, 3],
             [1503628777202, 1503583016214, 88, 2, 1, -600, 2500, 5791, 3],
             [1503628791009, 1503583117717, 88, 2, 1, -600, 2500, 13807, 3],
             [1503628794402, 1503583174669, 88, 2, 1, -600, 2500, 3392, 3],
             [1503628798342, 1503583239885, 88, 2, 1, -600, 2500, 3940, 3],
             [1503628805393, 1503583281813, 88, 2, 1, -600, 2500, 7035, 3],
             [1503628809875, 1503583319508, 88, 2, 1, -600, 2500, 4482, 3],
             [1503628826491, 1503583399956, 88, 2, 1, -600, 2500, 16615, 3],
             [1503628834005, 1503583519501, 88, 2, 1, -600, 2500, 7499, 3],
             [1503628837883, 1503583584981, 88, 2, 1, -600, 2500, 3877, 3],
             [1503628849352, 1503584024153, 88, 2, 1, -600, 2500, 11464, 3],
             [1503628870508, 1503584083006, 88, 2, 1, -600, 2500, 21155, 3],
             [1503628877938, 1503584116933, 88, 2, 1, -600, 2500, 7430, 3],
             [1503628890121, 1503584199647, 88, 2, 1, -600, 2500, 12183, 3],
             [1503628895328, 1503584263871, 88, 2, 1, -600, 2500, 5192, 3],
             [1503628904630, 1503584370119, 88, 2, 1, -600, 2500, 9302, 3],
             [1503628912554, 1503584488366, 88, 2, 1, -600, 2500, 7908, 3],
             [1503628915574, 1503584556014, 88, 2, 1, -600, 2500, 3019, 3],
             [1503628919534, 1503584571302, 88, 2, 1, -600, 2500, 3944, 3],
             [1503628925681, 1503584863944, 88, 2, 1, -600, 2500, 6147, 3],
             [1503628943688, 1503584959791, 88, 2, 1, -600, 2500, 18006, 3],
             [1503628945840, 1503581383092, 88, 2, 2, -600, 2500, 2151, 3],
             [1503628948144, 1503581090733, 88, 2, 4, -600, 2500, 2289, 3],
             [1509881181818, 1509181352017, 88, 2, 1, -600, 2500, 60000, 3],
             [1509881183954, 1509179552419, 88, 2, 4, -600, 2500, 2130, 3],
             [1509881186184, 1509178968303, 88, 2, 5, -600, 2500, 2223, 3],
             [1509881187962, 1509179428263, 88, 2, 5, -600, 2500, 1770, 3],
             [1509881452705, 1509722565433, 88, 1, -60, -60, 0, 60000, 0],
             [1509881515859, 1509729807629, 88, 1, -60, -60, 0, 60000, 0],
             [1509881520146, 1509708465541, 88, 3, 5, -60, 2500, 4189, 0],
             [1509881531396, 1509722719627, 88, 1, -60, -60, 0, 11243, 0],
             [1509881674943, 1509722825338, 88, 1, -60, -60, 0, 60000, 0],
             [1509881677939, 1509707920791, 88, 3, 3, -600, 2500, 2986, 0],
             [1509881769120, 1509707751419, 88, 3, 3, -600, 2500, 60000, 0],
             [1509881772309, 1509719880749, 88, 3, 3, -600, 2500, 3183, 0],
             [1509881774713, 1509724794186, 88, 3, 3, -600, 2500, 2398, 0],
             [1509881782591, 1509722565433, 88, 3, 5, -60, 2500, 7873, 0],
             [1509881784799, 1509729807629, 88, 3, 4, -60, 2500, 2203, 0],
             [1509881786765, 1509722719627, 88, 3, 3, -60, 2500, 1961, 0],
             [1509881788330, 1509722825338, 88, 3, 5, -60, 2500, 1559, 0],
             [1509881947027, 1509178968303, 88, 3, 5, -60, 2500, 27457, 0],
             [1509881950237, 1509179428263, 88, 3, 5, -60, 2500, 3203, 0],
             [1509882014343, 1509179552419, 88, 3, 5, -60, 2500, 60000, 0],
             [1509882169622, 1509181352017, 88, 3, 3, -60, 2500, 60000, 0],
             [1509882174726, 1509707751419, 88, 3, 5, -60, 2500, 5048, 0],
             [1509882177084, 1509707920791, 88, 3, 5, -60, 2500, 2353, 0],
             [1509882179193, 1509708465541, 88, 3, 5, -60, 2500, 2105, 0],
             [1509882180906, 1509719880749, 88, 3, 4, -60, 2500, 1707, 0],
             [1509882218250, 1509722565433, 88, 2, -600, -60, 2500, 37338, 0],
             [1509882223056, 1509722719627, 88, 3, 4, -60, 2500, 4800, 0],
             [1509882354345, 1509722825338, 88, 1, -60, -60, 2500, 60000, 0],
             [1509882357394, 1509724794186, 88, 3, 5, -60, 2500, 3042, 0],
             [1509882359249, 1509729807629, 88, 3, 3, -60, 2500, 1850, 0],
             [1509882442023, 1509722825338, 88, 2, -600, -60, 2500, 60000, 0],
             [1509882448607, 1509722565433, 88, 2, 1, -600, 2500, 6578, 0],
             [1509882451453, 1509722825338, 88, 2, 1, -600, 2500, 2841, 0],
             [1509884080006, 1509350448558, 88, 3, 5, -60, 2500, 2305, 0],
             [1509884082724, 1509351763128, 88, 3, 5, -60, 2500, 2711, 0],
             [1509884084350, 1509352039212, 88, 3, 5, -60, 2500, 1620, 0],
             [1509884086364, 1509352066634, 88, 3, 4, -60, 2500, 2008, 0],
             [1509884091395, 1509352202874, 88, 3, 4, -60, 2500, 5026, 0],
             [1509884094247, 1509352259812, 88, 3, 4, -60, 2500, 2845, 0],
             [1509884099208, 1509352285035, 88, 3, 4, -60, 2500, 4955, 0],
             [1509884102134, 1509352318367, 88, 3, 4, -60, 2500, 2924, 0],
             [1509884115867, 1509352364093, 88, 3, 4, -60, 2500, 13725, 0],
             [1509884118003, 1509352399860, 88, 3, 3, -60, 2500, 2131, 0],
             [1509884119990, 1509352418174, 88, 3, 5, -60, 2500, 1980, 0],
             [1509884123980, 1509352489329, 88, 3, 5, -60, 2500, 3980, 0],
             [1509884128607, 1509352552679, 88, 3, 3, -60, 2500, 4620, 0],
             [1509884146681, 1509353447614, 88, 3, 3, -60, 2500, 18068, 0],
             [1509884214599, 1509354183250, 88, 3, 4, -60, 2500, 60000, 0],
             [1509884248908, 1509354244677, 88, 1, -60, -60, 2500, 34263, 0],
             [1509884258959, 1509354299760, 88, 3, 5, -60, 2500, 10045, 0],
             [1509884266424, 1509354404469, 88, 3, 5, -60, 2500, 7457, 0],
             [1509884268300, 1509354455668, 88, 3, 5, -60, 2500, 1871, 0],
             [1509884272557, 1509354553868, 88, 3, 5, -60, 2500, 4253, 0],
             [1509884277821, 1509354640757, 88, 3, 4, -60, 2500, 5256, 0],
             [1509884293264, 1509354783881, 88, 3, 5, -60, 2500, 10434, 0],
             [1509884322264, 1509354817489, 88, 3, 5, -60, 2500, 28996, 0],
             [1509884330403, 1509354244677, 88, 3, 5, -60, 2500, 8134, 0],
             [1509884333138, 1509354836353, 88, 3, 5, -60, 2500, 2730, 0],
             [1509884336070, 1509354952464, 88, 3, 4, -60, 2500, 2927, 0],
             [1509884343074, 1509354980422, 88, 3, 4, -60, 2500, 6998, 0],
             [1509884344571, 1509359342718, 88, 3, 4, -60, 2500, 1491, 0],
             [1509884346444, 1509361246611, 88, 3, 4, -60, 2500, 1868, 0],
             [1509884348466, 1509362034159, 88, 3, 4, -60, 2500, 2015, 0],
             [1509884352355, 1509366170746, 88, 3, 5, -60, 2500, 3881, 0],
             [1509884385260, 1509367027559, 88, 3, 5, -60, 2500, 32900, 0],
             [1509884390669, 1509367058171, 88, 3, 5, -60, 2500, 5404, 0],
             [1509884400793, 1509369220696, 88, 3, 4, -60, 2500, 10119, 0],
             [1509884415294, 1509369257013, 88, 1, -60, -60, 2500, 14496, 0],
             [1509884421680, 1509369309166, 88, 3, 4, -60, 2500, 6383, 0],
             [1509884424475, 1509369463643, 88, 3, 3, -60, 2500, 2788, 0],
             [1509884446506, 1509369257013, 88, 3, 5, -60, 2500, 22025, 0],
             [1509884600212, 1509713285463, 88, 1, -600, 1, 2300, 31442, 1],
             [1509884610804, 1509730517027, 88, 4, 5, 1, 2650, 10526, 1],
             [1509884630094, 1509713767970, 88, 1, -600, 1, 2300, 19284, 1],
             [1509884636883, 1509709260280, 88, 4, 3, 1, 2650, 6782, 1],
             [1509884641255, 1509713427587, 88, 4, 3, 1, 2650, 4368, 1],
             [1509884644265, 1509709590325, 88, 4, 4, 1, 2650, 3004, 1],
             [1509885341253, 1509709070070, 88, 4, 4, 1, 2650, 60000, 1],
             [1509885568124,
              1509713285463,
              88,
              1,
              -600,
              -600,
              2300,
              60000,
              2],
             [1509885693416,
              1509713767970,
              88,
              1,
              -600,
              -600,
              2300,
              30698,
              2],
             [1509885695326, 1509713341226, 88, 4, 4, 1, 2650, 1878, 1],
             [1509885729757, 1509730499569, 88, 1, -600, 1, 2300, 34427, 1],
             [1509885747318, 1509713797777, 88, 1, -600, 1, 2300, 17558, 1],
             [1509885767670, 1509709297834, 88, 1, -600, 1, 2300, 20348, 1],
             [1509885895831, 1509713458555, 88, 4, 5, 1, 2650, 60000, 1],
             [1509885926928, 1509710007721, 88, 4, 5, 1, 2650, 31095, 1],
             [1509885932041, 1509730127052, 88, 4, 5, 1, 2650, 5108, 1],
             [1509885946117, 1509730195801, 88, 2, 2, 1, 2350, 14074, 1],
             [1509885979235, 1509713931879, 88, 4, 4, 1, 2650, 33117, 1],
             [1509885986044, 1509713313492, 88, 3, 3, 1, 2500, 6773, 1],
             [1509886017858, 1509713374182, 88, 1, -600, 1, 2300, 31809, 1],
             [1509886070452, 1509709355373, 88, 1, -600, 1, 2300, 52590, 1],
             [1509886074766, 1509729855874, 88, 3, 4, 1, 2500, 4311, 1],
             [1509886080207, 1509710116416, 88, 3, 2, 1, 2500, 5437, 1],
             [1509886103578, 1509713712622, 88, 1, -600, 1, 2300, 23368, 1],
             [1509886327632, 1509731063224, 88, 4, 3, 1, 2650, 60000, 1],
             [1509886334697, 1509713285463, 88, 2, 1, -600, 2300, 7000, 2],
             [1509886347068, 1509730499569, 88, 2, 1, -600, 2300, 12367, 2],
             [1509886356197, 1509713767970, 88, 1, -600, -600, 2300, 9125, 2],
             [1509886359952, 1509713797777, 88, 2, 1, -600, 2300, 3751, 2],
             [1509886362852, 1509729844193, 88, 4, 3, 1, 2650, 2898, 1],
             [1509886377882, 1509710203259, 88, 4, 5, 1, 2650, 15027, 1],
             [1509886392298, 1509709297834, 88, 2, 1, -600, 2300, 14414, 2],
             [1509886442574, 1509708989859, 88, 4, 4, 1, 2650, 50272, 1],
             [1509886444877, 1509729918020, 88, 4, 5, 1, 2650, 2300, 1],
             [1509886451880, 1509709337215, 88, 1, -60, -60, 0, 6998, 0],
             [1509886453637, 1509729897138, 88, 4, 4, 1, 2650, 1755, 1],
             [1509886457985, 1509710146450, 88, 4, 5, 1, 2650, 4342, 1],
             [1509886460157, 1509709613984, 88, 4, 5, 1, 2650, 2169, 1],
             [1509886505676, 1509713691510, 88, 1, -600, 1, 2300, 45494, 1],
             [1509886510116, 1509710291319, 88, 4, 4, 1, 2650, 4437, 1],
             [1509886551821, 1509713519970, 88, 1, -600, 1, 2300, 41703, 1],
             [1509886562473, 1509713254742, 88, 3, 3, 1, 2500, 6726, 1],
             [1509886718677, 1509713812802, 88, 1, -600, 1, 2300, 60000, 1],
             [1509886751286,
              1509713374182,
              88,
              1,
              -600,
              -600,
              2300,
              32605,
              2],
             [1509886754848, 1509709355373, 88, 2, 1, -600, 2300, 3529, 2],
             [1509886759748, 1509713712622, 88, 1, -600, -600, 2300, 4896, 2],
             [1509886788564, 1509713402973, 88, 3, 2, 1, 2500, 28812, 1],
             [1509886805247, 1509710231633, 88, 4, 4, 1, 2650, 16680, 1],
             [1509886853048, 1509712823823, 88, 4, 4, 1, 2650, 47798, 1],
             [1509886868206, 1509713499992, 88, 1, -600, 1, 2300, 15154, 1],
             [1509886876856, 1509713865655, 88, 4, 5, 1, 2650, 8603, 1],
             [1509886884207, 1509713767970, 88, 2, 1, -600, 2300, 7347, 2],
             [1509886891285, 1509713691510, 88, 2, 1, -600, 2300, 7075, 2],
             [1509886893458, 1509713519970, 88, 1, -600, -600, 2300, 2169, 2],
             [1509886969171,
              1509713812802,
              88,
              1,
              -600,
              -600,
              2300,
              60000,
              2],
             [1509886982784, 1508222056818, 88, 3, 3, -60, 2500, 3020, 0],
             [1509886985839, 1508222394913, 88, 2, -600, -60, 2500, 3052, 0],
             [1509886987282, 1508223361130, 88, 2, -600, -60, 2500, 1439, 0],
             [1509886989108, 1508223513453, 88, 2, -600, -60, 2500, 1824, 0],
             [1509886992281, 1508223625340, 88, 2, -600, -60, 2500, 3172, 0],
             [1509886994499, 1508223703777, 88, 2, -600, -60, 2500, 2216, 0],
             [1509887008663, 1508224198472, 88, 2, -600, -60, 2500, 14161, 0],
             [1509887014658, 1508224491114, 88, 2, -600, -60, 2500, 5993, 0],
             [1509887031215, 1508244414587, 88, 2, -600, -60, 2500, 16554, 0],
             [1509887036888, 1508244503647, 88, 2, -600, -60, 2500, 5671, 0],
             [1509887040182, 1508244582158, 88, 2, -600, -60, 2500, 3291, 0],
             [1509887042460, 1508244662201, 88, 2, -600, -60, 2500, 2276, 0],
             [1509887056947, 1508244725000, 88, 3, 5, -60, 2500, 14483, 0],
             [1509887059439, 1508244739772, 88, 3, 4, -60, 2500, 2464, 0],
             [1509887061663, 1508244760697, 88, 3, 3, -60, 2500, 2221, 0],
             [1509887063441, 1508244922301, 88, 3, 3, -60, 2500, 1776, 0],
             [1509887099013, 1508244962306, 88, 3, 5, -60, 2500, 35569, 0],
             [1509887103265, 1508245138329, 88, 3, 5, -60, 2500, 4250, 0],
             [1509887105782, 1508245805009, 88, 3, 5, -60, 2500, 2514, 0],
             [1509887112991, 1508245924149, 88, 3, 3, -60, 2500, 7205, 0],
             [1509887115633, 1508246087549, 88, 3, 3, -60, 2500, 2638, 0],
             [1509887122275, 1509455299000, 88, 3, 5, -60, 2500, 6640, 0],
             [1509887149819, 1508223361130, 88, 3, 4, -600, 2500, 27542, 0],
             [1509887151080, 1508224198472, 88, 3, 4, -600, 2500, 1258, 0],
             [1509887152205, 1508223625340, 88, 3, 5, -600, 2500, 1121, 0],
             [1509887153822, 1508222394913, 88, 3, 4, -600, 2500, 1612, 0],
             [1509887155244, 1508223703777, 88, 3, 5, -600, 2500, 1420, 0],
             [1509887157150, 1508224491114, 88, 3, 5, -600, 2500, 1903, 0],
             [1509887158405, 1508244582158, 88, 3, 4, -600, 2500, 1251, 0],
             [1509887159956, 1508244503647, 88, 3, 4, -600, 2500, 1549, 0],
             [1509887161454, 1508244414587, 88, 3, 5, -600, 2500, 1494, 0],
             [1509887172113, 1508223513453, 88, 3, 3, -600, 2500, 10654, 0],
             [1509887173435, 1508244662201, 88, 3, 3, -600, 2500, 1257, 0],
             [1509869222364, 1498286909961, 88, 2, 1, -600, 2100, 6922, 3],
             [1509869240386, 1508223703777, 88, 4, 14, 1, 2650, 18013, 1],
             [1509870347097, 1509722565433, 88, 1, -60, -60, 0, 60000, 0],
             [1509870349154, 1509729807629, 88, 1, -60, -60, 0, 2049, 0],
             [1509870350604, 1509708465541, 88, 1, -60, -60, 0, 1440, 0],
             [1509870361513, 1509709337215, 88, 1, -60, -60, 0, 4353, 0],
             [1509920183794, 1509178729835, 88, 1, -60, -60, 2500, 41260, 0],
             [1509920186655, 1508325174211, 88, 3, 5, -60, 2500, 2849, 0],
             [1509920190539, 1508325240342, 88, 3, 3, -60, 2500, 3878, 0],
             [1509920202693, 1508325321814, 88, 3, 5, -60, 2500, 12147, 0],
             [1509920220497, 1508326419771, 88, 3, 4, -60, 2500, 17796, 0],
             [1509923787118, 1508326710444, 88, 3, 3, -60, 2500, 60000, 0],
             [1509928543253,
              1509713374182,
              88,
              1,
              -600,
              -600,
              2300,
              36019,
              2],
             [1509928561772,
              1509713712622,
              88,
              1,
              -600,
              -600,
              2300,
              18511,
              2],
             [1509928569625, 1509713499992, 88, 2, 1, -600, 2300, 7842, 2],
             [1509928598333,
              1509713519970,
              88,
              1,
              -600,
              -600,
              2300,
              28700,
              2]]}
[1510577773] sync.py:newerRows(): cards, [[1503581090733,
  1503581046597,
  1503581062724,
  0,
  1503628948,
  88,
  2,
  2,
  144,
  4,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581140763,
  1503581090818,
  1503581062724,
  0,
  1503628665,
  88,
  2,
  2,
  141,
  1,
  2500,
  7,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581262131,
  1503581140777,
  1503581062724,
  0,
  1503628684,
  88,
  2,
  2,
  141,
  1,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581320395,
  1503581262141,
  1503581062724,
  0,
  1503628695,
  88,
  2,
  2,
  141,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581383092,
  1503581320466,
  1503581062724,
  0,
  1503628945,
  88,
  2,
  2,
  142,
  2,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581480987,
  1503581383109,
  1503581062724,
  0,
  1503628708,
  88,
  2,
  2,
  141,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581500324,
  1503581481002,
  1503581062724,
  0,
  1503628730,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581519637,
  1503581500336,
  1503581062724,
  0,
  1503628735,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581552269,
  1503581519651,
  1503581062724,
  0,
  1503628739,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503581590420,
  1503581552285,
  1503581062724,
  0,
  1503628742,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503582777872,
  1503582739621,
  1503581628619,
  0,
  1503628758,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503582816771,
  1503582778004,
  1503581628619,
  0,
  1503628760,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503582916933,
  1503582816787,
  1503581628619,
  0,
  1503628765,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503582968921,
  1503582916949,
  1503581628619,
  0,
  1503628771,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583016214,
  1503582968938,
  1503581628619,
  0,
  1503628777,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583117717,
  1503583016229,
  1503581628619,
  0,
  1503628791,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583174669,
  1503583117766,
  1503581628619,
  0,
  1503628794,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583239885,
  1503583174682,
  1503581628619,
  0,
  1503628798,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583281813,
  1503583239900,
  1503581628619,
  0,
  1503628805,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583319508,
  1503583281825,
  1503581628619,
  0,
  1503628809,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583399956,
  1503583319522,
  1503581628619,
  0,
  1503628826,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583519501,
  1503583399972,
  1503581628619,
  0,
  1503628834,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503583584981,
  1503583519568,
  1503581628619,
  0,
  1503628837,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584024153,
  1503583584996,
  1503584002137,
  0,
  1503628849,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584083006,
  1503584024226,
  1503584002137,
  0,
  1503628870,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584116933,
  1503584083021,
  1503584002137,
  0,
  1503628877,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584199647,
  1503584116950,
  1503584002137,
  0,
  1503628890,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584263871,
  1503584199664,
  1503584002137,
  0,
  1503628895,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584370119,
  1503584263888,
  1503584002137,
  0,
  1503628904,
  88,
  2,
  2,
  141,
  1,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584488366,
  1503584370183,
  1503584002137,
  0,
  1503628912,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584556014,
  1503584488406,
  1503584002137,
  0,
  1503628915,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u'']]
[1510577774] sync.py:sync(): server chunk, {u'cards': [[1503584571302,
             1503584556030,
             1503584002137,
             0,
             1503628919,
             88,
             2,
             2,
             141,
             1,
             2500,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584863944,
             1503584571320,
             1503584002137,
             0,
             1503628925,
             88,
             2,
             2,
             141,
             1,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503584959791,
             1503584864011,
             1503584002137,
             0,
             1503628943,
             88,
             2,
             2,
             141,
             1,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1503627891959,
             1503625647193,
             1,
             0,
             1503627891,
             88,
             0,
             0,
             1300,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             u''],
            [1503627925469,
             1503627892280,
             1,
             0,
             1503627925,
             88,
             0,
             0,
             1301,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             u''],
            [1508222056818,
             1508221766987,
             1508222056817,
             0,
             1509886982,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508222394913,
             1508222057028,
             1508222056817,
             0,
             1509887153,
             88,
             2,
             2,
             216,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223361130,
             1508223341406,
             1508222056817,
             0,
             1509887149,
             88,
             2,
             2,
             216,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223513453,
             1508223361252,
             1508222056817,
             0,
             1509887172,
             88,
             2,
             2,
             215,
             3,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223625340,
             1508223513459,
             1508222056817,
             0,
             1509887152,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508223703777,
             1508223625349,
             1508222056817,
             0,
             1509887155,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508224198472,
             1508223703782,
             1508222056817,
             0,
             1509887151,
             88,
             2,
             2,
             216,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508224491114,
             1508224198483,
             1508222056817,
             0,
             1509887157,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244414587,
             1508224491118,
             1508222056817,
             0,
             1509887161,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244503647,
             1508244414594,
             1508222056817,
             0,
             1509887159,
             88,
             2,
             2,
             216,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244582158,
             1508244503651,
             1508222056817,
             0,
             1509887158,
             88,
             2,
             2,
             216,
             4,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244662201,
             1508244582161,
             1508222056817,
             0,
             1509887173,
             88,
             2,
             2,
             215,
             3,
             2500,
             2,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508244725000,
             1508244662211,
             1508222056817,
             0,
             1509887056,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244739772,
             1508244725010,
             1508222056817,
             0,
             1509887059,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244760697,
             1508244739776,
             1508222056817,
             0,
             1509887061,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244922301,
             1508244840309,
             1508222056817,
             0,
             1509887063,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508244962306,
             1508244922305,
             1508222056817,
             0,
             1509887099,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508245138329,
             1508244962308,
             1508222056817,
             0,
             1509887103,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508245805009,
             1508245138336,
             1508222056817,
             0,
             1509887105,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508245924149,
             1508245805023,
             1508222056817,
             0,
             1509887112,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508246087549,
             1508245924151,
             1508222056817,
             0,
             1509887115,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508327432508,
             1508326710449,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1471,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508327458673,
             1508327432516,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1472,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508327535276,
             1508327458678,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1473,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508328513584,
             1508327535280,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1474,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1508820844058,
             1508820770496,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1475,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508822319996,
             1508820844201,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1476,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508822407730,
             1508822320007,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1477,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508822455386,
             1508822407735,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1478,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508822543718,
             1508822455391,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1479,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508822733373,
             1508822621166,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1480,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508824473385,
             1508822733485,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1481,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508824535801,
             1508824473393,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1482,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508825196836,
             1508824622753,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1483,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508825596545,
             1508825196960,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1484,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508825736407,
             1508825596554,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1485,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509163789923,
             1509163761999,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1486,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509163863136,
             1509163790114,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1487,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509164137933,
             1509163863141,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1488,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509164678593,
             1509164137950,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1489,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509164792016,
             1509164678602,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1490,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509173553079,
             1509164792019,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1491,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509174627339,
             1509173553087,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1492,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509176046543,
             1509174627347,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1493,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509176274407,
             1509176086048,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1494,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509177172555,
             1509176288623,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1495,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509178285663,
             1509178222297,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1496,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509178344246,
             1509178285666,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1497,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509178499348,
             1509178344248,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1498,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509178968303,
             1509178911360,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1512,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509179428263,
             1509178968416,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1513,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509179552419,
             1509179428270,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1514,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509181352017,
             1509179570873,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1515,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509186228296,
             1509185888424,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1499,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509186278380,
             1509186228305,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1500,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509186542159,
             1509186278384,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1501,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509186857138,
             1509186832864,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1502,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509188977011,
             1509186857257,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1503,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509189107197,
             1509189041403,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1504,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509189142322,
             1509189107311,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1505,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509193463785,
             1509193431361,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1506,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509193488590,
             1509193463891,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1507,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509193502162,
             1509193488597,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1508,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509193678442,
             1509193502169,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1509,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509196033151,
             1509195929439,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1510,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509196301076,
             1509196033259,
             1508325121697,
             0,
             1509882913,
             88,
             0,
             0,
             1511,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509350448558,
             1509350300068,
             1509350315112,
             0,
             1509884080,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509351763128,
             1509351153677,
             1509350315112,
             0,
             1509884082,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352039212,
             1509351763349,
             1509350315112,
             0,
             1509884084,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352066634,
             1509352039216,
             1509350315112,
             0,
             1509884086,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352202874,
             1509352066645,
             1509350315112,
             0,
             1509884091,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352259812,
             1509352202878,
             1509350315112,
             0,
             1509884094,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352285035,
             1509352259817,
             1509350315112,
             0,
             1509884099,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352318367,
             1509352285042,
             1509350315112,
             0,
             1509884102,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352364093,
             1509352318371,
             1509350315112,
             0,
             1509884115,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352399860,
             1509352364097,
             1509350315112,
             0,
             1509884118,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352418174,
             1509352399872,
             1509350315112,
             0,
             1509884119,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352489329,
             1509352418180,
             1509350315112,
             0,
             1509884123,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509352552679,
             1509352489336,
             1509350315112,
             0,
             1509884128,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509353447614,
             1509352668295,
             1509350315112,
             0,
             1509884146,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354183250,
             1509354010447,
             1509350315112,
             0,
             1509884214,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354244677,
             1509354183463,
             1509350315112,
             0,
             1509884330,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354299760,
             1509354244682,
             1509350315112,
             0,
             1509884258,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354404469,
             1509354299764,
             1509350315112,
             0,
             1509884266,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354455668,
             1509354404529,
             1509350315112,
             0,
             1509884268,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354553868,
             1509354455678,
             1509350315112,
             0,
             1509884272,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354640757,
             1509354553874,
             1509350315112,
             0,
             1509884277,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354703687,
             1509354640762,
             1509350315112,
             0,
             1509884282,
             88,
             0,
             -1,
             1568,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509354783881,
             1509354703693,
             1509350315112,
             0,
             1509884293,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354817489,
             1509354783893,
             1509350315112,
             0,
             1509884322,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354836353,
             1509354817495,
             1509350315112,
             0,
             1509884333,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354952464,
             1509354836359,
             1509350315112,
             0,
             1509884336,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509354980422,
             1509354952469,
             1509350315112,
             0,
             1509884343,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509359342718,
             1509354980433,
             1509350315112,
             0,
             1509884344,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509361246611,
             1509359342733,
             1509350315112,
             0,
             1509884346,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509362034159,
             1509361246630,
             1509350315112,
             0,
             1509884348,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509366170746,
             1509362034170,
             1509350315112,
             0,
             1509884352,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509367027559,
             1509366170757,
             1509350315112,
             0,
             1509884385,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509367058171,
             1509367027566,
             1509350315112,
             0,
             1509884390,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509369220696,
             1509368635281,
             1509350315112,
             0,
             1509884400,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509369257013,
             1509369221048,
             1509350315112,
             0,
             1509884446,
             88,
             2,
             2,
             217,
             5,
             2500,
             2,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509369309166,
             1509369257018,
             1509350315112,
             0,
             1509884421,
             88,
             2,
             2,
             216,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509369463643,
             1509369309172,
             1509350315112,
             0,
             1509884424,
             88,
             2,
             2,
             215,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509455299000,
             1509455239452,
             1508222056817,
             0,
             1509887122,
             88,
             2,
             2,
             217,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509707751419,
             1509707740012,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1516,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509707920791,
             1509707853557,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1517,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509708465541,
             1509708009165,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1518,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509708989859,
             1509708828114,
             1509708854481,
             0,
             1509886442,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509709070070,
             1509708989980,
             1509708854481,
             0,
             1509885341,
             88,
             2,
             2,
             216,
             4,
             2650,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509709260280,
             1509709070074,
             1509708854481,
             0,
             1509884636,
             88,
             2,
             2,
             215,
             3,
             2650,
             7,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509709297834,
             1509709260285,
             1509708854481,
             0,
             1509886392,
             88,
             2,
             2,
             213,
             1,
             2300,
             6,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509709355373,
             1509709337222,
             1509708854481,
             0,
             1509886754,
             88,
             2,
             2,
             213,
             1,
             2300,
             9,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509709590325,
             1509709355382,
             1509708854481,
             0,
             1509884644,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509709613984,
             1509709590331,
             1509708854481,
             0,
             1509886460,
             88,
             2,
             2,
             217,
             5,
             2650,
             6,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710007721,
             1509709613994,
             1509708854481,
             0,
             1509885926,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710116416,
             1509710051873,
             1509708854481,
             0,
             1509886080,
             88,
             2,
             2,
             214,
             2,
             2500,
             4,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710146450,
             1509710116527,
             1509708854481,
             0,
             1509886457,
             88,
             2,
             2,
             217,
             5,
             2650,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710203259,
             1509710146455,
             1509708854481,
             0,
             1509886377,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710231633,
             1509710203261,
             1509708854481,
             0,
             1509886805,
             88,
             2,
             2,
             216,
             4,
             2650,
             8,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509710291319,
             1509710231637,
             1509708854481,
             0,
             1509886510,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509712823823,
             1509710291324,
             1509708854481,
             0,
             1509886853,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713254742,
             1509712823832,
             1509708854481,
             0,
             1509886562,
             88,
             2,
             2,
             215,
             3,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713285463,
             1509713254752,
             1509708854481,
             0,
             1509886334,
             88,
             2,
             2,
             213,
             1,
             2300,
             8,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509713313492,
             1509713285467,
             1509708854481,
             0,
             1509885986,
             88,
             2,
             2,
             215,
             3,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713341226,
             1509713313495,
             1509708854481,
             0,
             1509885695,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713402973,
             1509713374190,
             1509708854481,
             0,
             1509886788,
             88,
             2,
             2,
             214,
             2,
             2500,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713427587,
             1509713402978,
             1509708854481,
             0,
             1509884641,
             88,
             2,
             2,
             215,
             3,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713458555,
             1509713427594,
             1509708854481,
             0,
             1509885895,
             88,
             2,
             2,
             217,
             5,
             2650,
             5,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713691510,
             1509713519974,
             1509708854481,
             0,
             1509886891,
             88,
             2,
             2,
             213,
             1,
             2300,
             4,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509713767970,
             1509713712629,
             1509708854481,
             0,
             1509886884,
             88,
             2,
             2,
             213,
             1,
             2300,
             6,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509713797777,
             1509713767977,
             1509708854481,
             0,
             1509886359,
             88,
             2,
             2,
             213,
             1,
             2300,
             4,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509713812802,
             1509713797780,
             1509708854481,
             0,
             1509886969,
             88,
             2,
             1,
             1509887569,
             1,
             2300,
             4,
             1,
             1001,
             213,
             0,
             0,
             u''],
            [1509713865655,
             1509713812808,
             1509708854481,
             0,
             1509886876,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509713931879,
             1509713865663,
             1509708854481,
             0,
             1509885979,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509719880749,
             1509719866636,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1519,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509722565433,
             1509720544674,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1520,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509722719627,
             1509722565561,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1521,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509722825338,
             1509722719631,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1522,
             0,
             2500,
             0,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509724794186,
             1509724624781,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1523,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509729807629,
             1509724794310,
             1509178930435,
             0,
             1509882920,
             88,
             0,
             0,
             1524,
             0,
             2500,
             0,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509729844193,
             1509729814979,
             1509708854481,
             0,
             1509886362,
             88,
             2,
             2,
             215,
             3,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509729855874,
             1509729844303,
             1509708854481,
             0,
             1509886074,
             88,
             2,
             2,
             216,
             4,
             2500,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509729897138,
             1509729855879,
             1509708854481,
             0,
             1509886453,
             88,
             2,
             2,
             216,
             4,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509729918020,
             1509729897142,
             1509708854481,
             0,
             1509886444,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509730127052,
             1509729918023,
             1509708854481,
             0,
             1509885932,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509730195801,
             1509730127062,
             1509708854481,
             0,
             1509885946,
             88,
             2,
             2,
             214,
             2,
             2350,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509730499569,
             1509730195807,
             1509708854481,
             0,
             1509886347,
             88,
             2,
             2,
             213,
             1,
             2300,
             4,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509730517027,
             1509730499577,
             1509708854481,
             0,
             1509884610,
             88,
             2,
             2,
             217,
             5,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509731063224,
             1509730743332,
             1509708854481,
             0,
             1509886327,
             88,
             2,
             2,
             215,
             3,
             2650,
             3,
             0,
             1001,
             0,
             0,
             0,
             u''],
            [1509883829586,
             1509883800261,
             1498292347706,
             0,
             1509883829,
             88,
             0,
             0,
             1302,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             0,
             u''],
            [1498286840220,
             1498286655322,
             1498552873931,
             0,
             1509450090,
             88,
             2,
             0,
             -99819,
             311,
             2650,
             7,
             0,
             1001,
             518,
             1498286783448,
             0,
             u''],
            [1498286909961,
             1498286840378,
             1498286783448,
             0,
             1509869222,
             88,
             2,
             2,
             213,
             1,
             2100,
             10,
             2,
             1001,
             0,
             0,
             0,
             u''],
            [1498286935035,
             1498286909981,
             1498552873931,
             0,
             1509854126,
             88,
             2,
             0,
             -99821,
             300,
             2450,
             8,
             1,
             1001,
             512,
             1498286783448,
             0,
             u''],
            [1498286994780,
             1498286935055,
             1498552873931,
             0,
             1509853945,
             88,
             2,
             0,
             -99927,
             1,
             2300,
             7,
             1,
             1001,
             213,
             1498286783448,
             0,
             u''],
            [1498287013395,
             1498286994867,
             1498552873931,
             0,
             1509450070,
             88,
             2,
             0,
             -99822,
             291,
             2650,
             6,
             0,
             1001,
             498,
             1498286783448,
             0,
             u''],
            [1498287498868,
             1498287458290,
             1498552873931,
             0,
             1509854340,
             88,
             2,
             0,
             -99826,
             28,
             1950,
             8,
             2,
             1001,
             240,
             1498286783448,
             0,
             u''],
            [1498287540312,
             1498287498881,
             1498552873931,
             0,
             1509854080,
             88,
             2,
             0,
             -99813,
             354,
             2650,
             6,
             0,
             1001,
             566,
             1498286783448,
             0,
             u''],
            [1498287714175,
             1498287540322,
             1498552873931,
             0,
             1509853918,
             88,
             2,
             0,
             -99926,
             1,
             1900,
             11,
             3,
             1001,
             213,
             1498286783448,
             0,
             u''],
            [1498287769643,
             1498287714186,
             1498552873931,
             0,
             1509853900,
             88,
             2,
             0,
             -99925,
             1,
             2300,
             7,
             1,
             1001,
             213,
             1498286783448,
             0,
             u''],
            [1498287807022,
             1498287769699,
             1498552873931,
             0,
             1509854909,
             88,
             2,
             0,
             -99924,
             1,
             2300,
             8,
             1,
             1001,
             213,
             1498286783448,
             0,
             u''],
            [1498287864051,
             1498287807024,
             1498552873931,
             0,
             1509854135,
             88,
             2,
             0,
             -99817,
             325,
             2650,
             6,
             0,
             1001,
             537,
             1498286783448,
             0,
             u''],
            [1498288091694,
             1498287864061,
             1498552873931,
             0,
             1509450043,
             88,
             2,
             0,
             -99820,
             310,
             2650,
             8,
             0,
             1001,
             517,
             1498286783448,
             0,
             u''],
            [1498288157680,
             1498288091746,
             1498552873931,
             0,
             1509854301,
             88,
             2,
             0,
             -99812,
             354,
             2650,
             6,
             0,
             1001,
             566,
             1498286783448,
             0,
             u''],
            [1498288208528,
             1498288157720,
             1498552873931,
             0,
             1509854065,
             88,
             2,
             0,
             -99814,
             347,
             2650,
             6,
             0,
             1001,
             559,
             1498286783448,
             0,
             u''],
            [1498288254373,
             1498288208536,
             1498552873931,
             0,
             1509854370,
             88,
             2,
             0,
             -99816,
             327,
             2650,
             6,
             0,
             1001,
             539,
             1498286783448,
             0,
             u''],
            [1498288273155,
             1498288254390,
             1498552873931,
             0,
             1509853876,
             88,
             2,
             0,
             -99923,
             1,
             2100,
             9,
             2,
             1001,
             213,
             1498286783448,
             0,
             u''],
            [1498288642089,
             1498288607730,
             1498552873931,
             0,
             1509854155,
             88,
             2,
             0,
             -99823,
             267,
             2250,
             9,
             2,
             1001,
             479,
             1498286783448,
             0,
             u''],
            [1498292968107,
             1498292522873,
             1498552873931,
             0,
             1509854639,
             88,
             2,
             0,
             -99801,
             412,
             2650,
             5,
             0,
             1001,
             624,
             1498292347706,
             0,
             u''],
            [1498293045114,
             1498292968178,
             1498552873931,
             0,
             1509855134,
             88,
             2,
             0,
             -99811,
             361,
             2450,
             8,
             1,
             1001,
             573,
             1498292347706,
             0,
             u''],
            [1498293113454,
             1498293045132,
             1498552873931,
             0,
             1509855068,
             88,
             2,
             0,
             -99803,
             408,
             2650,
             5,
             0,
             1001,
             620,
             1498292347706,
             0,
             u''],
            [1498293595533,
             1498293185730,
             1498552873931,
             0,
             1509861971,
             88,
             2,
             0,
             -99809,
             395,
             2650,
             5,
             0,
             1001,
             607,
             1498292347706,
             0,
             u''],
            [1498293732950,
             1498293595683,
             1498552873931,
             0,
             1509861956,
             88,
             2,
             0,
             -99798,
             417,
             2650,
             5,
             0,
             1001,
             629,
             1498292347706,
             0,
             u''],
            [1498293779065,
             1498293732963,
             1498552873931,
             0,
             1509855212,
             88,
             2,
             0,
             -99806,
             407,
             2650,
             5,
             0,
             1001,
             619,
             1498292347706,
             0,
             u''],
            [1498294034807,
             1498293779078,
             1498552873931,
             0,
             1509861066,
             88,
             2,
             0,
             -99922,
             1,
             2300,
             6,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498294370773,
             1498294034875,
             1498552873931,
             0,
             1509861054,
             88,
             2,
             0,
             -99921,
             1,
             2300,
             7,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498294460121,
             1498294388335,
             1498552873931,
             0,
             1509854381,
             88,
             2,
             0,
             -99810,
             392,
             2650,
             4,
             0,
             1001,
             604,
             1498292347706,
             0,
             u''],
            [1498294505712,
             1498294460245,
             1498552873931,
             0,
             1509855108,
             88,
             2,
             0,
             -99920,
             1,
             2300,
             6,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498294838891,
             1498294505723,
             1498552873931,
             0,
             1509862026,
             88,
             2,
             0,
             -99797,
             422,
             2650,
             5,
             0,
             1001,
             634,
             1498292347706,
             0,
             u''],
            [1498295193305,
             1498294838956,
             1498552873931,
             0,
             1509854666,
             88,
             2,
             0,
             -99800,
             412,
             2650,
             8,
             0,
             1001,
             624,
             1498292347706,
             0,
             u''],
            [1498295681100,
             1498295296126,
             1498552873931,
             0,
             1509854623,
             88,
             2,
             0,
             -99802,
             411,
             2650,
             5,
             0,
             1001,
             623,
             1498292347706,
             0,
             u''],
            [1498295832425,
             1498295681302,
             1498552873931,
             0,
             1509861923,
             88,
             2,
             0,
             -99919,
             1,
             2300,
             7,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498361722049,
             1498295832442,
             1498552873931,
             0,
             1509862052,
             88,
             2,
             0,
             -99793,
             426,
             2650,
             5,
             0,
             1001,
             638,
             1498292347706,
             0,
             u''],
            [1498362234066,
             1498361722142,
             1498552873931,
             0,
             1509862121,
             88,
             2,
             0,
             -99796,
             422,
             2650,
             5,
             0,
             1001,
             634,
             1498292347706,
             0,
             u''],
            [1498362288018,
             1498362234109,
             1498552873931,
             0,
             1509861988,
             88,
             2,
             0,
             -99807,
             404,
             2650,
             5,
             0,
             1001,
             616,
             1498292347706,
             0,
             u''],
            [1498362321406,
             1498362288030,
             1498552873931,
             0,
             1509862173,
             88,
             2,
             0,
             -99805,
             407,
             2650,
             5,
             0,
             1001,
             619,
             1498292347706,
             0,
             u''],
            [1498362532358,
             1498362459632,
             1498552873931,
             0,
             1509855060,
             88,
             2,
             0,
             -99918,
             1,
             2150,
             6,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498362632441,
             1498362532512,
             1498552873931,
             0,
             1509862075,
             88,
             2,
             0,
             -99794,
             424,
             2650,
             5,
             0,
             1001,
             636,
             1498292347706,
             0,
             u''],
            [1498362813617,
             1498362684844,
             1498552873931,
             0,
             1509861092,
             88,
             2,
             0,
             -99795,
             422,
             2650,
             5,
             0,
             1001,
             634,
             1498292347706,
             0,
             u''],
            [1498362969897,
             1498362813746,
             1498552873931,
             0,
             1509862227,
             88,
             2,
             0,
             -99804,
             407,
             2650,
             7,
             0,
             1001,
             619,
             1498292347706,
             0,
             u''],
            [1498363026129,
             1498362969966,
             1498552873931,
             0,
             1509855205,
             88,
             2,
             0,
             -99917,
             1,
             2300,
             8,
             1,
             1001,
             213,
             1498292347706,
             0,
             u''],
            [1498462535691,
             1498462270100,
             1498552873931,
             0,
             1509854107,
             88,
             2,
             0,
             -99818,
             313,
             2650,
             6,
             0,
             1001,
             525,
             1498286783448,
             0,
             u''],
            [1498462622758,
             1498462535772,
             1498552873931,
             0,
             1509854216,
             88,
             2,
             0,
             -99815,
             341,
             2650,
             6,
             0,
             1001,
             553,
             1498286783448,
             0,
             u''],
            [1498467324904,
             1498467242930,
             1498552873931,
             0,
             1509862106,
             88,
             2,
             0,
             -99799,
             414,
             2650,
             5,
             0,
             1001,
             626,
             1498292347706,
             0,
             u''],
            [1498467479934,
             1498467469025,
             1498552873931,
             0,
             1509862084,
             88,
             2,
             0,
             -99808,
             399,
             2650,
             5,
             0,
             1001,
             611,
             1498292347706,
             0,
             u''],
            [1501467108416,
             1501467082928,
             1498552873931,
             0,
             1509854071,
             88,
             2,
             0,
             -99915,
             3,
             2500,
             1,
             0,
             2002,
             215,
             1498292347706,
             0,
             u''],
            [1501467121294,
             1501467108571,
             1498552873931,
             0,
             1509854095,
             88,
             2,
             0,
             -99914,
             3,
             2500,
             1,
             0,
             2002,
             215,
             1498292347706,
             0,
             u''],
            [1501467150595,
             1501467121322,
             1498552873931,
             0,
             1509854112,
             88,
             2,
             0,
             -99891,
             4,
             2500,
             1,
             0,
             2002,
             216,
             1498292347706,
             0,
             u''],
            [1501467225029,
             1501467150619,
             1498552873931,
             0,
             1509854130,
             88,
             2,
             0,
             -99865,
             5,
             2500,
             1,
             0,
             2002,
             217,
             1498292347706,
             0,
             u''],
            [1501467702660,
             1501467682908,
             1498552873931,
             0,
             1509854142,
             88,
             2,
             0,
             -99864,
             5,
             2500,
             1,
             0,
             2002,
             217,
             1498292347706,
             0,
             u''],
            [1508246958054,
             1508246934102,
             1498552873931,
             0,
             1509850283,
             88,
             2,
             0,
             -99862,
             5,
             2500,
             3,
             0,
             2002,
             217,
             1508246909407,
             0,
             u''],
            [1508246997127,
             1508246958238,
             1498552873931,
             0,
             1509850298,
             88,
             2,
             0,
             -99907,
             3,
             2500,
             3,
             0,
             2002,
             215,
             1508246909407,
             0,
             u''],
            [1508247063792,
             1508246997131,
             1498552873931,
             0,
             1509853822,
             88,
             2,
             0,
             -99906,
             3,
             2500,
             3,
             0,
             2002,
             215,
             1508246909407,
             0,
             u''],
            [1508247507886,
             1508247063795,
             1498552873931,
             0,
             1509854061,
             88,
             2,
             0,
             -99861,
             5,
             2500,
             4,
             0,
             2002,
             217,
             1508246909407,
             0,
             u''],
            [1508247899333,
             1508247845777,
             1498552873931,
             0,
             1509850274,
             88,
             2,
             0,
             -99905,
             3,
             2500,
             2,
             0,
             2002,
             215,
             1508246909407,
             0,
             u''],
            [1508248076701,
             1508247899336,
             1498552873931,
             0,
             1509850281,
             88,
             2,
             0,
             -99904,
             3,
             2500,
             2,
             0,
             2002,
             215,
             1508246909407,
             0,
             u''],
            [1508248093649,
             1508248076704,
             1498552873931,
             0,
             1509440998,
             88,
             2,
             2,
             -99983,
             4,
             2500,
             1,
             0,
             2002,
             211,
             1508246909407,
             0,
             u''],
            [1508248171938,
             1508248093653,
             1498552873931,
             0,
             1509854245,
             88,
             2,
             0,
             -99887,
             4,
             2500,
             1,
             0,
             2002,
             216,
             1508246909407,
             0,
             u''],
            [1509779132933,
             1509731063571,
             1498552873931,
             0,
             1509800642,
             88,
             2,
             2,
             -99933,
             1,
             2500,
             3,
             0,
             1001,
             212,
             1509708854481,
             0,
             u''],
            [1509779153335,
             1509779132942,
             1498552873931,
             0,
             1509800636,
             88,
             2,
             2,
             -99932,
             1,
             2500,
             2,
             0,
             1001,
             212,
             1509708854481,
             0,
             u''],
            [1509779242713,
             1509779153341,
             1498552873931,
             0,
             1509800644,
             88,
             2,
             2,
             -99931,
             1,
             2500,
             2,
             0,
             1001,
             212,
             1509708854481,
             0,
             u''],
            [1509779435134,
             1509779242720,
             1498552873931,
             0,
             1509800641,
             88,
             2,
             2,
             -99930,
             1,
             2500,
             2,
             0,
             1001,
             212,
             1509708854481,
             0,
             u''],
            [1509782284028,
             1509779495053,
             1498552873931,
             0,
             1509800643,
             88,
             2,
             2,
             -99929,
             1,
             2500,
             2,
             0,
             1001,
             212,
             1509708854481,
             0,
             u''],
            [1508325174211,
             1508325090627,
             1508325121697,
             0,
             1509920186,
             88,
             2,
             2,
             218,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508325240342,
             1508325174387,
             1508325121697,
             0,
             1509920190,
             88,
             2,
             2,
             216,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508325321814,
             1508325240346,
             1508325121697,
             0,
             1509920202,
             88,
             2,
             2,
             218,
             5,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508326419771,
             1508325321817,
             1508325121697,
             0,
             1509920220,
             88,
             2,
             2,
             217,
             4,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1508326710444,
             1508326419781,
             1508325121697,
             0,
             1509923787,
             88,
             2,
             2,
             216,
             3,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509178729835,
             1509178499351,
             1508325121697,
             0,
             1509920183,
             88,
             1,
             1,
             1509920256,
             0,
             2500,
             1,
             0,
             2002,
             0,
             0,
             0,
             u''],
            [1509713374182,
             1509713341232,
             1509708854481,
             0,
             1509928543,
             88,
             2,
             1,
             1509929155,
             1,
             2300,
             6,
             1,
             1001,
             213,
             0,
             0,
             u''],
            [1509713499992,
             1509713458561,
             1509708854481,
             0,
             1509928569,
             88,
             2,
             2,
             214,
             1,
             2300,
             6,
             1,
             1001,
             0,
             0,
             0,
             u''],
            [1509713519970,
             1509713499996,
             1509708854481,
             0,
             1509928598,
             88,
             2,
             1,
             1509929303,
             1,
             2300,
             5,
             1,
             1001,
             213,
             0,
             0,
             u''],
            [1509713712622,
             1509713691519,
             1509708854481,
             0,
             1509928561,
             88,
             2,
             1,
             1509929276,
             1,
             2300,
             5,
             1,
             1001,
             213,
             0,
             0,
             u'']],
 u'done': True,
 u'notes': [[1509176288623,
             u'iPy#l&UVw>',
             1491545041634,
             1509856628,
             88,
             u'',
             u'what is Q(s,a) in MCTS?\x1f<img src="paste-10028748636162.jpg" />\x1f',
             u'',
             u'',
             0,
             u''],
            [1509178222297,
             u't~LSm-6ORw',
             1491545041634,
             1509856686,
             88,
             u'',
             u'How do you apply multi-arm bandit to select nodes in MCTS for MDP?\x1f<img src="paste-11003706212354.jpg" />\x1f',
             u'',
             u'',
             0,
             u''],
            [1509178344248,
             u'kJ5g6(to,c',
             1491545041634,
             1509856963,
             88,
             u'',
             u'How do you select an action in MCTS\x1f<img src="paste-11944304050178.jpg" />\x1f',
             u'',
             u'',
             0,
             u''],
            [1509178499351,
             u'thxUMiIAoE',
             1491545041634,
             1509860847,
             88,
             u' marked ',
             u'What is backpropogation?\x1f<img src="paste-12463995092994.jpg" />\x1f',
             u'',
             u'',
             0,
             u''],
            [1503625647193,
             u'n4#)yD[pe<',
             1491545041634,
             1503627891,
             88,
             u'',
             u"What is a reference monitor?\x1fIt's the thing that lets the person know if they can login\x1f",
             u'',
             u'',
             0,
             u''],
            [1503627892280,
             u'zok2T|qD%L',
             1491545041634,
             1503627925,
             88,
             u'',
             u'How can you represent access rights?\x1fAccess control matrix<div><br /></div><div>Access control lists</div>\x1f',
             u'',
             u'',
             0,
             u''],
            [1509713712629,
             u'O,s{CuQD^y',
             1491545041634,
             1509885662,
             88,
             u'',
             u'How does TD work?\x1f<img src="paste-20843476287490.jpg" /><div><img src="paste-30352533880833.jpg" /></div>\x1f',
             u'',
             u'',
             0,
             u''],
            [1509883800261,
             u'zwS(dl<h$<',
             1486672622154,
             1509883829,
             88,
             u'',
             u'what is a consistent heuristic\x1f<img src="paste-24288040058881.jpg" />',
             u'',
             u'',
             0,
             u'']]}
[1510577774] sync.py:newerRows(): cards, [[1503584571302,
  1503584556030,
  1503584002137,
  0,
  1503628919,
  88,
  2,
  2,
  141,
  1,
  2500,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584863944,
  1503584571320,
  1503584002137,
  0,
  1503628925,
  88,
  2,
  2,
  141,
  1,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503584959791,
  1503584864011,
  1503584002137,
  0,
  1503628943,
  88,
  2,
  2,
  141,
  1,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1503627891959,
  1503625647193,
  1,
  0,
  1503627891,
  88,
  0,
  0,
  1300,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  u''],
 [1503627925469,
  1503627892280,
  1,
  0,
  1503627925,
  88,
  0,
  0,
  1301,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  u''],
 [1508222056818,
  1508221766987,
  1508222056817,
  0,
  1509886982,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508222394913,
  1508222057028,
  1508222056817,
  0,
  1509887153,
  88,
  2,
  2,
  216,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223361130,
  1508223341406,
  1508222056817,
  0,
  1509887149,
  88,
  2,
  2,
  216,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223513453,
  1508223361252,
  1508222056817,
  0,
  1509887172,
  88,
  2,
  2,
  215,
  3,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223625340,
  1508223513459,
  1508222056817,
  0,
  1509887152,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508223703777,
  1508223625349,
  1508222056817,
  0,
  1509887155,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508224198472,
  1508223703782,
  1508222056817,
  0,
  1509887151,
  88,
  2,
  2,
  216,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508224491114,
  1508224198483,
  1508222056817,
  0,
  1509887157,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244414587,
  1508224491118,
  1508222056817,
  0,
  1509887161,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244503647,
  1508244414594,
  1508222056817,
  0,
  1509887159,
  88,
  2,
  2,
  216,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244582158,
  1508244503651,
  1508222056817,
  0,
  1509887158,
  88,
  2,
  2,
  216,
  4,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244662201,
  1508244582161,
  1508222056817,
  0,
  1509887173,
  88,
  2,
  2,
  215,
  3,
  2500,
  2,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508244725000,
  1508244662211,
  1508222056817,
  0,
  1509887056,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244739772,
  1508244725010,
  1508222056817,
  0,
  1509887059,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244760697,
  1508244739776,
  1508222056817,
  0,
  1509887061,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244922301,
  1508244840309,
  1508222056817,
  0,
  1509887063,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508244962306,
  1508244922305,
  1508222056817,
  0,
  1509887099,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508245138329,
  1508244962308,
  1508222056817,
  0,
  1509887103,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508245805009,
  1508245138336,
  1508222056817,
  0,
  1509887105,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508245924149,
  1508245805023,
  1508222056817,
  0,
  1509887112,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508246087549,
  1508245924151,
  1508222056817,
  0,
  1509887115,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508327432508,
  1508326710449,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1471,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508327458673,
  1508327432516,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1472,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508327535276,
  1508327458678,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1473,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508328513584,
  1508327535280,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1474,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1508820844058,
  1508820770496,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1475,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508822319996,
  1508820844201,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1476,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508822407730,
  1508822320007,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1477,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508822455386,
  1508822407735,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1478,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508822543718,
  1508822455391,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1479,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508822733373,
  1508822621166,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1480,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508824473385,
  1508822733485,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1481,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508824535801,
  1508824473393,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1482,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508825196836,
  1508824622753,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1483,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508825596545,
  1508825196960,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1484,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508825736407,
  1508825596554,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1485,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509163789923,
  1509163761999,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1486,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509163863136,
  1509163790114,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1487,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509164137933,
  1509163863141,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1488,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509164678593,
  1509164137950,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1489,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509164792016,
  1509164678602,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1490,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509173553079,
  1509164792019,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1491,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509174627339,
  1509173553087,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1492,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509176046543,
  1509174627347,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1493,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509176274407,
  1509176086048,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1494,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509177172555,
  1509176288623,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1495,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509178285663,
  1509178222297,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1496,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509178344246,
  1509178285666,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1497,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509178499348,
  1509178344248,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1498,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509178968303,
  1509178911360,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1512,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509179428263,
  1509178968416,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1513,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509179552419,
  1509179428270,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1514,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509181352017,
  1509179570873,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1515,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509186228296,
  1509185888424,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1499,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509186278380,
  1509186228305,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1500,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509186542159,
  1509186278384,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1501,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509186857138,
  1509186832864,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1502,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509188977011,
  1509186857257,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1503,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509189107197,
  1509189041403,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1504,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509189142322,
  1509189107311,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1505,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509193463785,
  1509193431361,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1506,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509193488590,
  1509193463891,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1507,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509193502162,
  1509193488597,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1508,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509193678442,
  1509193502169,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1509,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509196033151,
  1509195929439,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1510,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509196301076,
  1509196033259,
  1508325121697,
  0,
  1509882913,
  88,
  0,
  0,
  1511,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509350448558,
  1509350300068,
  1509350315112,
  0,
  1509884080,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509351763128,
  1509351153677,
  1509350315112,
  0,
  1509884082,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352039212,
  1509351763349,
  1509350315112,
  0,
  1509884084,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352066634,
  1509352039216,
  1509350315112,
  0,
  1509884086,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352202874,
  1509352066645,
  1509350315112,
  0,
  1509884091,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352259812,
  1509352202878,
  1509350315112,
  0,
  1509884094,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352285035,
  1509352259817,
  1509350315112,
  0,
  1509884099,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352318367,
  1509352285042,
  1509350315112,
  0,
  1509884102,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352364093,
  1509352318371,
  1509350315112,
  0,
  1509884115,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352399860,
  1509352364097,
  1509350315112,
  0,
  1509884118,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352418174,
  1509352399872,
  1509350315112,
  0,
  1509884119,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352489329,
  1509352418180,
  1509350315112,
  0,
  1509884123,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509352552679,
  1509352489336,
  1509350315112,
  0,
  1509884128,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509353447614,
  1509352668295,
  1509350315112,
  0,
  1509884146,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354183250,
  1509354010447,
  1509350315112,
  0,
  1509884214,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354244677,
  1509354183463,
  1509350315112,
  0,
  1509884330,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354299760,
  1509354244682,
  1509350315112,
  0,
  1509884258,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354404469,
  1509354299764,
  1509350315112,
  0,
  1509884266,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354455668,
  1509354404529,
  1509350315112,
  0,
  1509884268,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354553868,
  1509354455678,
  1509350315112,
  0,
  1509884272,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354640757,
  1509354553874,
  1509350315112,
  0,
  1509884277,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354703687,
  1509354640762,
  1509350315112,
  0,
  1509884282,
  88,
  0,
  -1,
  1568,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509354783881,
  1509354703693,
  1509350315112,
  0,
  1509884293,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354817489,
  1509354783893,
  1509350315112,
  0,
  1509884322,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354836353,
  1509354817495,
  1509350315112,
  0,
  1509884333,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354952464,
  1509354836359,
  1509350315112,
  0,
  1509884336,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509354980422,
  1509354952469,
  1509350315112,
  0,
  1509884343,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509359342718,
  1509354980433,
  1509350315112,
  0,
  1509884344,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509361246611,
  1509359342733,
  1509350315112,
  0,
  1509884346,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509362034159,
  1509361246630,
  1509350315112,
  0,
  1509884348,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509366170746,
  1509362034170,
  1509350315112,
  0,
  1509884352,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509367027559,
  1509366170757,
  1509350315112,
  0,
  1509884385,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509367058171,
  1509367027566,
  1509350315112,
  0,
  1509884390,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509369220696,
  1509368635281,
  1509350315112,
  0,
  1509884400,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509369257013,
  1509369221048,
  1509350315112,
  0,
  1509884446,
  88,
  2,
  2,
  217,
  5,
  2500,
  2,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509369309166,
  1509369257018,
  1509350315112,
  0,
  1509884421,
  88,
  2,
  2,
  216,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509369463643,
  1509369309172,
  1509350315112,
  0,
  1509884424,
  88,
  2,
  2,
  215,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509455299000,
  1509455239452,
  1508222056817,
  0,
  1509887122,
  88,
  2,
  2,
  217,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509707751419,
  1509707740012,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1516,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509707920791,
  1509707853557,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1517,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509708465541,
  1509708009165,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1518,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509708989859,
  1509708828114,
  1509708854481,
  0,
  1509886442,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509709070070,
  1509708989980,
  1509708854481,
  0,
  1509885341,
  88,
  2,
  2,
  216,
  4,
  2650,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509709260280,
  1509709070074,
  1509708854481,
  0,
  1509884636,
  88,
  2,
  2,
  215,
  3,
  2650,
  7,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509709297834,
  1509709260285,
  1509708854481,
  0,
  1509886392,
  88,
  2,
  2,
  213,
  1,
  2300,
  6,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509709355373,
  1509709337222,
  1509708854481,
  0,
  1509886754,
  88,
  2,
  2,
  213,
  1,
  2300,
  9,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509709590325,
  1509709355382,
  1509708854481,
  0,
  1509884644,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509709613984,
  1509709590331,
  1509708854481,
  0,
  1509886460,
  88,
  2,
  2,
  217,
  5,
  2650,
  6,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710007721,
  1509709613994,
  1509708854481,
  0,
  1509885926,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710116416,
  1509710051873,
  1509708854481,
  0,
  1509886080,
  88,
  2,
  2,
  214,
  2,
  2500,
  4,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710146450,
  1509710116527,
  1509708854481,
  0,
  1509886457,
  88,
  2,
  2,
  217,
  5,
  2650,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710203259,
  1509710146455,
  1509708854481,
  0,
  1509886377,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710231633,
  1509710203261,
  1509708854481,
  0,
  1509886805,
  88,
  2,
  2,
  216,
  4,
  2650,
  8,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509710291319,
  1509710231637,
  1509708854481,
  0,
  1509886510,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509712823823,
  1509710291324,
  1509708854481,
  0,
  1509886853,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713254742,
  1509712823832,
  1509708854481,
  0,
  1509886562,
  88,
  2,
  2,
  215,
  3,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713285463,
  1509713254752,
  1509708854481,
  0,
  1509886334,
  88,
  2,
  2,
  213,
  1,
  2300,
  8,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509713313492,
  1509713285467,
  1509708854481,
  0,
  1509885986,
  88,
  2,
  2,
  215,
  3,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713341226,
  1509713313495,
  1509708854481,
  0,
  1509885695,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713402973,
  1509713374190,
  1509708854481,
  0,
  1509886788,
  88,
  2,
  2,
  214,
  2,
  2500,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713427587,
  1509713402978,
  1509708854481,
  0,
  1509884641,
  88,
  2,
  2,
  215,
  3,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713458555,
  1509713427594,
  1509708854481,
  0,
  1509885895,
  88,
  2,
  2,
  217,
  5,
  2650,
  5,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713691510,
  1509713519974,
  1509708854481,
  0,
  1509886891,
  88,
  2,
  2,
  213,
  1,
  2300,
  4,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509713767970,
  1509713712629,
  1509708854481,
  0,
  1509886884,
  88,
  2,
  2,
  213,
  1,
  2300,
  6,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509713797777,
  1509713767977,
  1509708854481,
  0,
  1509886359,
  88,
  2,
  2,
  213,
  1,
  2300,
  4,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509713812802,
  1509713797780,
  1509708854481,
  0,
  1509886969,
  88,
  2,
  1,
  1509887569,
  1,
  2300,
  4,
  1,
  1001,
  213,
  0,
  0,
  u''],
 [1509713865655,
  1509713812808,
  1509708854481,
  0,
  1509886876,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509713931879,
  1509713865663,
  1509708854481,
  0,
  1509885979,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509719880749,
  1509719866636,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1519,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509722565433,
  1509720544674,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1520,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509722719627,
  1509722565561,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1521,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509722825338,
  1509722719631,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1522,
  0,
  2500,
  0,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509724794186,
  1509724624781,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1523,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509729807629,
  1509724794310,
  1509178930435,
  0,
  1509882920,
  88,
  0,
  0,
  1524,
  0,
  2500,
  0,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509729844193,
  1509729814979,
  1509708854481,
  0,
  1509886362,
  88,
  2,
  2,
  215,
  3,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509729855874,
  1509729844303,
  1509708854481,
  0,
  1509886074,
  88,
  2,
  2,
  216,
  4,
  2500,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509729897138,
  1509729855879,
  1509708854481,
  0,
  1509886453,
  88,
  2,
  2,
  216,
  4,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509729918020,
  1509729897142,
  1509708854481,
  0,
  1509886444,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509730127052,
  1509729918023,
  1509708854481,
  0,
  1509885932,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509730195801,
  1509730127062,
  1509708854481,
  0,
  1509885946,
  88,
  2,
  2,
  214,
  2,
  2350,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509730499569,
  1509730195807,
  1509708854481,
  0,
  1509886347,
  88,
  2,
  2,
  213,
  1,
  2300,
  4,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509730517027,
  1509730499577,
  1509708854481,
  0,
  1509884610,
  88,
  2,
  2,
  217,
  5,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509731063224,
  1509730743332,
  1509708854481,
  0,
  1509886327,
  88,
  2,
  2,
  215,
  3,
  2650,
  3,
  0,
  1001,
  0,
  0,
  0,
  u''],
 [1509883829586,
  1509883800261,
  1498292347706,
  0,
  1509883829,
  88,
  0,
  0,
  1302,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  u''],
 [1498286840220,
  1498286655322,
  1498552873931,
  0,
  1509450090,
  88,
  2,
  0,
  -99819,
  311,
  2650,
  7,
  0,
  1001,
  518,
  1498286783448,
  0,
  u''],
 [1498286909961,
  1498286840378,
  1498286783448,
  0,
  1509869222,
  88,
  2,
  2,
  213,
  1,
  2100,
  10,
  2,
  1001,
  0,
  0,
  0,
  u''],
 [1498286935035,
  1498286909981,
  1498552873931,
  0,
  1509854126,
  88,
  2,
  0,
  -99821,
  300,
  2450,
  8,
  1,
  1001,
  512,
  1498286783448,
  0,
  u''],
 [1498286994780,
  1498286935055,
  1498552873931,
  0,
  1509853945,
  88,
  2,
  0,
  -99927,
  1,
  2300,
  7,
  1,
  1001,
  213,
  1498286783448,
  0,
  u''],
 [1498287013395,
  1498286994867,
  1498552873931,
  0,
  1509450070,
  88,
  2,
  0,
  -99822,
  291,
  2650,
  6,
  0,
  1001,
  498,
  1498286783448,
  0,
  u''],
 [1498287498868,
  1498287458290,
  1498552873931,
  0,
  1509854340,
  88,
  2,
  0,
  -99826,
  28,
  1950,
  8,
  2,
  1001,
  240,
  1498286783448,
  0,
  u''],
 [1498287540312,
  1498287498881,
  1498552873931,
  0,
  1509854080,
  88,
  2,
  0,
  -99813,
  354,
  2650,
  6,
  0,
  1001,
  566,
  1498286783448,
  0,
  u''],
 [1498287714175,
  1498287540322,
  1498552873931,
  0,
  1509853918,
  88,
  2,
  0,
  -99926,
  1,
  1900,
  11,
  3,
  1001,
  213,
  1498286783448,
  0,
  u''],
 [1498287769643,
  1498287714186,
  1498552873931,
  0,
  1509853900,
  88,
  2,
  0,
  -99925,
  1,
  2300,
  7,
  1,
  1001,
  213,
  1498286783448,
  0,
  u''],
 [1498287807022,
  1498287769699,
  1498552873931,
  0,
  1509854909,
  88,
  2,
  0,
  -99924,
  1,
  2300,
  8,
  1,
  1001,
  213,
  1498286783448,
  0,
  u''],
 [1498287864051,
  1498287807024,
  1498552873931,
  0,
  1509854135,
  88,
  2,
  0,
  -99817,
  325,
  2650,
  6,
  0,
  1001,
  537,
  1498286783448,
  0,
  u''],
 [1498288091694,
  1498287864061,
  1498552873931,
  0,
  1509450043,
  88,
  2,
  0,
  -99820,
  310,
  2650,
  8,
  0,
  1001,
  517,
  1498286783448,
  0,
  u''],
 [1498288157680,
  1498288091746,
  1498552873931,
  0,
  1509854301,
  88,
  2,
  0,
  -99812,
  354,
  2650,
  6,
  0,
  1001,
  566,
  1498286783448,
  0,
  u''],
 [1498288208528,
  1498288157720,
  1498552873931,
  0,
  1509854065,
  88,
  2,
  0,
  -99814,
  347,
  2650,
  6,
  0,
  1001,
  559,
  1498286783448,
  0,
  u''],
 [1498288254373,
  1498288208536,
  1498552873931,
  0,
  1509854370,
  88,
  2,
  0,
  -99816,
  327,
  2650,
  6,
  0,
  1001,
  539,
  1498286783448,
  0,
  u''],
 [1498288273155,
  1498288254390,
  1498552873931,
  0,
  1509853876,
  88,
  2,
  0,
  -99923,
  1,
  2100,
  9,
  2,
  1001,
  213,
  1498286783448,
  0,
  u''],
 [1498288642089,
  1498288607730,
  1498552873931,
  0,
  1509854155,
  88,
  2,
  0,
  -99823,
  267,
  2250,
  9,
  2,
  1001,
  479,
  1498286783448,
  0,
  u''],
 [1498292968107,
  1498292522873,
  1498552873931,
  0,
  1509854639,
  88,
  2,
  0,
  -99801,
  412,
  2650,
  5,
  0,
  1001,
  624,
  1498292347706,
  0,
  u''],
 [1498293045114,
  1498292968178,
  1498552873931,
  0,
  1509855134,
  88,
  2,
  0,
  -99811,
  361,
  2450,
  8,
  1,
  1001,
  573,
  1498292347706,
  0,
  u''],
 [1498293113454,
  1498293045132,
  1498552873931,
  0,
  1509855068,
  88,
  2,
  0,
  -99803,
  408,
  2650,
  5,
  0,
  1001,
  620,
  1498292347706,
  0,
  u''],
 [1498293595533,
  1498293185730,
  1498552873931,
  0,
  1509861971,
  88,
  2,
  0,
  -99809,
  395,
  2650,
  5,
  0,
  1001,
  607,
  1498292347706,
  0,
  u''],
 [1498293732950,
  1498293595683,
  1498552873931,
  0,
  1509861956,
  88,
  2,
  0,
  -99798,
  417,
  2650,
  5,
  0,
  1001,
  629,
  1498292347706,
  0,
  u''],
 [1498293779065,
  1498293732963,
  1498552873931,
  0,
  1509855212,
  88,
  2,
  0,
  -99806,
  407,
  2650,
  5,
  0,
  1001,
  619,
  1498292347706,
  0,
  u''],
 [1498294034807,
  1498293779078,
  1498552873931,
  0,
  1509861066,
  88,
  2,
  0,
  -99922,
  1,
  2300,
  6,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498294370773,
  1498294034875,
  1498552873931,
  0,
  1509861054,
  88,
  2,
  0,
  -99921,
  1,
  2300,
  7,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498294460121,
  1498294388335,
  1498552873931,
  0,
  1509854381,
  88,
  2,
  0,
  -99810,
  392,
  2650,
  4,
  0,
  1001,
  604,
  1498292347706,
  0,
  u''],
 [1498294505712,
  1498294460245,
  1498552873931,
  0,
  1509855108,
  88,
  2,
  0,
  -99920,
  1,
  2300,
  6,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498294838891,
  1498294505723,
  1498552873931,
  0,
  1509862026,
  88,
  2,
  0,
  -99797,
  422,
  2650,
  5,
  0,
  1001,
  634,
  1498292347706,
  0,
  u''],
 [1498295193305,
  1498294838956,
  1498552873931,
  0,
  1509854666,
  88,
  2,
  0,
  -99800,
  412,
  2650,
  8,
  0,
  1001,
  624,
  1498292347706,
  0,
  u''],
 [1498295681100,
  1498295296126,
  1498552873931,
  0,
  1509854623,
  88,
  2,
  0,
  -99802,
  411,
  2650,
  5,
  0,
  1001,
  623,
  1498292347706,
  0,
  u''],
 [1498295832425,
  1498295681302,
  1498552873931,
  0,
  1509861923,
  88,
  2,
  0,
  -99919,
  1,
  2300,
  7,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498361722049,
  1498295832442,
  1498552873931,
  0,
  1509862052,
  88,
  2,
  0,
  -99793,
  426,
  2650,
  5,
  0,
  1001,
  638,
  1498292347706,
  0,
  u''],
 [1498362234066,
  1498361722142,
  1498552873931,
  0,
  1509862121,
  88,
  2,
  0,
  -99796,
  422,
  2650,
  5,
  0,
  1001,
  634,
  1498292347706,
  0,
  u''],
 [1498362288018,
  1498362234109,
  1498552873931,
  0,
  1509861988,
  88,
  2,
  0,
  -99807,
  404,
  2650,
  5,
  0,
  1001,
  616,
  1498292347706,
  0,
  u''],
 [1498362321406,
  1498362288030,
  1498552873931,
  0,
  1509862173,
  88,
  2,
  0,
  -99805,
  407,
  2650,
  5,
  0,
  1001,
  619,
  1498292347706,
  0,
  u''],
 [1498362532358,
  1498362459632,
  1498552873931,
  0,
  1509855060,
  88,
  2,
  0,
  -99918,
  1,
  2150,
  6,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498362632441,
  1498362532512,
  1498552873931,
  0,
  1509862075,
  88,
  2,
  0,
  -99794,
  424,
  2650,
  5,
  0,
  1001,
  636,
  1498292347706,
  0,
  u''],
 [1498362813617,
  1498362684844,
  1498552873931,
  0,
  1509861092,
  88,
  2,
  0,
  -99795,
  422,
  2650,
  5,
  0,
  1001,
  634,
  1498292347706,
  0,
  u''],
 [1498362969897,
  1498362813746,
  1498552873931,
  0,
  1509862227,
  88,
  2,
  0,
  -99804,
  407,
  2650,
  7,
  0,
  1001,
  619,
  1498292347706,
  0,
  u''],
 [1498363026129,
  1498362969966,
  1498552873931,
  0,
  1509855205,
  88,
  2,
  0,
  -99917,
  1,
  2300,
  8,
  1,
  1001,
  213,
  1498292347706,
  0,
  u''],
 [1498462535691,
  1498462270100,
  1498552873931,
  0,
  1509854107,
  88,
  2,
  0,
  -99818,
  313,
  2650,
  6,
  0,
  1001,
  525,
  1498286783448,
  0,
  u''],
 [1498462622758,
  1498462535772,
  1498552873931,
  0,
  1509854216,
  88,
  2,
  0,
  -99815,
  341,
  2650,
  6,
  0,
  1001,
  553,
  1498286783448,
  0,
  u''],
 [1498467324904,
  1498467242930,
  1498552873931,
  0,
  1509862106,
  88,
  2,
  0,
  -99799,
  414,
  2650,
  5,
  0,
  1001,
  626,
  1498292347706,
  0,
  u''],
 [1498467479934,
  1498467469025,
  1498552873931,
  0,
  1509862084,
  88,
  2,
  0,
  -99808,
  399,
  2650,
  5,
  0,
  1001,
  611,
  1498292347706,
  0,
  u''],
 [1501467108416,
  1501467082928,
  1498552873931,
  0,
  1509854071,
  88,
  2,
  0,
  -99915,
  3,
  2500,
  1,
  0,
  2002,
  215,
  1498292347706,
  0,
  u''],
 [1501467121294,
  1501467108571,
  1498552873931,
  0,
  1509854095,
  88,
  2,
  0,
  -99914,
  3,
  2500,
  1,
  0,
  2002,
  215,
  1498292347706,
  0,
  u''],
 [1501467150595,
  1501467121322,
  1498552873931,
  0,
  1509854112,
  88,
  2,
  0,
  -99891,
  4,
  2500,
  1,
  0,
  2002,
  216,
  1498292347706,
  0,
  u''],
 [1501467225029,
  1501467150619,
  1498552873931,
  0,
  1509854130,
  88,
  2,
  0,
  -99865,
  5,
  2500,
  1,
  0,
  2002,
  217,
  1498292347706,
  0,
  u''],
 [1501467702660,
  1501467682908,
  1498552873931,
  0,
  1509854142,
  88,
  2,
  0,
  -99864,
  5,
  2500,
  1,
  0,
  2002,
  217,
  1498292347706,
  0,
  u''],
 [1508246958054,
  1508246934102,
  1498552873931,
  0,
  1509850283,
  88,
  2,
  0,
  -99862,
  5,
  2500,
  3,
  0,
  2002,
  217,
  1508246909407,
  0,
  u''],
 [1508246997127,
  1508246958238,
  1498552873931,
  0,
  1509850298,
  88,
  2,
  0,
  -99907,
  3,
  2500,
  3,
  0,
  2002,
  215,
  1508246909407,
  0,
  u''],
 [1508247063792,
  1508246997131,
  1498552873931,
  0,
  1509853822,
  88,
  2,
  0,
  -99906,
  3,
  2500,
  3,
  0,
  2002,
  215,
  1508246909407,
  0,
  u''],
 [1508247507886,
  1508247063795,
  1498552873931,
  0,
  1509854061,
  88,
  2,
  0,
  -99861,
  5,
  2500,
  4,
  0,
  2002,
  217,
  1508246909407,
  0,
  u''],
 [1508247899333,
  1508247845777,
  1498552873931,
  0,
  1509850274,
  88,
  2,
  0,
  -99905,
  3,
  2500,
  2,
  0,
  2002,
  215,
  1508246909407,
  0,
  u''],
 [1508248076701,
  1508247899336,
  1498552873931,
  0,
  1509850281,
  88,
  2,
  0,
  -99904,
  3,
  2500,
  2,
  0,
  2002,
  215,
  1508246909407,
  0,
  u''],
 [1508248093649,
  1508248076704,
  1498552873931,
  0,
  1509440998,
  88,
  2,
  2,
  -99983,
  4,
  2500,
  1,
  0,
  2002,
  211,
  1508246909407,
  0,
  u''],
 [1508248171938,
  1508248093653,
  1498552873931,
  0,
  1509854245,
  88,
  2,
  0,
  -99887,
  4,
  2500,
  1,
  0,
  2002,
  216,
  1508246909407,
  0,
  u''],
 [1509779132933,
  1509731063571,
  1498552873931,
  0,
  1509800642,
  88,
  2,
  2,
  -99933,
  1,
  2500,
  3,
  0,
  1001,
  212,
  1509708854481,
  0,
  u''],
 [1509779153335,
  1509779132942,
  1498552873931,
  0,
  1509800636,
  88,
  2,
  2,
  -99932,
  1,
  2500,
  2,
  0,
  1001,
  212,
  1509708854481,
  0,
  u''],
 [1509779242713,
  1509779153341,
  1498552873931,
  0,
  1509800644,
  88,
  2,
  2,
  -99931,
  1,
  2500,
  2,
  0,
  1001,
  212,
  1509708854481,
  0,
  u''],
 [1509779435134,
  1509779242720,
  1498552873931,
  0,
  1509800641,
  88,
  2,
  2,
  -99930,
  1,
  2500,
  2,
  0,
  1001,
  212,
  1509708854481,
  0,
  u''],
 [1509782284028,
  1509779495053,
  1498552873931,
  0,
  1509800643,
  88,
  2,
  2,
  -99929,
  1,
  2500,
  2,
  0,
  1001,
  212,
  1509708854481,
  0,
  u''],
 [1508325174211,
  1508325090627,
  1508325121697,
  0,
  1509920186,
  88,
  2,
  2,
  218,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508325240342,
  1508325174387,
  1508325121697,
  0,
  1509920190,
  88,
  2,
  2,
  216,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508325321814,
  1508325240346,
  1508325121697,
  0,
  1509920202,
  88,
  2,
  2,
  218,
  5,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508326419771,
  1508325321817,
  1508325121697,
  0,
  1509920220,
  88,
  2,
  2,
  217,
  4,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1508326710444,
  1508326419781,
  1508325121697,
  0,
  1509923787,
  88,
  2,
  2,
  216,
  3,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509178729835,
  1509178499351,
  1508325121697,
  0,
  1509920183,
  88,
  1,
  1,
  1509920256,
  0,
  2500,
  1,
  0,
  2002,
  0,
  0,
  0,
  u''],
 [1509713374182,
  1509713341232,
  1509708854481,
  0,
  1509928543,
  88,
  2,
  1,
  1509929155,
  1,
  2300,
  6,
  1,
  1001,
  213,
  0,
  0,
  u''],
 [1509713499992,
  1509713458561,
  1509708854481,
  0,
  1509928569,
  88,
  2,
  2,
  214,
  1,
  2300,
  6,
  1,
  1001,
  0,
  0,
  0,
  u''],
 [1509713519970,
  1509713499996,
  1509708854481,
  0,
  1509928598,
  88,
  2,
  1,
  1509929303,
  1,
  2300,
  5,
  1,
  1001,
  213,
  0,
  0,
  u''],
 [1509713712622,
  1509713691519,
  1509708854481,
  0,
  1509928561,
  88,
  2,
  1,
  1509929276,
  1,
  2300,
  5,
  1,
  1001,
  213,
  0,
  0,
  u'']]
[1510577774] sync.py:newerRows(): notes, [[1509176288623,
  u'iPy#l&UVw>',
  1491545041634,
  1509856628,
  88,
  u'',
  u'what is Q(s,a) in MCTS?\x1f<img src="paste-10028748636162.jpg" />\x1f',
  u'',
  u'',
  0,
  u''],
 [1509178222297,
  u't~LSm-6ORw',
  1491545041634,
  1509856686,
  88,
  u'',
  u'How do you apply multi-arm bandit to select nodes in MCTS for MDP?\x1f<img src="paste-11003706212354.jpg" />\x1f',
  u'',
  u'',
  0,
  u''],
 [1509178344248,
  u'kJ5g6(to,c',
  1491545041634,
  1509856963,
  88,
  u'',
  u'How do you select an action in MCTS\x1f<img src="paste-11944304050178.jpg" />\x1f',
  u'',
  u'',
  0,
  u''],
 [1509178499351,
  u'thxUMiIAoE',
  1491545041634,
  1509860847,
  88,
  u' marked ',
  u'What is backpropogation?\x1f<img src="paste-12463995092994.jpg" />\x1f',
  u'',
  u'',
  0,
  u''],
 [1503625647193,
  u'n4#)yD[pe<',
  1491545041634,
  1503627891,
  88,
  u'',
  u"What is a reference monitor?\x1fIt's the thing that lets the person know if they can login\x1f",
  u'',
  u'',
  0,
  u''],
 [1503627892280,
  u'zok2T|qD%L',
  1491545041634,
  1503627925,
  88,
  u'',
  u'How can you represent access rights?\x1fAccess control matrix<div><br /></div><div>Access control lists</div>\x1f',
  u'',
  u'',
  0,
  u''],
 [1509713712629,
  u'O,s{CuQD^y',
  1491545041634,
  1509885662,
  88,
  u'',
  u'How does TD work?\x1f<img src="paste-20843476287490.jpg" /><div><img src="paste-30352533880833.jpg" /></div>\x1f',
  u'',
  u'',
  0,
  u''],
 [1509883800261,
  u'zwS(dl<h$<',
  1486672622154,
  1509883829,
  88,
  u'',
  u'what is a consistent heuristic\x1f<img src="paste-24288040058881.jpg" />',
  u'',
  u'',
  0,
  u'']]
[1510577774] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1510577775] sync.py:sync(): findChanges
[1510577776] sync.py:sync(): last local usn is 835
[1510577776] sync.py:sync(): mediaChanges resp count 2
[1510577776] sync.py:sync(): check: lsum=None rsum=72fa ldirty=0 rusn=836 fname=paste-24288040058881.jpg
[1510577776] sync.py:sync(): will fetch
[1510577776] sync.py:sync(): check: lsum=None rsum=083f ldirty=0 rusn=837 fname=paste-30352533880833.jpg
[1510577776] sync.py:sync(): will fetch
[1510577776] sync.py:_downloadFiles(): 2 files to fetch
[1510577776] sync.py:_downloadFiles(): fetch [u'paste-24288040058881.jpg', u'paste-30352533880833.jpg']
[1510577778] sync.py:_downloadFiles(): received 2 files
[1510577778] sync.py:sync(): update last usn to 837
[1510577778] sync.py:sync(): mediaChanges resp count 0
[1510728133] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1510728133] sched.py:_updateCutoff(): 222, 1510768800
[1510728133] sched.py:unburyCards(): []
[1510728135] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1510577775094,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1510728135,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 89}
[1510728135] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1510728133740,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1510728135,
 'usn': 89}
[1510728136] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1510728136] sync.py:newerRows(): cards, []
[1510728136] sync.py:newerRows(): notes, []
[1510728136] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1510728137] sync.py:sync(): findChanges
[1510860850] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1510860850] sched.py:_updateCutoff(): 224, 1510941600
[1510860850] sched.py:unburyCards(): []
[1510860852] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1510728137147,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1510860852,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 90}
[1510860852] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1510860850782,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1510860852,
 'usn': 90}
[1510860853] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1510860853] sync.py:newerRows(): cards, []
[1510860853] sync.py:newerRows(): notes, []
[1510860853] sync.py:sync(): client chunk, {'cards': [(1510728226099,
            1510728152036,
            1510728170069,
            0,
            1510728226,
            90,
            0,
            0,
            1512,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510728249266,
            1510728226285,
            1510728170069,
            0,
            1510728249,
            90,
            0,
            0,
            1513,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510728609296,
            1510728249270,
            1510728170069,
            0,
            1510728609,
            90,
            0,
            0,
            1514,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510728822864,
            1510728609307,
            1510728170069,
            0,
            1510728822,
            90,
            0,
            0,
            1515,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510728932086,
            1510728822869,
            1510728170069,
            0,
            1510728932,
            90,
            0,
            0,
            1516,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510729003423,
            1510728932097,
            1510728170069,
            0,
            1510729003,
            90,
            0,
            0,
            1517,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510729211442,
            1510729003426,
            1510728170069,
            0,
            1510729211,
            90,
            0,
            0,
            1518,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510729298227,
            1510729211445,
            1510728170069,
            0,
            1510729298,
            90,
            0,
            0,
            1519,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510729949045,
            1510729298237,
            1510728170069,
            0,
            1510729949,
            90,
            0,
            0,
            1520,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510730318515,
            1510729949054,
            1510728170069,
            0,
            1510730318,
            90,
            0,
            0,
            1521,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1510728152036,
            u'If65mg9}c)',
            1491545041634,
            1510728226,
            90,
            u'',
            u'What is a pessimistic way of explaining events?\x1f<img src="paste-2448131358722.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510728226285,
            u'uF}LBv}Nn%',
            1491545041634,
            1510728249,
            90,
            u'',
            u'What is an optimistic way of explaining events?\x1f<img src="paste-2658584756226 (1).jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510728249270,
            u'CIHo_$`>CY',
            1491545041634,
            1510728609,
            90,
            u'',
            u'What is a strong cause of learned helplessness?\x1fEarly research on learned helplessness showed that bad or traumatic events do not in themselves produce helplessness. The crucial factor is inescapable trauma. In learned helplessness, a person has learned that when bad things happen, nothing they do matters. They give up and remain passive, even after conditions change and they do actually have control over the environment.\x1f',
            u'',
            u'',
            0,
            u''),
           (1510728609307,
            u'w~In1e0e!t',
            1491545041634,
            1510728822,
            90,
            u'',
            u'What makes some people immune from helplessness?\x1fPersonality, or how they think of events:<div><br /></div><div>Do you think bad events are temporary or permanant?</div><div>Is the issue local or everywhere?</div><div>Are bad events controllable or uncontrollable?</div><div>Is it personal or not personal?</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510728822869,
            u'n1+)VpBL+3',
            1491545041634,
            1510728932,
            90,
            u'',
            u'What are the symptoms of depression?\x1fThere are 9:<div><br /></div><div>- Sad mood</div><div>- Loss of vitality and interest in life</div><div>- Weight loss</div><div>- Sleep disturbance (terminal insominia: when you wake up early and cannot go back to sleep)</div><div>- Slow in speech and motion</div><div>- Fatigue</div><div>- Low self-esteem</div><div>- Being indeceisive</div><div>- Thoughts of suicide</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510728932097,
            u'z:o=swH_US',
            1491545041634,
            1510729003,
            90,
            u'',
            u'When people have inescapable shock, how many symptoms of depression appear?\x1f8/9 symptoms of DSM.<div><br /></div><div>Learned helplessness is a good model for depression. This suggests that pessimism and optimism and risk and protective factors for depression.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510729003426,
            u'Qsz?|&4cL6',
            1491545041634,
            1510729211,
            90,
            u'',
            u'What is cognitive therapy?\x1f<div>So you teach children and adults to dispute their most catastrophic thoughts, and when they dispute their most catastrophic thoughts and become very good arguers against catastrophic thinking, that is the heart of cognitive therapy of depression, the most effective psychological treatment of depression.</div><div><br /></div><div>Argue against "Everyone hates me" to "Well everyone probably doesn\'t hate me, they\'re angry with me right now for doing a particular thing, but it\'s something we can probably discuss and get over"</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510729211445,
            u'w!(9w5HqaA',
            1491545041634,
            1510729298,
            90,
            u'',
            u'Can optimism be learned?\x1fOptimism is a skill that can be learned. Teaching people to realistically challenge their pessimistic explanatory style and to learn optimistic explanatory skills reduces anxiety and depression and increases resilience.\x1f',
            u'',
            u'',
            0,
            u''),
           (1510729298237,
            u'NjNJB<i]2M',
            1491545041634,
            1510729949,
            90,
            u'',
            u"What is PERMA for?\x1fIt's not to change what people value, but to identify what they value, and to help maximize that\x1f",
            u'',
            u'',
            0,
            u''),
           (1510729949054,
            u'ueS)0=9XG=',
            1491545041634,
            1510730318,
            90,
            u'',
            u"What is PERMA?\x1f<div>It's a way of measuring well-being and cosists of:</div><div><br /></div>Positive Emotion<div>Engagement</div><div>Relationships</div><div>Meaning</div><div>Accomplishment</div>\x1f",
            u'',
            u'',
            0,
            u'')],
 'revlog': []}
[1510860854] sync.py:sync(): findChanges
[1510860855] sync.py:sync(): last local usn is 837
[1510860855] sync.py:sync(): mediaChanges resp count 0
[1510860855] media.py:mediaChangesZip(): +media zip, paste-2448131358722.jpg
[1510860855] media.py:mediaChangesZip(): +media zip, paste-2658584756226 (1).jpg
[1510860856] sync.py:sync(): processed 2, serverUsn 839, clientUsn 837
[1510860856] sync.py:sync(): lastUsn in sync, updating local
[1510860857] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1510860857] sched.py:_updateCutoff(): 224, 1510941600
[1510886068] cards.py:flush(): {'crt': 1510886068, 'data': '', 'did': 1510885927896, 'due': 1522, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886068] cards.py:flush(): {'crt': 1510886068, 'data': '', 'did': 1510885927896, 'due': 1523, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886068] cards.py:flush(): {'crt': 1510886068, 'data': '', 'did': 1510885927896, 'due': 1524, 'factor': 0, 'flags': 0, 'id': 1510886068535, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068535, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886068] cards.py:flush(): {'crt': 1510886068, 'data': '', 'did': 1510885927896, 'due': 1525, 'factor': 0, 'flags': 0, 'id': 1510886068536, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068536, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886068] cards.py:flush(): {'crt': 1510886068, 'data': '', 'did': 1510885927896, 'due': 1526, 'factor': 0, 'flags': 0, 'id': 1510886068537, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068537, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886100] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1522, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886105] sched.py:answerCard(): 
[1510886105] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886172, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1510886105, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1510886105] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1523, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886109] sched.py:answerCard(): 
[1510886109] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886171, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1510886109, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1510886109] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1524, 'factor': 0, 'flags': 0, 'id': 1510886068535, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068535, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886112] sched.py:answerCard(): 
[1510886112] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886823, 'factor': 0, 'flags': 0, 'id': 1510886068535, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886112, 'nid': 1510886068535, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1510886112] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1525, 'factor': 0, 'flags': 0, 'id': 1510886068536, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068536, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886116] sched.py:answerCard(): 
[1510886116] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886793, 'factor': 0, 'flags': 0, 'id': 1510886068536, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886116, 'nid': 1510886068536, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1510886116] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1526, 'factor': 0, 'flags': 0, 'id': 1510886068537, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886068, 'nid': 1510886068537, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886119] sched.py:answerCard(): 
[1510886119] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886852, 'factor': 0, 'flags': 0, 'id': 1510886068537, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886119, 'nid': 1510886068537, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1, 'wasNew': True}
[1510886119] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886171, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1510886109, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1510886122] sched.py:answerCard(): 
[1510886122] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886722, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886122, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1510886122] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886172, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 2002, 'mod': 1510886105, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1510886126] sched.py:answerCard(): 
[1510886126] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 1510886726, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886126, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1, 'wasNew': False}
[1510886126] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886722, 'factor': 0, 'flags': 0, 'id': 1510886068534, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886122, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1510886127] sched.py:answerCard(): 
[1510886127] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 225, 'factor': 2500, 'flags': 0, 'id': 1510886068534, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1510886127, 'nid': 1510886068534, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1510886127] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886726, 'factor': 0, 'flags': 0, 'id': 1510886068533, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886126, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 2, 'type': 1, 'usn': -1}
[1510886128] sched.py:answerCard(): 
[1510886128] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 225, 'factor': 2500, 'flags': 0, 'id': 1510886068533, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1510886128, 'nid': 1510886068532, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 3, 'type': 2, 'usn': -1, 'wasNew': False}
[1510886128] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886793, 'factor': 0, 'flags': 0, 'id': 1510886068536, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886116, 'nid': 1510886068536, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1510886131] sched.py:answerCard(): 
[1510886131] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 225, 'factor': 2500, 'flags': 0, 'id': 1510886068536, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1510886131, 'nid': 1510886068536, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1510886131] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886823, 'factor': 0, 'flags': 0, 'id': 1510886068535, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886112, 'nid': 1510886068535, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1510886132] sched.py:answerCard(): 
[1510886132] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 225, 'factor': 2500, 'flags': 0, 'id': 1510886068535, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1510886132, 'nid': 1510886068535, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1510886132] sched.py:getCard(): {'data': u'', 'did': 1510885927896, 'due': 1510886852, 'factor': 0, 'flags': 0, 'id': 1510886068537, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1510886119, 'nid': 1510886068537, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': -1}
[1510886133] sched.py:answerCard(): 
[1510886133] cards.py:flushSched(): {'data': u'', 'did': 1510885927896, 'due': 225, 'factor': 2500, 'flags': 0, 'id': 1510886068537, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1510886133, 'nid': 1510886068537, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1510886277] cards.py:flush(): {'crt': 1510886277, 'data': '', 'did': 1510885927896, 'due': 1527, 'factor': 0, 'flags': 0, 'id': 1510886277298, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886277, 'nid': 1510886203985, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886456] cards.py:flush(): {'crt': 1510886456, 'data': '', 'did': 1510885927896, 'due': 1528, 'factor': 0, 'flags': 0, 'id': 1510886456118, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886456, 'nid': 1510886277430, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886554] cards.py:flush(): {'crt': 1510886554, 'data': '', 'did': 1510885927896, 'due': 1529, 'factor': 0, 'flags': 0, 'id': 1510886554245, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886554, 'nid': 1510886456128, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886635] cards.py:flush(): {'crt': 1510886635, 'data': '', 'did': 1510885927896, 'due': 1530, 'factor': 0, 'flags': 0, 'id': 1510886635606, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886635, 'nid': 1510886554249, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510886677] cards.py:flush(): {'crt': 1510886677, 'data': '', 'did': 1510885927896, 'due': 1531, 'factor': 0, 'flags': 0, 'id': 1510886677222, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510886677, 'nid': 1510886635612, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510887485] cards.py:flush(): {'crt': 1510887485, 'data': '', 'did': 1510885927896, 'due': 1532, 'factor': 0, 'flags': 0, 'id': 1510887485501, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510887485, 'nid': 1510886677226, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510887538] cards.py:flush(): {'crt': 1510887538, 'data': '', 'did': 1510885927896, 'due': 1533, 'factor': 0, 'flags': 0, 'id': 1510887538982, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510887538, 'nid': 1510887485512, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510887602] cards.py:flush(): {'crt': 1510887602, 'data': '', 'did': 1510885927896, 'due': 1534, 'factor': 0, 'flags': 0, 'id': 1510887602564, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510887602, 'nid': 1510887538990, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510887998] cards.py:flush(): {'crt': 1510887998, 'data': '', 'did': 1510885927896, 'due': 1535, 'factor': 0, 'flags': 0, 'id': 1510887998397, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510887998, 'nid': 1510887744630, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510888045] cards.py:flush(): {'crt': 1510888045, 'data': '', 'did': 1510885927896, 'due': 1536, 'factor': 0, 'flags': 0, 'id': 1510888045035, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1510888045, 'nid': 1510887998522, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1510888144] cards.py:flush(): {'crt': 1510888144, 'data': '', 'did': 1510885927896, 'due': 1537, 'factor': 0, 'flags': 0, 'id': 1510888144957, '[1511161415] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511161415] sched.py:_updateCutoff(): 227, 1511200800
[1511161415] sched.py:unburyCards(): []
[1511161417] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1510860853999,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1511161418,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 91}
[1511161417] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1511161415895,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1511161417,
 'usn': 91}
[1511161419] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1511161419] sync.py:newerRows(): cards, []
[1511161419] sync.py:newerRows(): notes, []
[1511161419] sync.py:sync(): client chunk, {'cards': [(1510886068533,
            1510886068532,
            1510885927896,
            0,
            1510886128,
            91,
            2,
            2,
            225,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1510886068534,
            1510886068534,
            1510885927896,
            0,
            1510886127,
            91,
            2,
            2,
            225,
            1,
            2500,
            3,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1510886068535,
            1510886068535,
            1510885927896,
            0,
            1510886132,
            91,
            2,
            2,
            225,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1510886068536,
            1510886068536,
            1510885927896,
            0,
            1510886131,
            91,
            2,
            2,
            225,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1510886068537,
            1510886068537,
            1510885927896,
            0,
            1510886133,
            91,
            2,
            2,
            225,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1510886277298,
            1510886203985,
            1510885927896,
            0,
            1510886277,
            91,
            0,
            0,
            1527,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510886456118,
            1510886277430,
            1510885927896,
            0,
            1510886456,
            91,
            0,
            0,
            1528,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510886554245,
            1510886456128,
            1510885927896,
            0,
            1510886554,
            91,
            0,
            0,
            1529,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510886635606,
            1510886554249,
            1510885927896,
            0,
            1510886635,
            91,
            0,
            0,
            1530,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510886677222,
            1510886635612,
            1510885927896,
            0,
            1510886677,
            91,
            0,
            0,
            1531,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510887485501,
            1510886677226,
            1510885927896,
            0,
            1510887485,
            91,
            0,
            0,
            1532,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510887538982,
            1510887485512,
            1510885927896,
            0,
            1510887538,
            91,
            0,
            0,
            1533,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510887602564,
            1510887538990,
            1510885927896,
            0,
            1510887602,
            91,
            0,
            0,
            1534,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510887998397,
            1510887744630,
            1510885927896,
            0,
            1510887998,
            91,
            0,
            0,
            1535,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510888045035,
            1510887998522,
            1510885927896,
            0,
            1510888045,
            91,
            0,
            0,
            1536,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510888144957,
            1510888045040,
            1510885927896,
            0,
            1510888144,
            91,
            0,
            0,
            1537,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510888342374,
            1510888144961,
            1510885927896,
            0,
            1510888342,
            91,
            0,
            0,
            1538,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510888385616,
            1510888342382,
            1510885927896,
            0,
            1510888385,
            91,
            0,
            0,
            1539,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1510888791368,
            1510888385625,
            1510885927896,
            0,
            1510888791,
            91,
            0,
            0,
            1540,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1510886068532,
            u'o,VQXZK7:e',
            1510885986557,
            1510886068,
            91,
            u'',
            u'bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-1\x1f\x1f<img src="tmpULVh3k.png" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-1-Q.svg" />\x1f\x1f\x1f\x1f\x1f\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-1-A.svg" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg" />',
            u'',
            u'',
            0,
            u''),
           (1510886068534,
            u'vjpX4NYQ7_',
            1510885986557,
            1510886068,
            91,
            u'',
            u'bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-2\x1f\x1f<img src="tmpULVh3k.png" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-2-Q.svg" />\x1f\x1f\x1f\x1f\x1f\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-2-A.svg" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg" />',
            u'',
            u'',
            0,
            u''),
           (1510886068535,
            u'A#+~4z=?I6',
            1510885986557,
            1510886068,
            91,
            u'',
            u'bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-3\x1f\x1f<img src="tmpULVh3k.png" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-3-Q.svg" />\x1f\x1f\x1f\x1f\x1f\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-3-A.svg" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg" />',
            u'',
            u'',
            0,
            u''),
           (1510886068536,
            u'nX5Dfr]qm^',
            1510885986557,
            1510886068,
            91,
            u'',
            u'bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-4\x1f\x1f<img src="tmpULVh3k.png" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-4-Q.svg" />\x1f\x1f\x1f\x1f\x1f\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-4-A.svg" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg" />',
            u'',
            u'',
            0,
            u''),
           (1510886068537,
            u'mzqibhp~|+',
            1510885986557,
            1510886068,
            91,
            u'',
            u'bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-5\x1f\x1f<img src="tmpULVh3k.png" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-5-Q.svg" />\x1f\x1f\x1f\x1f\x1f\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-5-A.svg" />\x1f<img src="bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg" />',
            u'',
            u'',
            0,
            u''),
           (1510886203985,
            u'pUCmaEHz_#',
            1491545041634,
            1510886277,
            91,
            u'',
            u'What are the two main classes of supervised learning problems?\x1fRegression - Where a real value is infinite<div>Classification - Where the value to be estimated is finite</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510886277430,
            u'G5u[y@5NBT',
            1491545041634,
            1510886456,
            91,
            u'',
            u'Convert this lienar model to vector and matrix form:<div><br /></div><div><img src="paste-16569983827970.jpg" /></div>\x1f<img src="paste-16737487552514.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510886456128,
            u'BA,IJ|jo*%',
            1491545041634,
            1510886554,
            91,
            u'',
            u'What is mean squared error?\x1fIt is the normalized sum of squares of the predictions minus the errors.<div><br /></div><div><img src="paste-17334488006658.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510886554249,
            u'w@{pw38/Ve',
            1491545041634,
            1510886635,
            91,
            u'',
            u'What does it mean to fit a model?\x1fIt means to select the parameters that minimize the loss function.<div><br /></div><div><img src="paste-17695265259522.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510886635612,
            u'cZaIlM&]?y',
            1491545041634,
            1510886677,
            91,
            u'',
            u'Why don\'t we tend to use the analytical solution to linear regression?\x1f<img src="paste-17888538787842.jpg" /><div><br /></div><div>Notice that it requires us to invert a matrix. For large matrices, this is computationally expensive.</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510886677226,
            u'bs()#EX@8e',
            1491545041634,
            1510887485,
            91,
            u'',
            u'Write down the model for a binary classifier and represent it geometrically.\x1f<img src="paste-18464064405506.jpg" /><div><img src="paste-18640158064642.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510887485512,
            u'Gk2!T[gB8K',
            1491545041634,
            1510887538,
            91,
            u'',
            u'Write down an argmax classifier model\x1f<img src="paste-18906446036994.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510887538990,
            u'nJr(;a.dFP',
            1491545041634,
            1510887743,
            91,
            u'',
            u'What is wrong with using this as a measure of accuracy in classification?<div><img src="paste-19104014532610.jpg" /></div>\x1f<img src="paste-19271518257154.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510887744630,
            u'H+izD[;Wt2',
            1491545041634,
            1510887998,
            91,
            u'',
            u'Why can\'t we use squared loss for a classification task?\x1fWe don\'t want to penalize large values, since we\'re taking the argmax when we do a classification. What we are interested in is the relative sizes of the values (which is a measure of certainty), not how close they are to the value that we want.<div><br /></div><div><img src="paste-21732534517762.jpg" /></div><div><br /></div><div>We should use something like this isntead</div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510887998522,
            u'hp$#,UpZ)@',
            1491545041634,
            1510888045,
            91,
            u'',
            u'What is a softmax transform?\x1f<img src="paste-22016002359298.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510888045040,
            u'PyC^7-<<eM',
            1491545041634,
            1510888144,
            91,
            u'',
            u'What is cross-entropy?\x1f<img src="paste-22582938042370.jpg" />\x1f',
            u'',
            u'',
            0,
            u''),
           (1510888144961,
            u'IO92qV#6c&',
            1491545041634,
            1510888342,
            91,
            u'',
            u'How does cross entropy compare to something like minimizing the number of incorrect guesses?\x1fCross entropy gives a very high penalty to being confident of the wrong thing, whereas minimizing the number of incorrect guesses treats confident decisions the same as unsure ones.\x1f',
            u'',
            u'',
            0,
            u''),
           (1510888342382,
            u'hWcpH:p|j)',
            1491545041634,
            1510888385,
            91,
            u'',
            u'How do you use cross-entropy as a loss function?\x1fSum it over all of your examples<div><br /></div><div><img src="paste-23489176141826.jpg" /></div>\x1f',
            u'',
            u'',
            0,
            u''),
           (1510888385625,
            u'AUh3^0<l$1',
            1491545041634,
            1510888791,
            91,
            u'',
            u'How does gradient descent work?\x1f<img src="paste-24064701759490.jpg" /><div><br /></div><div>Where n is the step size, and upsidedown triangle is the gradient vector with respect to each weight.</div>\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1510886105189, 1510886068533, 91, 1, -60, -60, 0, 4423, 0),
            (1510886109737, 1510886068534, 91, 1, -60, -60, 0, 4546, 0),
            (1510886112881, 1510886068535, 91, 2, -600, -60, 0, 3142, 0),
            (1510886116074, 1510886068536, 91, 2, -600, -60, 0, 3192, 0),
            (1510886119186, 1510886068537, 91, 2, -600, -60, 0, 3109, 0),
            (1510886122464, 1510886068534, 91, 2, -600, -60, 0, 3275, 0),
            (1510886126229, 1510886068533, 91, 2, -600, -60, 0, 3761, 0),
            (1510886127818, 1510886068534, 91, 2, 1, -600, 2500, 1587, 0),
            (1510886128594, 1510886068533, 91, 2, 1, -600, 2500, 773, 0),
            (1510886131080, 1510886068536, 91, 2, 1, -600, 2500, 2484, 0),
            (1510886132031, 1510886068535, 91, 2, 1, -600, 2500, 948, 0),
            (1510886133309, 1510886068537, 91, 2, 1, -600, 2500, 1274, 0)]}
[1511161420] sync.py:sync(): findChanges
[1511161421] sync.py:sync(): last local usn is 839
[1511161422] sync.py:sync(): mediaChanges resp count 0
[1511161422] media.py:mediaChangesZip(): +media zip, paste-19271518257154.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-24820616003586.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-22582938042370.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-5-A.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-18906446036994.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-4-A.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-18640158064642.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-17888538787842.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-1-A.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-16569983827970.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-4-Q.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-19104014532610.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-2-Q.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-18464064405506.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-5274219839490.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-3-Q.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-23489176141826.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-1-Q.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-24064701759490.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-9332963934210.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-2-A.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-17334488006658.jpg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-O.svg
[1511161422] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-5-Q.svg
[1511161422] media.py:mediaChangesZip(): +media zip, paste-21732534517762.jpg
[1511161426] sync.py:sync(): processed 25, serverUsn 864, clientUsn 839
[1511161426] sync.py:sync(): lastUsn in sync, updating local
[1511161426] media.py:mediaChangesZip(): +media zip, tmpULVh3k.png
[1511161426] media.py:mediaChangesZip(): +media zip, bfae43fe77a34cdbbcd29b6fe0dce9c6-ao-3-A.svg
[1511161426] media.py:mediaChangesZip(): +media zip, paste-17695265259522.jpg
[1511161426] media.py:mediaChangesZip(): +media zip, paste-16737487552514.jpg
[1511161426] media.py:mediaChangesZip(): +media zip, paste-22016002359298.jpg
[1511161427] sync.py:sync(): processed 5, serverUsn 869, clientUsn 864
[1511161427] sync.py:sync(): lastUsn in sync, updating local
[1511161427] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511161427] sched.py:_updateCutoff(): 227, 1511200800
[1511161484] sched.py:getCard(): {'data': u'', 'did': 1506855793946, 'due': 1506863334, 'factor': 0, 'flags': 0, 'id': 1506856781937, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862663, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 48}
[1511161489] sched.py:answerCard(): 
[1511161489] cards.py:flushSched(): {'data': u'', 'did': 1506855793946, 'due': 228, 'factor': 2500, 'flags': 0, 'id': 1506856781937, 'ivl': 1, 'lapses': 0, 'left': 1001, 'mod': 1511161489, 'nid': 1506856081510, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 2, 'reps': 2, 'type': 2, 'usn': -1, 'wasNew': False}
[1511161489] sched.py:getCard(): {'data': u'', 'did': 1506857168136, 'due': 1506863342, 'factor': 0, 'flags': 0, 'id': 1506857406574, 'ivl': 0, 'lapses': 0, 'left': 1001, 'mod': 1506862716, 'nid': 1506857159095, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 1, 'reps': 1, 'type': 1, 'usn': 48}
[1511161728] cards.py:flush(): {'crt': 1511161728, 'data': '', 'did': 1511161561660, 'due': 1541, 'factor': 0, 'flags': 0, 'id': 1511161728855, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1511161728, 'nid': 1511161529356, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1511161769] cards.py:flush(): {'crt': 1511161769, 'data': '', 'did': 1511161561660, 'due': 1542, 'factor': 0, 'flags': 0, 'id': 1511161769010, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1511161769, 'nid': 1511161729185, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1511162117] cards.py:flush(): {'crt': 1511162117, 'data': '', 'did': 1511161561660, 'due': 1543, 'factor': 0, 'flags': 0, 'id': 1511162117880, 'ivl': 0, 'lapses': 0, 'left': 0, 'mod': 1511162117, 'nid': 1511161769015, 'odid': 0, 'odue': 0, 'ord': 0, 'queue': 0, 'reps': 0, 'type': 0, 'usn': -1}
[1511170918] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511170918] sched.py:_updateCutoff(): 227, 1511200800
[1511170919] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1511161420701,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1511170920,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 92}
[1511170919] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1511170916729,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1511170919,
 'usn': 92}
[1511170920] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1511170920] sync.py:newerRows(): cards, []
[1511170920] sync.py:newerRows(): notes, []
[1511170920] sync.py:sync(): client chunk, {'cards': [(1506856781937,
            1506856081510,
            1506855793946,
            0,
            1511161489,
            92,
            2,
            2,
            228,
            1,
            2500,
            2,
            0,
            1001,
            0,
            0,
            0,
            u''),
           (1511161728855,
            1511161529356,
            1511161561660,
            0,
            1511161728,
            92,
            0,
            0,
            1541,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1511161769010,
            1511161729185,
            1511161561660,
            0,
            1511161769,
            92,
            0,
            0,
            1542,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u''),
           (1511162117880,
            1511161769015,
            1511161561660,
            0,
            1511162117,
            92,
            0,
            0,
            1543,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            u'')],
 'done': True,
 'notes': [(1511161529356,
            u'v>nEyyf%L<',
            1491545041634,
            1511161728,
            92,
            u'',
            u"What do you normally get with an MPA that you don't get with an SPA?\x1fNavigating a single-page app doesn't involve going to an entirely new page. Instead, your pages (commonly known as views in this context) typically load inline within the same page itself.<div><br /></div><div>What you lose is:</div><div><br /></div><div><div>- The URL displayed in the address bar always reflects the thing that they are viewing.</div><div><br /></div><div>- They can use the browser's back and forward buttons...successfully.</div><div><br /></div><div>- They can navigate to a particular view (aka deep link) directly using the appropriate URL.</div></div>\x1f",
            u'',
            u'',
            0,
            u''),
           (1511161729185,
            u's6p)6+}c.I',
            1491545041634,
            1511161769,
            92,
            u'',
            u"What is routing for?\x1fRouting is where you try to map URLs to destinations that aren't physical pages such as the individual views in your single-page app.\x1f",
            u'',
            u'',
            0,
            u''),
           (1511161769015,
            u'qvn+uK{A(>',
            1491545041634,
            1511162117,
            92,
            u'',
            u'Relate navigating this page to what happens in an SPA and what React-Router does:<div><br /></div><div><img src="paste-6682969112578.jpg" /></div>\x1f<div>When you\'re working with an SPA, there\'s always going to be a static component. What React-Router does is decide which components to show based on the \'route\' the user is on.</div><img src="paste-6850472837122.jpg" />\x1f',
            u'',
            u'',
            0,
            u'')],
 'revlog': [(1511161489493, 1506856781937, 92, 2, 1, -600, 2500, 5185, 0)]}
[1511170921] sync.py:sync(): findChanges
[1511170923] sync.py:sync(): last local usn is 869
[1511170923] sync.py:sync(): mediaChanges resp count 0
[1511170923] media.py:mediaChangesZip(): +media zip, paste-6850472837122.jpg
[1511170923] media.py:mediaChangesZip(): +media zip, paste-6682969112578.jpg
[1511170924] sync.py:sync(): processed 2, serverUsn 871, clientUsn 869
[1511170924] sync.py:sync(): lastUsn in sync, updating local
[1511185264] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511185264] sched.py:_updateCutoff(): 227, 1511200800
[1511185265] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1511170921519,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1511185266,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 93}
[1511185265] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1511170921519,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1511185265,
 'usn': 93}
[1511185265] sync.py:sync(): no changes
[1511185265] sync.py:sync(): findChanges
[1511236067] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511236067] sched.py:_updateCutoff(): 228, 1511287200
[1511236067] sched.py:unburyCards(): []
[1511236069] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1511170921519,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1511236069,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 93}
[1511236069] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1511236067669,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1511236069,
 'usn': 93}
[1511236070] sync.py:sync(): server chunk, {u'cards': [], u'done': True, u'notes': [], u'revlog': []}
[1511236070] sync.py:newerRows(): cards, []
[1511236070] sync.py:newerRows(): notes, []
[1511236070] sync.py:sync(): client chunk, {'cards': [], 'done': True, 'notes': [], 'revlog': []}
[1511236071] sync.py:sync(): findChanges
[1511236072] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511236072] sched.py:_updateCutoff(): 228, 1511287200
[1511236073] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1511236073] sched.py:_updateCutoff(): 228, 1511287200
[1511236074] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1511236071064,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1498447943820,
 u'ts': 1511236074,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 94}
[1511236074] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1511236071064,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1511236074,
 'usn': 94}
[1511236074] sync.py:sync(): no changes
[1511236074] sync.py:sync(): findChanges
[1512790092] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512790092] sched.py:_updateCutoff(): 246, 1512842400
[1512790092] sched.py:unburyCards(): []
[1512790094] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1512256857144,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1511917772669,
 u'ts': 1512790094,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 5}
[1512790094] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1512790092230,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1512790094,
 'usn': 94}
[1512790094] sync.py:sync(): schema diff
[1512790097] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512790097] sched.py:_updateCutoff(): 246, 1512842400
[1512790102] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512790102] sched.py:_updateCutoff(): 246, 1512842400
[1512790104] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1512256857144,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1511917772669,
 u'ts': 1512790104,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 5}
[1512790104] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1512790092230,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1512790104,
 'usn': 94}
[1512790104] sync.py:sync(): schema diff
[1512871031] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512871031] sched.py:_updateCutoff(): 247, 1512928800
[1512871031] sched.py:unburyCards(): []
[1512871034] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1512256857144,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1511917772669,
 u'ts': 1512871033,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 5}
[1512871034] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1512871031864,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1512871034,
 'usn': 94}
[1512871034] sync.py:sync(): schema diff
[1512871036] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512871036] sched.py:_updateCutoff(): 247, 1512928800
[1512871084] collection.py:__init__(): /home/haziq/Documents/Anki/User 1/collection.anki2, 2.0.32
[1512871084] sched.py:_updateCutoff(): 247, 1512928800
[1512871086] sync.py:sync(): rmeta, {u'cont': True,
 u'mod': 1512256857144,
 u'msg': u'',
 u'musn': 0,
 u'scm': 1511917772669,
 u'ts': 1512871086,
 u'uname': u'hbnordin2@gmail.com',
 u'usn': 5}
[1512871086] sync.py:sync(): lmeta, {'cont': True,
 'mod': 1512871031864,
 'msg': '',
 'musn': 0,
 'scm': 1498447943820,
 'ts': 1512871086,
 'usn': 94}
[1512871086] sync.py:sync(): schema diff
